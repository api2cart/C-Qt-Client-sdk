/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountApi.h"
#include "OAIServerConfiguration.h"
#include <QJsonArray>
#include <QJsonDocument>

namespace OpenAPI {

OAIAccountApi::OAIAccountApi(const int timeOut)
    : _timeOut(timeOut),
      _manager(nullptr),
      _isResponseCompressionEnabled(false),
      _isRequestCompressionEnabled(false) {
    initializeServerConfigs();
}

OAIAccountApi::~OAIAccountApi() {
}

void OAIAccountApi::initializeServerConfigs() {
    //Default server
    QList<OAIServerConfiguration> defaultConf = QList<OAIServerConfiguration>();
    //varying endpoint server
    defaultConf.append(OAIServerConfiguration(
    QUrl("https://api.api2cart.local.com/v1.1"),
    "API2Cart Production Server",
    QMap<QString, OAIServerVariable>()));
    _serverConfigs.insert("accountCartAdd", defaultConf);
    _serverIndices.insert("accountCartAdd", 0);
    _serverConfigs.insert("accountCartList", defaultConf);
    _serverIndices.insert("accountCartList", 0);
    _serverConfigs.insert("accountConfigUpdate", defaultConf);
    _serverIndices.insert("accountConfigUpdate", 0);
    _serverConfigs.insert("accountFailedWebhooks", defaultConf);
    _serverIndices.insert("accountFailedWebhooks", 0);
    _serverConfigs.insert("accountSupportedPlatforms", defaultConf);
    _serverIndices.insert("accountSupportedPlatforms", 0);
}

/**
* returns 0 on success and -1, -2 or -3 on failure.
* -1 when the variable does not exist and -2 if the value is not defined in the enum and -3 if the operation or server index is not found
*/
int OAIAccountApi::setDefaultServerValue(int serverIndex, const QString &operation, const QString &variable, const QString &value) {
    auto it = _serverConfigs.find(operation);
    if (it != _serverConfigs.end() && serverIndex < it.value().size()) {
      return _serverConfigs[operation][serverIndex].setDefaultValue(variable,value);
    }
    return -3;
}
void OAIAccountApi::setServerIndex(const QString &operation, int serverIndex) {
    if (_serverIndices.contains(operation) && serverIndex < _serverConfigs.find(operation).value().size()) {
        _serverIndices[operation] = serverIndex;
    }
}

void OAIAccountApi::setApiKey(const QString &apiKeyName, const QString &apiKey) {
    _apiKeys.insert(apiKeyName, apiKey);
}

void OAIAccountApi::setBearerToken(const QString &token) {
    _bearerToken = token;
}

void OAIAccountApi::setUsername(const QString &username) {
    _username = username;
}

void OAIAccountApi::setPassword(const QString &password) {
    _password = password;
}


void OAIAccountApi::setTimeOut(const int timeOut) {
    _timeOut = timeOut;
}

void OAIAccountApi::setWorkingDirectory(const QString &path) {
    _workingDirectory = path;
}

void OAIAccountApi::setNetworkAccessManager(QNetworkAccessManager* manager) {
    _manager = manager;
}

/**
    * Appends a new ServerConfiguration to the config map for a specific operation.
    * @param operation The id to the target operation.
    * @param url A string that contains the URL of the server
    * @param description A String that describes the server
    * @param variables A map between a variable name and its value. The value is used for substitution in the server's URL template.
    * returns the index of the new server config on success and -1 if the operation is not found
    */
int OAIAccountApi::addServerConfiguration(const QString &operation, const QUrl &url, const QString &description, const QMap<QString, OAIServerVariable> &variables) {
    if (_serverConfigs.contains(operation)) {
        _serverConfigs[operation].append(OAIServerConfiguration(
                    url,
                    description,
                    variables));
        return _serverConfigs[operation].size()-1;
    } else {
        return -1;
    }
}

/**
    * Appends a new ServerConfiguration to the config map for a all operations and sets the index to that server.
    * @param url A string that contains the URL of the server
    * @param description A String that describes the server
    * @param variables A map between a variable name and its value. The value is used for substitution in the server's URL template.
    */
void OAIAccountApi::setNewServerForAllOperations(const QUrl &url, const QString &description, const QMap<QString, OAIServerVariable> &variables) {
    for (auto keyIt = _serverIndices.keyBegin(); keyIt != _serverIndices.keyEnd(); keyIt++) {
        setServerIndex(*keyIt, addServerConfiguration(*keyIt, url, description, variables));
    }
}

/**
    * Appends a new ServerConfiguration to the config map for an operations and sets the index to that server.
    * @param URL A string that contains the URL of the server
    * @param description A String that describes the server
    * @param variables A map between a variable name and its value. The value is used for substitution in the server's URL template.
    */
void OAIAccountApi::setNewServer(const QString &operation, const QUrl &url, const QString &description, const QMap<QString, OAIServerVariable> &variables) {
    setServerIndex(operation, addServerConfiguration(operation, url, description, variables));
}

void OAIAccountApi::addHeaders(const QString &key, const QString &value) {
    _defaultHeaders.insert(key, value);
}

void OAIAccountApi::enableRequestCompression() {
    _isRequestCompressionEnabled = true;
}

void OAIAccountApi::enableResponseCompression() {
    _isResponseCompressionEnabled = true;
}

void OAIAccountApi::abortRequests() {
    Q_EMIT abortRequestsSignal();
}

QString OAIAccountApi::getParamStylePrefix(const QString &style) {
    if (style == "matrix") {
        return ";";
    } else if (style == "label") {
        return ".";
    } else if (style == "form") {
        return "&";
    } else if (style == "simple") {
        return "";
    } else if (style == "spaceDelimited") {
        return "&";
    } else if (style == "pipeDelimited") {
        return "&";
    } else {
        return "none";
    }
}

QString OAIAccountApi::getParamStyleSuffix(const QString &style) {
    if (style == "matrix") {
        return "=";
    } else if (style == "label") {
        return "";
    } else if (style == "form") {
        return "=";
    } else if (style == "simple") {
        return "";
    } else if (style == "spaceDelimited") {
        return "=";
    } else if (style == "pipeDelimited") {
        return "=";
    } else {
        return "none";
    }
}

QString OAIAccountApi::getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode) {

    if (style == "matrix") {
        return (isExplode) ? ";" + name + "=" : ",";

    } else if (style == "label") {
        return (isExplode) ? "." : ",";

    } else if (style == "form") {
        return (isExplode) ? "&" + name + "=" : ",";

    } else if (style == "simple") {
        return ",";
    } else if (style == "spaceDelimited") {
        return (isExplode) ? "&" + name + "=" : " ";

    } else if (style == "pipeDelimited") {
        return (isExplode) ? "&" + name + "=" : "|";

    } else if (style == "deepObject") {
        return (isExplode) ? "&" : "none";

    } else {
        return "none";
    }
}

void OAIAccountApi::accountCartAdd(const OAIAccountCartAdd &oai_account_cart_add) {
    QString fullPath = QString(_serverConfigs["accountCartAdd"][_serverIndices.value("accountCartAdd")].URL()+"/account.cart.add.json");
    
    if (_apiKeys.contains("ApiKeyAuth")) {
        addHeaders("ApiKeyAuth",_apiKeys.find("ApiKeyAuth").value());
    }
    
    OAIHttpRequestWorker *worker = new OAIHttpRequestWorker(this, _manager);
    worker->setTimeOut(_timeOut);
    worker->setWorkingDirectory(_workingDirectory);
    OAIHttpRequestInput input(fullPath, "POST");

    {

        
        QByteArray output = oai_account_cart_add.asJson().toUtf8();
        input.request_body.append(output);
    }
    for (auto keyValueIt = _defaultHeaders.keyValueBegin(); keyValueIt != _defaultHeaders.keyValueEnd(); keyValueIt++) {
        input.headers.insert(keyValueIt->first, keyValueIt->second);
    }


    connect(worker, &OAIHttpRequestWorker::on_execution_finished, this, &OAIAccountApi::accountCartAddCallback);
    connect(this, &OAIAccountApi::abortRequestsSignal, worker, &QObject::deleteLater);
    connect(worker, &QObject::destroyed, this, [this] {
        if (findChildren<OAIHttpRequestWorker*>().count() == 0) {
            Q_EMIT allPendingRequestsCompleted();
        }
    });

    worker->execute(&input);
}

void OAIAccountApi::accountCartAddCallback(OAIHttpRequestWorker *worker) {
    QString error_str = worker->error_str;
    QNetworkReply::NetworkError error_type = worker->error_type;

    if (worker->error_type != QNetworkReply::NoError) {
        error_str = QString("%1, %2").arg(worker->error_str, QString(worker->response));
    }
    OAIAccountCartAdd_200_response output(QString(worker->response));
    worker->deleteLater();

    if (worker->error_type == QNetworkReply::NoError) {
        Q_EMIT accountCartAddSignal(output);
        Q_EMIT accountCartAddSignalFull(worker, output);
    } else {

#if defined(_MSC_VER)
// For MSVC
#pragma warning(push)
#pragma warning(disable : 4996)
#elif defined(__clang__)
// For Clang
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#elif defined(__GNUC__)
// For GCC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

        Q_EMIT accountCartAddSignalE(output, error_type, error_str);
        Q_EMIT accountCartAddSignalEFull(worker, error_type, error_str);

#if defined(_MSC_VER)
#pragma warning(pop)
#elif defined(__clang__)
#pragma clang diagnostic pop
#elif defined(__GNUC__)
#pragma GCC diagnostic pop
#endif

        Q_EMIT accountCartAddSignalError(output, error_type, error_str);
        Q_EMIT accountCartAddSignalErrorFull(worker, error_type, error_str);
    }
}

void OAIAccountApi::accountCartList(const ::OpenAPI::OptionalParam<QString> &store_url, const ::OpenAPI::OptionalParam<QString> &store_key, const ::OpenAPI::OptionalParam<QString> &request_from_date, const ::OpenAPI::OptionalParam<QString> &request_to_date, const ::OpenAPI::OptionalParam<QString> &params, const ::OpenAPI::OptionalParam<QString> &exclude) {
    QString fullPath = QString(_serverConfigs["accountCartList"][_serverIndices.value("accountCartList")].URL()+"/account.cart.list.json");
    
    if (_apiKeys.contains("ApiKeyAuth")) {
        addHeaders("ApiKeyAuth",_apiKeys.find("ApiKeyAuth").value());
    }
    
    QString queryPrefix, querySuffix, queryDelimiter, queryStyle;
    if (store_url.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "store_url", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("store_url")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(store_url.stringValue())));
    }
    if (store_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "store_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("store_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(store_key.stringValue())));
    }
    if (request_from_date.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "request_from_date", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("request_from_date")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(request_from_date.stringValue())));
    }
    if (request_to_date.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "request_to_date", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("request_to_date")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(request_to_date.stringValue())));
    }
    if (params.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "params", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("params")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(params.stringValue())));
    }
    if (exclude.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "exclude", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("exclude")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(exclude.stringValue())));
    }
    OAIHttpRequestWorker *worker = new OAIHttpRequestWorker(this, _manager);
    worker->setTimeOut(_timeOut);
    worker->setWorkingDirectory(_workingDirectory);
    OAIHttpRequestInput input(fullPath, "GET");


    for (auto keyValueIt = _defaultHeaders.keyValueBegin(); keyValueIt != _defaultHeaders.keyValueEnd(); keyValueIt++) {
        input.headers.insert(keyValueIt->first, keyValueIt->second);
    }


    connect(worker, &OAIHttpRequestWorker::on_execution_finished, this, &OAIAccountApi::accountCartListCallback);
    connect(this, &OAIAccountApi::abortRequestsSignal, worker, &QObject::deleteLater);
    connect(worker, &QObject::destroyed, this, [this] {
        if (findChildren<OAIHttpRequestWorker*>().count() == 0) {
            Q_EMIT allPendingRequestsCompleted();
        }
    });

    worker->execute(&input);
}

void OAIAccountApi::accountCartListCallback(OAIHttpRequestWorker *worker) {
    QString error_str = worker->error_str;
    QNetworkReply::NetworkError error_type = worker->error_type;

    if (worker->error_type != QNetworkReply::NoError) {
        error_str = QString("%1, %2").arg(worker->error_str, QString(worker->response));
    }
    OAIAccountCartList_200_response output(QString(worker->response));
    worker->deleteLater();

    if (worker->error_type == QNetworkReply::NoError) {
        Q_EMIT accountCartListSignal(output);
        Q_EMIT accountCartListSignalFull(worker, output);
    } else {

#if defined(_MSC_VER)
// For MSVC
#pragma warning(push)
#pragma warning(disable : 4996)
#elif defined(__clang__)
// For Clang
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#elif defined(__GNUC__)
// For GCC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

        Q_EMIT accountCartListSignalE(output, error_type, error_str);
        Q_EMIT accountCartListSignalEFull(worker, error_type, error_str);

#if defined(_MSC_VER)
#pragma warning(pop)
#elif defined(__clang__)
#pragma clang diagnostic pop
#elif defined(__GNUC__)
#pragma GCC diagnostic pop
#endif

        Q_EMIT accountCartListSignalError(output, error_type, error_str);
        Q_EMIT accountCartListSignalErrorFull(worker, error_type, error_str);
    }
}

void OAIAccountApi::accountConfigUpdate(const ::OpenAPI::OptionalParam<bool> &replace_parameters, const ::OpenAPI::OptionalParam<QString> &new_store_url, const ::OpenAPI::OptionalParam<QString> &new_store_key, const ::OpenAPI::OptionalParam<QString> &bridge_url, const ::OpenAPI::OptionalParam<QString> &store_root, const ::OpenAPI::OptionalParam<QString> &db_tables_prefix, const ::OpenAPI::OptionalParam<QString> &user_agent, const ::OpenAPI::OptionalParam<QString> &r_3dcart_private_key, const ::OpenAPI::OptionalParam<QString> &r_3dcart_access_token, const ::OpenAPI::OptionalParam<QString> &r_3dcartapi_api_key, const ::OpenAPI::OptionalParam<QString> &amazon_sp_client_id, const ::OpenAPI::OptionalParam<QString> &amazon_sp_client_secret, const ::OpenAPI::OptionalParam<QString> &amazon_sp_refresh_token, const ::OpenAPI::OptionalParam<QString> &amazon_sp_aws_region, const ::OpenAPI::OptionalParam<QString> &amazon_sp_api_environment, const ::OpenAPI::OptionalParam<QString> &amazon_seller_id, const ::OpenAPI::OptionalParam<QString> &aspdotnetstorefront_api_user, const ::OpenAPI::OptionalParam<QString> &aspdotnetstorefront_api_pass, const ::OpenAPI::OptionalParam<QString> &bigcommerceapi_admin_account, const ::OpenAPI::OptionalParam<QString> &bigcommerceapi_api_path, const ::OpenAPI::OptionalParam<QString> &bigcommerceapi_api_key, const ::OpenAPI::OptionalParam<QString> &bigcommerceapi_client_id, const ::OpenAPI::OptionalParam<QString> &bigcommerceapi_access_token, const ::OpenAPI::OptionalParam<QString> &bigcommerceapi_context, const ::OpenAPI::OptionalParam<QString> &bol_api_key, const ::OpenAPI::OptionalParam<QString> &bol_api_secret, const ::OpenAPI::OptionalParam<qint32> &bol_retailer_id, const ::OpenAPI::OptionalParam<QString> &demandware_client_id, const ::OpenAPI::OptionalParam<QString> &demandware_api_password, const ::OpenAPI::OptionalParam<QString> &demandware_user_name, const ::OpenAPI::OptionalParam<QString> &demandware_user_password, const ::OpenAPI::OptionalParam<QString> &ebay_client_id, const ::OpenAPI::OptionalParam<QString> &ebay_client_secret, const ::OpenAPI::OptionalParam<QString> &ebay_runame, const ::OpenAPI::OptionalParam<QString> &ebay_access_token, const ::OpenAPI::OptionalParam<QString> &ebay_refresh_token, const ::OpenAPI::OptionalParam<QString> &ebay_environment, const ::OpenAPI::OptionalParam<qint32> &ebay_site_id, const ::OpenAPI::OptionalParam<QString> &ecwid_acess_token, const ::OpenAPI::OptionalParam<QString> &ecwid_store_id, const ::OpenAPI::OptionalParam<QString> &lazada_app_id, const ::OpenAPI::OptionalParam<QString> &lazada_app_secret, const ::OpenAPI::OptionalParam<QString> &lazada_refresh_token, const ::OpenAPI::OptionalParam<QString> &lazada_region, const ::OpenAPI::OptionalParam<QString> &etsy_keystring, const ::OpenAPI::OptionalParam<QString> &etsy_shared_secret, const ::OpenAPI::OptionalParam<QString> &etsy_access_token, const ::OpenAPI::OptionalParam<QString> &etsy_token_secret, const ::OpenAPI::OptionalParam<QString> &etsy_client_id, const ::OpenAPI::OptionalParam<QString> &etsy_refresh_token, const ::OpenAPI::OptionalParam<QString> &facebook_app_id, const ::OpenAPI::OptionalParam<QString> &facebook_app_secret, const ::OpenAPI::OptionalParam<QString> &facebook_access_token, const ::OpenAPI::OptionalParam<QString> &facebook_business_id, const ::OpenAPI::OptionalParam<QString> &neto_api_key, const ::OpenAPI::OptionalParam<QString> &neto_api_username, const ::OpenAPI::OptionalParam<QString> &shopline_access_token, const ::OpenAPI::OptionalParam<QString> &shopline_app_key, const ::OpenAPI::OptionalParam<QString> &shopline_app_secret, const ::OpenAPI::OptionalParam<QString> &shopline_shared_secret, const ::OpenAPI::OptionalParam<QString> &shopify_access_token, const ::OpenAPI::OptionalParam<QString> &shopify_api_key, const ::OpenAPI::OptionalParam<QString> &shopify_api_password, const ::OpenAPI::OptionalParam<QString> &shopify_shared_secret, const ::OpenAPI::OptionalParam<QString> &shopee_partner_id, const ::OpenAPI::OptionalParam<QString> &shopee_partner_key, const ::OpenAPI::OptionalParam<QString> &shopee_shop_id, const ::OpenAPI::OptionalParam<QString> &shopee_refresh_token, const ::OpenAPI::OptionalParam<QString> &shopee_region, const ::OpenAPI::OptionalParam<QString> &shopee_environment, const ::OpenAPI::OptionalParam<QString> &shoplazza_access_token, const ::OpenAPI::OptionalParam<QString> &shoplazza_shared_secret, const ::OpenAPI::OptionalParam<QString> &miva_access_token, const ::OpenAPI::OptionalParam<QString> &miva_signature, const ::OpenAPI::OptionalParam<QString> &shopware_access_key, const ::OpenAPI::OptionalParam<QString> &shopware_api_key, const ::OpenAPI::OptionalParam<QString> &shopware_api_secret, const ::OpenAPI::OptionalParam<QString> &bigcartel_user_name, const ::OpenAPI::OptionalParam<QString> &bigcartel_password, const ::OpenAPI::OptionalParam<QString> &bricklink_consumer_key, const ::OpenAPI::OptionalParam<QString> &bricklink_consumer_secret, const ::OpenAPI::OptionalParam<QString> &bricklink_token, const ::OpenAPI::OptionalParam<QString> &bricklink_token_secret, const ::OpenAPI::OptionalParam<QString> &volusion_login, const ::OpenAPI::OptionalParam<QString> &volusion_password, const ::OpenAPI::OptionalParam<QString> &walmart_client_id, const ::OpenAPI::OptionalParam<QString> &walmart_client_secret, const ::OpenAPI::OptionalParam<QString> &walmart_environment, const ::OpenAPI::OptionalParam<QString> &walmart_channel_type, const ::OpenAPI::OptionalParam<QString> &walmart_region, const ::OpenAPI::OptionalParam<QString> &square_client_id, const ::OpenAPI::OptionalParam<QString> &square_client_secret, const ::OpenAPI::OptionalParam<QString> &square_refresh_token, const ::OpenAPI::OptionalParam<QString> &squarespace_api_key, const ::OpenAPI::OptionalParam<QString> &squarespace_client_id, const ::OpenAPI::OptionalParam<QString> &squarespace_client_secret, const ::OpenAPI::OptionalParam<QString> &squarespace_access_token, const ::OpenAPI::OptionalParam<QString> &squarespace_refresh_token, const ::OpenAPI::OptionalParam<QString> &hybris_client_id, const ::OpenAPI::OptionalParam<QString> &hybris_client_secret, const ::OpenAPI::OptionalParam<QString> &hybris_username, const ::OpenAPI::OptionalParam<QString> &hybris_password, const ::OpenAPI::OptionalParam<QList<QString>> &hybris_websites, const ::OpenAPI::OptionalParam<QString> &lightspeed_api_key, const ::OpenAPI::OptionalParam<QString> &lightspeed_api_secret, const ::OpenAPI::OptionalParam<QString> &commercehq_api_key, const ::OpenAPI::OptionalParam<QString> &commercehq_api_password, const ::OpenAPI::OptionalParam<QString> &wc_consumer_key, const ::OpenAPI::OptionalParam<QString> &wc_consumer_secret, const ::OpenAPI::OptionalParam<QString> &magento_consumer_key, const ::OpenAPI::OptionalParam<QString> &magento_consumer_secret, const ::OpenAPI::OptionalParam<QString> &magento_access_token, const ::OpenAPI::OptionalParam<QString> &magento_token_secret, const ::OpenAPI::OptionalParam<QString> &prestashop_webservice_key, const ::OpenAPI::OptionalParam<QString> &wix_app_id, const ::OpenAPI::OptionalParam<QString> &wix_app_secret_key, const ::OpenAPI::OptionalParam<QString> &wix_instance_id, const ::OpenAPI::OptionalParam<QString> &wix_refresh_token, const ::OpenAPI::OptionalParam<QString> &mercado_libre_app_id, const ::OpenAPI::OptionalParam<QString> &mercado_libre_app_secret_key, const ::OpenAPI::OptionalParam<QString> &mercado_libre_refresh_token, const ::OpenAPI::OptionalParam<qint32> &zid_client_id, const ::OpenAPI::OptionalParam<QString> &zid_client_secret, const ::OpenAPI::OptionalParam<QString> &zid_access_token, const ::OpenAPI::OptionalParam<QString> &zid_authorization, const ::OpenAPI::OptionalParam<QString> &zid_refresh_token, const ::OpenAPI::OptionalParam<QString> &flipkart_client_id, const ::OpenAPI::OptionalParam<QString> &flipkart_client_secret, const ::OpenAPI::OptionalParam<QString> &allegro_client_id, const ::OpenAPI::OptionalParam<QString> &allegro_client_secret, const ::OpenAPI::OptionalParam<QString> &allegro_access_token, const ::OpenAPI::OptionalParam<QString> &allegro_refresh_token, const ::OpenAPI::OptionalParam<QString> &allegro_environment, const ::OpenAPI::OptionalParam<QString> &zoho_client_id, const ::OpenAPI::OptionalParam<QString> &zoho_client_secret, const ::OpenAPI::OptionalParam<QString> &zoho_refresh_token, const ::OpenAPI::OptionalParam<QString> &zoho_region, const ::OpenAPI::OptionalParam<qint32> &tiendanube_user_id, const ::OpenAPI::OptionalParam<QString> &tiendanube_access_token, const ::OpenAPI::OptionalParam<QString> &tiendanube_client_secret, const ::OpenAPI::OptionalParam<QString> &otto_client_id, const ::OpenAPI::OptionalParam<QString> &otto_client_secret, const ::OpenAPI::OptionalParam<QString> &otto_app_id, const ::OpenAPI::OptionalParam<QString> &otto_refresh_token, const ::OpenAPI::OptionalParam<QString> &otto_environment, const ::OpenAPI::OptionalParam<QString> &otto_access_token, const ::OpenAPI::OptionalParam<QString> &tiktokshop_app_key, const ::OpenAPI::OptionalParam<QString> &tiktokshop_app_secret, const ::OpenAPI::OptionalParam<QString> &tiktokshop_refresh_token, const ::OpenAPI::OptionalParam<QString> &tiktokshop_access_token, const ::OpenAPI::OptionalParam<QString> &salla_client_id, const ::OpenAPI::OptionalParam<QString> &salla_client_secret, const ::OpenAPI::OptionalParam<QString> &salla_refresh_token, const ::OpenAPI::OptionalParam<QString> &salla_access_token, const ::OpenAPI::OptionalParam<QString> &temu_app_key, const ::OpenAPI::OptionalParam<QString> &temu_app_secret, const ::OpenAPI::OptionalParam<QString> &temu_access_token, const ::OpenAPI::OptionalParam<QString> &temu_region) {
    QString fullPath = QString(_serverConfigs["accountConfigUpdate"][_serverIndices.value("accountConfigUpdate")].URL()+"/account.config.update.json");
    
    if (_apiKeys.contains("StoreKeyAuth")) {
        addHeaders("StoreKeyAuth",_apiKeys.find("StoreKeyAuth").value());
    }
    
    if (_apiKeys.contains("ApiKeyAuth")) {
        addHeaders("ApiKeyAuth",_apiKeys.find("ApiKeyAuth").value());
    }
    
    QString queryPrefix, querySuffix, queryDelimiter, queryStyle;
    if (replace_parameters.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "replace_parameters", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("replace_parameters")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(replace_parameters.stringValue())));
    }
    if (new_store_url.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "new_store_url", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("new_store_url")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(new_store_url.stringValue())));
    }
    if (new_store_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "new_store_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("new_store_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(new_store_key.stringValue())));
    }
    if (bridge_url.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "bridge_url", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("bridge_url")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(bridge_url.stringValue())));
    }
    if (store_root.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "store_root", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("store_root")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(store_root.stringValue())));
    }
    if (db_tables_prefix.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "db_tables_prefix", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("db_tables_prefix")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(db_tables_prefix.stringValue())));
    }
    if (user_agent.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "user_agent", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("user_agent")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(user_agent.stringValue())));
    }
    if (r_3dcart_private_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "3dcart_private_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("3dcart_private_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(r_3dcart_private_key.stringValue())));
    }
    if (r_3dcart_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "3dcart_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("3dcart_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(r_3dcart_access_token.stringValue())));
    }
    if (r_3dcartapi_api_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "3dcartapi_api_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("3dcartapi_api_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(r_3dcartapi_api_key.stringValue())));
    }
    if (amazon_sp_client_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "amazon_sp_client_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("amazon_sp_client_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(amazon_sp_client_id.stringValue())));
    }
    if (amazon_sp_client_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "amazon_sp_client_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("amazon_sp_client_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(amazon_sp_client_secret.stringValue())));
    }
    if (amazon_sp_refresh_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "amazon_sp_refresh_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("amazon_sp_refresh_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(amazon_sp_refresh_token.stringValue())));
    }
    if (amazon_sp_aws_region.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "amazon_sp_aws_region", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("amazon_sp_aws_region")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(amazon_sp_aws_region.stringValue())));
    }
    if (amazon_sp_api_environment.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "amazon_sp_api_environment", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("amazon_sp_api_environment")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(amazon_sp_api_environment.stringValue())));
    }
    if (amazon_seller_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "amazon_seller_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("amazon_seller_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(amazon_seller_id.stringValue())));
    }
    if (aspdotnetstorefront_api_user.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "aspdotnetstorefront_api_user", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("aspdotnetstorefront_api_user")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(aspdotnetstorefront_api_user.stringValue())));
    }
    if (aspdotnetstorefront_api_pass.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "aspdotnetstorefront_api_pass", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("aspdotnetstorefront_api_pass")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(aspdotnetstorefront_api_pass.stringValue())));
    }
    if (bigcommerceapi_admin_account.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "bigcommerceapi_admin_account", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("bigcommerceapi_admin_account")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(bigcommerceapi_admin_account.stringValue())));
    }
    if (bigcommerceapi_api_path.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "bigcommerceapi_api_path", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("bigcommerceapi_api_path")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(bigcommerceapi_api_path.stringValue())));
    }
    if (bigcommerceapi_api_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "bigcommerceapi_api_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("bigcommerceapi_api_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(bigcommerceapi_api_key.stringValue())));
    }
    if (bigcommerceapi_client_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "bigcommerceapi_client_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("bigcommerceapi_client_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(bigcommerceapi_client_id.stringValue())));
    }
    if (bigcommerceapi_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "bigcommerceapi_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("bigcommerceapi_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(bigcommerceapi_access_token.stringValue())));
    }
    if (bigcommerceapi_context.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "bigcommerceapi_context", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("bigcommerceapi_context")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(bigcommerceapi_context.stringValue())));
    }
    if (bol_api_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "bol_api_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("bol_api_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(bol_api_key.stringValue())));
    }
    if (bol_api_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "bol_api_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("bol_api_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(bol_api_secret.stringValue())));
    }
    if (bol_retailer_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "bol_retailer_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("bol_retailer_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(bol_retailer_id.stringValue())));
    }
    if (demandware_client_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "demandware_client_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("demandware_client_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(demandware_client_id.stringValue())));
    }
    if (demandware_api_password.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "demandware_api_password", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("demandware_api_password")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(demandware_api_password.stringValue())));
    }
    if (demandware_user_name.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "demandware_user_name", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("demandware_user_name")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(demandware_user_name.stringValue())));
    }
    if (demandware_user_password.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "demandware_user_password", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("demandware_user_password")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(demandware_user_password.stringValue())));
    }
    if (ebay_client_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "ebay_client_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("ebay_client_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(ebay_client_id.stringValue())));
    }
    if (ebay_client_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "ebay_client_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("ebay_client_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(ebay_client_secret.stringValue())));
    }
    if (ebay_runame.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "ebay_runame", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("ebay_runame")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(ebay_runame.stringValue())));
    }
    if (ebay_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "ebay_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("ebay_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(ebay_access_token.stringValue())));
    }
    if (ebay_refresh_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "ebay_refresh_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("ebay_refresh_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(ebay_refresh_token.stringValue())));
    }
    if (ebay_environment.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "ebay_environment", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("ebay_environment")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(ebay_environment.stringValue())));
    }
    if (ebay_site_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "ebay_site_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("ebay_site_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(ebay_site_id.stringValue())));
    }
    if (ecwid_acess_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "ecwid_acess_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("ecwid_acess_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(ecwid_acess_token.stringValue())));
    }
    if (ecwid_store_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "ecwid_store_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("ecwid_store_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(ecwid_store_id.stringValue())));
    }
    if (lazada_app_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "lazada_app_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("lazada_app_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(lazada_app_id.stringValue())));
    }
    if (lazada_app_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "lazada_app_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("lazada_app_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(lazada_app_secret.stringValue())));
    }
    if (lazada_refresh_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "lazada_refresh_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("lazada_refresh_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(lazada_refresh_token.stringValue())));
    }
    if (lazada_region.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "lazada_region", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("lazada_region")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(lazada_region.stringValue())));
    }
    if (etsy_keystring.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "etsy_keystring", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("etsy_keystring")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(etsy_keystring.stringValue())));
    }
    if (etsy_shared_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "etsy_shared_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("etsy_shared_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(etsy_shared_secret.stringValue())));
    }
    if (etsy_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "etsy_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("etsy_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(etsy_access_token.stringValue())));
    }
    if (etsy_token_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "etsy_token_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("etsy_token_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(etsy_token_secret.stringValue())));
    }
    if (etsy_client_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "etsy_client_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("etsy_client_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(etsy_client_id.stringValue())));
    }
    if (etsy_refresh_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "etsy_refresh_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("etsy_refresh_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(etsy_refresh_token.stringValue())));
    }
    if (facebook_app_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "facebook_app_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("facebook_app_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(facebook_app_id.stringValue())));
    }
    if (facebook_app_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "facebook_app_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("facebook_app_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(facebook_app_secret.stringValue())));
    }
    if (facebook_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "facebook_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("facebook_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(facebook_access_token.stringValue())));
    }
    if (facebook_business_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "facebook_business_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("facebook_business_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(facebook_business_id.stringValue())));
    }
    if (neto_api_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "neto_api_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("neto_api_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(neto_api_key.stringValue())));
    }
    if (neto_api_username.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "neto_api_username", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("neto_api_username")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(neto_api_username.stringValue())));
    }
    if (shopline_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopline_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopline_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopline_access_token.stringValue())));
    }
    if (shopline_app_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopline_app_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopline_app_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopline_app_key.stringValue())));
    }
    if (shopline_app_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopline_app_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopline_app_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopline_app_secret.stringValue())));
    }
    if (shopline_shared_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopline_shared_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopline_shared_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopline_shared_secret.stringValue())));
    }
    if (shopify_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopify_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopify_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopify_access_token.stringValue())));
    }
    if (shopify_api_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopify_api_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopify_api_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopify_api_key.stringValue())));
    }
    if (shopify_api_password.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopify_api_password", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopify_api_password")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopify_api_password.stringValue())));
    }
    if (shopify_shared_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopify_shared_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopify_shared_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopify_shared_secret.stringValue())));
    }
    if (shopee_partner_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopee_partner_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopee_partner_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopee_partner_id.stringValue())));
    }
    if (shopee_partner_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopee_partner_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopee_partner_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopee_partner_key.stringValue())));
    }
    if (shopee_shop_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopee_shop_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopee_shop_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopee_shop_id.stringValue())));
    }
    if (shopee_refresh_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopee_refresh_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopee_refresh_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopee_refresh_token.stringValue())));
    }
    if (shopee_region.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopee_region", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopee_region")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopee_region.stringValue())));
    }
    if (shopee_environment.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopee_environment", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopee_environment")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopee_environment.stringValue())));
    }
    if (shoplazza_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shoplazza_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shoplazza_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shoplazza_access_token.stringValue())));
    }
    if (shoplazza_shared_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shoplazza_shared_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shoplazza_shared_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shoplazza_shared_secret.stringValue())));
    }
    if (miva_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "miva_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("miva_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(miva_access_token.stringValue())));
    }
    if (miva_signature.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "miva_signature", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("miva_signature")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(miva_signature.stringValue())));
    }
    if (shopware_access_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopware_access_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopware_access_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopware_access_key.stringValue())));
    }
    if (shopware_api_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopware_api_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopware_api_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopware_api_key.stringValue())));
    }
    if (shopware_api_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "shopware_api_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("shopware_api_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(shopware_api_secret.stringValue())));
    }
    if (bigcartel_user_name.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "bigcartel_user_name", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("bigcartel_user_name")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(bigcartel_user_name.stringValue())));
    }
    if (bigcartel_password.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "bigcartel_password", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("bigcartel_password")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(bigcartel_password.stringValue())));
    }
    if (bricklink_consumer_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "bricklink_consumer_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("bricklink_consumer_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(bricklink_consumer_key.stringValue())));
    }
    if (bricklink_consumer_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "bricklink_consumer_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("bricklink_consumer_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(bricklink_consumer_secret.stringValue())));
    }
    if (bricklink_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "bricklink_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("bricklink_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(bricklink_token.stringValue())));
    }
    if (bricklink_token_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "bricklink_token_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("bricklink_token_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(bricklink_token_secret.stringValue())));
    }
    if (volusion_login.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "volusion_login", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("volusion_login")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(volusion_login.stringValue())));
    }
    if (volusion_password.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "volusion_password", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("volusion_password")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(volusion_password.stringValue())));
    }
    if (walmart_client_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "walmart_client_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("walmart_client_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(walmart_client_id.stringValue())));
    }
    if (walmart_client_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "walmart_client_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("walmart_client_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(walmart_client_secret.stringValue())));
    }
    if (walmart_environment.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "walmart_environment", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("walmart_environment")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(walmart_environment.stringValue())));
    }
    if (walmart_channel_type.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "walmart_channel_type", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("walmart_channel_type")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(walmart_channel_type.stringValue())));
    }
    if (walmart_region.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "walmart_region", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("walmart_region")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(walmart_region.stringValue())));
    }
    if (square_client_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "square_client_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("square_client_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(square_client_id.stringValue())));
    }
    if (square_client_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "square_client_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("square_client_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(square_client_secret.stringValue())));
    }
    if (square_refresh_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "square_refresh_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("square_refresh_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(square_refresh_token.stringValue())));
    }
    if (squarespace_api_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "squarespace_api_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("squarespace_api_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(squarespace_api_key.stringValue())));
    }
    if (squarespace_client_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "squarespace_client_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("squarespace_client_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(squarespace_client_id.stringValue())));
    }
    if (squarespace_client_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "squarespace_client_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("squarespace_client_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(squarespace_client_secret.stringValue())));
    }
    if (squarespace_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "squarespace_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("squarespace_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(squarespace_access_token.stringValue())));
    }
    if (squarespace_refresh_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "squarespace_refresh_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("squarespace_refresh_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(squarespace_refresh_token.stringValue())));
    }
    if (hybris_client_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "hybris_client_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("hybris_client_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(hybris_client_id.stringValue())));
    }
    if (hybris_client_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "hybris_client_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("hybris_client_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(hybris_client_secret.stringValue())));
    }
    if (hybris_username.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "hybris_username", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("hybris_username")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(hybris_username.stringValue())));
    }
    if (hybris_password.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "hybris_password", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("hybris_password")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(hybris_password.stringValue())));
    }
    if (hybris_websites.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "hybris_websites", true);
        if (hybris_websites.value().size() > 0) {
            if (QString("multi").indexOf("multi") == 0) {
                for (QString t : hybris_websites.value()) {
                    if (fullPath.indexOf("?") > 0)
                        fullPath.append(queryPrefix);
                    else
                        fullPath.append("?");
                    fullPath.append("hybris_websites=").append(::OpenAPI::toStringValue(t));
                }
            } else if (QString("multi").indexOf("ssv") == 0) {
                if (fullPath.indexOf("?") > 0)
                    fullPath.append("&");
                else
                    fullPath.append("?").append(queryPrefix).append("hybris_websites").append(querySuffix);
                qint32 count = 0;
                for (QString t : hybris_websites.value()) {
                    if (count > 0) {
                        fullPath.append((true)? queryDelimiter : QUrl::toPercentEncoding(queryDelimiter));
                    }
                    fullPath.append(::OpenAPI::toStringValue(t));
                    count++;
                }
            } else if (QString("multi").indexOf("tsv") == 0) {
                if (fullPath.indexOf("?") > 0)
                    fullPath.append("&");
                else
                    fullPath.append("?").append(queryPrefix).append("hybris_websites").append(querySuffix);
                qint32 count = 0;
                for (QString t : hybris_websites.value()) {
                    if (count > 0) {
                        fullPath.append("\t");
                    }
                    fullPath.append(::OpenAPI::toStringValue(t));
                    count++;
                }
            } else if (QString("multi").indexOf("csv") == 0) {
                if (fullPath.indexOf("?") > 0)
                    fullPath.append("&");
                else
                    fullPath.append("?").append(queryPrefix).append("hybris_websites").append(querySuffix);
                qint32 count = 0;
                for (QString t : hybris_websites.value()) {
                    if (count > 0) {
                        fullPath.append(queryDelimiter);
                    }
                    fullPath.append(::OpenAPI::toStringValue(t));
                    count++;
                }
            } else if (QString("multi").indexOf("pipes") == 0) {
                if (fullPath.indexOf("?") > 0)
                    fullPath.append("&");
                else
                    fullPath.append("?").append(queryPrefix).append("hybris_websites").append(querySuffix);
                qint32 count = 0;
                for (QString t : hybris_websites.value()) {
                    if (count > 0) {
                        fullPath.append(queryDelimiter);
                    }
                    fullPath.append(::OpenAPI::toStringValue(t));
                    count++;
                }
            } else if (QString("multi").indexOf("deepObject") == 0) {
                if (fullPath.indexOf("?") > 0)
                    fullPath.append("&");
                else
                    fullPath.append("?").append(queryPrefix).append("hybris_websites").append(querySuffix);
                qint32 count = 0;
                for (QString t : hybris_websites.value()) {
                    if (count > 0) {
                        fullPath.append(queryDelimiter);
                    }
                    fullPath.append(::OpenAPI::toStringValue(t));
                    count++;
                }
            }
        }
    }
    if (lightspeed_api_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "lightspeed_api_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("lightspeed_api_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(lightspeed_api_key.stringValue())));
    }
    if (lightspeed_api_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "lightspeed_api_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("lightspeed_api_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(lightspeed_api_secret.stringValue())));
    }
    if (commercehq_api_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "commercehq_api_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("commercehq_api_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(commercehq_api_key.stringValue())));
    }
    if (commercehq_api_password.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "commercehq_api_password", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("commercehq_api_password")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(commercehq_api_password.stringValue())));
    }
    if (wc_consumer_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "wc_consumer_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("wc_consumer_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(wc_consumer_key.stringValue())));
    }
    if (wc_consumer_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "wc_consumer_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("wc_consumer_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(wc_consumer_secret.stringValue())));
    }
    if (magento_consumer_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "magento_consumer_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("magento_consumer_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(magento_consumer_key.stringValue())));
    }
    if (magento_consumer_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "magento_consumer_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("magento_consumer_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(magento_consumer_secret.stringValue())));
    }
    if (magento_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "magento_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("magento_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(magento_access_token.stringValue())));
    }
    if (magento_token_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "magento_token_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("magento_token_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(magento_token_secret.stringValue())));
    }
    if (prestashop_webservice_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "prestashop_webservice_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("prestashop_webservice_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(prestashop_webservice_key.stringValue())));
    }
    if (wix_app_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "wix_app_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("wix_app_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(wix_app_id.stringValue())));
    }
    if (wix_app_secret_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "wix_app_secret_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("wix_app_secret_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(wix_app_secret_key.stringValue())));
    }
    if (wix_instance_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "wix_instance_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("wix_instance_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(wix_instance_id.stringValue())));
    }
    if (wix_refresh_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "wix_refresh_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("wix_refresh_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(wix_refresh_token.stringValue())));
    }
    if (mercado_libre_app_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "mercado_libre_app_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("mercado_libre_app_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(mercado_libre_app_id.stringValue())));
    }
    if (mercado_libre_app_secret_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "mercado_libre_app_secret_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("mercado_libre_app_secret_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(mercado_libre_app_secret_key.stringValue())));
    }
    if (mercado_libre_refresh_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "mercado_libre_refresh_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("mercado_libre_refresh_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(mercado_libre_refresh_token.stringValue())));
    }
    if (zid_client_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "zid_client_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("zid_client_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(zid_client_id.stringValue())));
    }
    if (zid_client_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "zid_client_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("zid_client_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(zid_client_secret.stringValue())));
    }
    if (zid_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "zid_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("zid_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(zid_access_token.stringValue())));
    }
    if (zid_authorization.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "zid_authorization", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("zid_authorization")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(zid_authorization.stringValue())));
    }
    if (zid_refresh_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "zid_refresh_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("zid_refresh_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(zid_refresh_token.stringValue())));
    }
    if (flipkart_client_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "flipkart_client_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("flipkart_client_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(flipkart_client_id.stringValue())));
    }
    if (flipkart_client_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "flipkart_client_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("flipkart_client_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(flipkart_client_secret.stringValue())));
    }
    if (allegro_client_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "allegro_client_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("allegro_client_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(allegro_client_id.stringValue())));
    }
    if (allegro_client_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "allegro_client_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("allegro_client_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(allegro_client_secret.stringValue())));
    }
    if (allegro_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "allegro_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("allegro_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(allegro_access_token.stringValue())));
    }
    if (allegro_refresh_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "allegro_refresh_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("allegro_refresh_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(allegro_refresh_token.stringValue())));
    }
    if (allegro_environment.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "allegro_environment", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("allegro_environment")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(allegro_environment.stringValue())));
    }
    if (zoho_client_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "zoho_client_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("zoho_client_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(zoho_client_id.stringValue())));
    }
    if (zoho_client_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "zoho_client_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("zoho_client_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(zoho_client_secret.stringValue())));
    }
    if (zoho_refresh_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "zoho_refresh_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("zoho_refresh_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(zoho_refresh_token.stringValue())));
    }
    if (zoho_region.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "zoho_region", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("zoho_region")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(zoho_region.stringValue())));
    }
    if (tiendanube_user_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "tiendanube_user_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("tiendanube_user_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(tiendanube_user_id.stringValue())));
    }
    if (tiendanube_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "tiendanube_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("tiendanube_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(tiendanube_access_token.stringValue())));
    }
    if (tiendanube_client_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "tiendanube_client_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("tiendanube_client_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(tiendanube_client_secret.stringValue())));
    }
    if (otto_client_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "otto_client_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("otto_client_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(otto_client_id.stringValue())));
    }
    if (otto_client_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "otto_client_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("otto_client_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(otto_client_secret.stringValue())));
    }
    if (otto_app_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "otto_app_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("otto_app_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(otto_app_id.stringValue())));
    }
    if (otto_refresh_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "otto_refresh_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("otto_refresh_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(otto_refresh_token.stringValue())));
    }
    if (otto_environment.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "otto_environment", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("otto_environment")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(otto_environment.stringValue())));
    }
    if (otto_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "otto_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("otto_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(otto_access_token.stringValue())));
    }
    if (tiktokshop_app_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "tiktokshop_app_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("tiktokshop_app_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(tiktokshop_app_key.stringValue())));
    }
    if (tiktokshop_app_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "tiktokshop_app_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("tiktokshop_app_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(tiktokshop_app_secret.stringValue())));
    }
    if (tiktokshop_refresh_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "tiktokshop_refresh_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("tiktokshop_refresh_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(tiktokshop_refresh_token.stringValue())));
    }
    if (tiktokshop_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "tiktokshop_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("tiktokshop_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(tiktokshop_access_token.stringValue())));
    }
    if (salla_client_id.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "salla_client_id", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("salla_client_id")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(salla_client_id.stringValue())));
    }
    if (salla_client_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "salla_client_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("salla_client_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(salla_client_secret.stringValue())));
    }
    if (salla_refresh_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "salla_refresh_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("salla_refresh_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(salla_refresh_token.stringValue())));
    }
    if (salla_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "salla_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("salla_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(salla_access_token.stringValue())));
    }
    if (temu_app_key.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "temu_app_key", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("temu_app_key")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(temu_app_key.stringValue())));
    }
    if (temu_app_secret.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "temu_app_secret", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("temu_app_secret")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(temu_app_secret.stringValue())));
    }
    if (temu_access_token.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "temu_access_token", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("temu_access_token")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(temu_access_token.stringValue())));
    }
    if (temu_region.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "temu_region", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("temu_region")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(temu_region.stringValue())));
    }
    OAIHttpRequestWorker *worker = new OAIHttpRequestWorker(this, _manager);
    worker->setTimeOut(_timeOut);
    worker->setWorkingDirectory(_workingDirectory);
    OAIHttpRequestInput input(fullPath, "PUT");


    for (auto keyValueIt = _defaultHeaders.keyValueBegin(); keyValueIt != _defaultHeaders.keyValueEnd(); keyValueIt++) {
        input.headers.insert(keyValueIt->first, keyValueIt->second);
    }


    connect(worker, &OAIHttpRequestWorker::on_execution_finished, this, &OAIAccountApi::accountConfigUpdateCallback);
    connect(this, &OAIAccountApi::abortRequestsSignal, worker, &QObject::deleteLater);
    connect(worker, &QObject::destroyed, this, [this] {
        if (findChildren<OAIHttpRequestWorker*>().count() == 0) {
            Q_EMIT allPendingRequestsCompleted();
        }
    });

    worker->execute(&input);
}

void OAIAccountApi::accountConfigUpdateCallback(OAIHttpRequestWorker *worker) {
    QString error_str = worker->error_str;
    QNetworkReply::NetworkError error_type = worker->error_type;

    if (worker->error_type != QNetworkReply::NoError) {
        error_str = QString("%1, %2").arg(worker->error_str, QString(worker->response));
    }
    OAIAccountConfigUpdate_200_response output(QString(worker->response));
    worker->deleteLater();

    if (worker->error_type == QNetworkReply::NoError) {
        Q_EMIT accountConfigUpdateSignal(output);
        Q_EMIT accountConfigUpdateSignalFull(worker, output);
    } else {

#if defined(_MSC_VER)
// For MSVC
#pragma warning(push)
#pragma warning(disable : 4996)
#elif defined(__clang__)
// For Clang
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#elif defined(__GNUC__)
// For GCC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

        Q_EMIT accountConfigUpdateSignalE(output, error_type, error_str);
        Q_EMIT accountConfigUpdateSignalEFull(worker, error_type, error_str);

#if defined(_MSC_VER)
#pragma warning(pop)
#elif defined(__clang__)
#pragma clang diagnostic pop
#elif defined(__GNUC__)
#pragma GCC diagnostic pop
#endif

        Q_EMIT accountConfigUpdateSignalError(output, error_type, error_str);
        Q_EMIT accountConfigUpdateSignalErrorFull(worker, error_type, error_str);
    }
}

void OAIAccountApi::accountFailedWebhooks(const ::OpenAPI::OptionalParam<qint32> &start, const ::OpenAPI::OptionalParam<qint32> &count, const ::OpenAPI::OptionalParam<QString> &ids) {
    QString fullPath = QString(_serverConfigs["accountFailedWebhooks"][_serverIndices.value("accountFailedWebhooks")].URL()+"/account.failed_webhooks.json");
    
    if (_apiKeys.contains("ApiKeyAuth")) {
        addHeaders("ApiKeyAuth",_apiKeys.find("ApiKeyAuth").value());
    }
    
    QString queryPrefix, querySuffix, queryDelimiter, queryStyle;
    if (start.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "start", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("start")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(start.stringValue())));
    }
    if (count.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "count", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("count")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(count.stringValue())));
    }
    if (ids.hasValue())
    {
        queryStyle = "form";
        if (queryStyle == "")
            queryStyle = "form";
        queryPrefix = getParamStylePrefix(queryStyle);
        querySuffix = getParamStyleSuffix(queryStyle);
        queryDelimiter = getParamStyleDelimiter(queryStyle, "ids", true);
        if (fullPath.indexOf("?") > 0)
            fullPath.append(queryPrefix);
        else
            fullPath.append("?");

        fullPath.append(QUrl::toPercentEncoding("ids")).append(querySuffix).append(QUrl::toPercentEncoding(::OpenAPI::toStringValue(ids.stringValue())));
    }
    OAIHttpRequestWorker *worker = new OAIHttpRequestWorker(this, _manager);
    worker->setTimeOut(_timeOut);
    worker->setWorkingDirectory(_workingDirectory);
    OAIHttpRequestInput input(fullPath, "GET");


    for (auto keyValueIt = _defaultHeaders.keyValueBegin(); keyValueIt != _defaultHeaders.keyValueEnd(); keyValueIt++) {
        input.headers.insert(keyValueIt->first, keyValueIt->second);
    }


    connect(worker, &OAIHttpRequestWorker::on_execution_finished, this, &OAIAccountApi::accountFailedWebhooksCallback);
    connect(this, &OAIAccountApi::abortRequestsSignal, worker, &QObject::deleteLater);
    connect(worker, &QObject::destroyed, this, [this] {
        if (findChildren<OAIHttpRequestWorker*>().count() == 0) {
            Q_EMIT allPendingRequestsCompleted();
        }
    });

    worker->execute(&input);
}

void OAIAccountApi::accountFailedWebhooksCallback(OAIHttpRequestWorker *worker) {
    QString error_str = worker->error_str;
    QNetworkReply::NetworkError error_type = worker->error_type;

    if (worker->error_type != QNetworkReply::NoError) {
        error_str = QString("%1, %2").arg(worker->error_str, QString(worker->response));
    }
    OAIAccountFailedWebhooks_200_response output(QString(worker->response));
    worker->deleteLater();

    if (worker->error_type == QNetworkReply::NoError) {
        Q_EMIT accountFailedWebhooksSignal(output);
        Q_EMIT accountFailedWebhooksSignalFull(worker, output);
    } else {

#if defined(_MSC_VER)
// For MSVC
#pragma warning(push)
#pragma warning(disable : 4996)
#elif defined(__clang__)
// For Clang
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#elif defined(__GNUC__)
// For GCC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

        Q_EMIT accountFailedWebhooksSignalE(output, error_type, error_str);
        Q_EMIT accountFailedWebhooksSignalEFull(worker, error_type, error_str);

#if defined(_MSC_VER)
#pragma warning(pop)
#elif defined(__clang__)
#pragma clang diagnostic pop
#elif defined(__GNUC__)
#pragma GCC diagnostic pop
#endif

        Q_EMIT accountFailedWebhooksSignalError(output, error_type, error_str);
        Q_EMIT accountFailedWebhooksSignalErrorFull(worker, error_type, error_str);
    }
}

void OAIAccountApi::accountSupportedPlatforms() {
    QString fullPath = QString(_serverConfigs["accountSupportedPlatforms"][_serverIndices.value("accountSupportedPlatforms")].URL()+"/account.supported_platforms.json");
    
    if (_apiKeys.contains("ApiKeyAuth")) {
        addHeaders("ApiKeyAuth",_apiKeys.find("ApiKeyAuth").value());
    }
    
    OAIHttpRequestWorker *worker = new OAIHttpRequestWorker(this, _manager);
    worker->setTimeOut(_timeOut);
    worker->setWorkingDirectory(_workingDirectory);
    OAIHttpRequestInput input(fullPath, "GET");


    for (auto keyValueIt = _defaultHeaders.keyValueBegin(); keyValueIt != _defaultHeaders.keyValueEnd(); keyValueIt++) {
        input.headers.insert(keyValueIt->first, keyValueIt->second);
    }


    connect(worker, &OAIHttpRequestWorker::on_execution_finished, this, &OAIAccountApi::accountSupportedPlatformsCallback);
    connect(this, &OAIAccountApi::abortRequestsSignal, worker, &QObject::deleteLater);
    connect(worker, &QObject::destroyed, this, [this] {
        if (findChildren<OAIHttpRequestWorker*>().count() == 0) {
            Q_EMIT allPendingRequestsCompleted();
        }
    });

    worker->execute(&input);
}

void OAIAccountApi::accountSupportedPlatformsCallback(OAIHttpRequestWorker *worker) {
    QString error_str = worker->error_str;
    QNetworkReply::NetworkError error_type = worker->error_type;

    if (worker->error_type != QNetworkReply::NoError) {
        error_str = QString("%1, %2").arg(worker->error_str, QString(worker->response));
    }
    OAIAccountSupportedPlatforms_200_response output(QString(worker->response));
    worker->deleteLater();

    if (worker->error_type == QNetworkReply::NoError) {
        Q_EMIT accountSupportedPlatformsSignal(output);
        Q_EMIT accountSupportedPlatformsSignalFull(worker, output);
    } else {

#if defined(_MSC_VER)
// For MSVC
#pragma warning(push)
#pragma warning(disable : 4996)
#elif defined(__clang__)
// For Clang
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"
#elif defined(__GNUC__)
// For GCC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
#endif

        Q_EMIT accountSupportedPlatformsSignalE(output, error_type, error_str);
        Q_EMIT accountSupportedPlatformsSignalEFull(worker, error_type, error_str);

#if defined(_MSC_VER)
#pragma warning(pop)
#elif defined(__clang__)
#pragma clang diagnostic pop
#elif defined(__GNUC__)
#pragma GCC diagnostic pop
#endif

        Q_EMIT accountSupportedPlatformsSignalError(output, error_type, error_str);
        Q_EMIT accountSupportedPlatformsSignalErrorFull(worker, error_type, error_str);
    }
}

void OAIAccountApi::tokenAvailable(){

    oauthToken token;
    switch (_OauthMethod) {
    case 1: //implicit flow
        token = _implicitFlow.getToken(_latestScope.join(" "));
        if(token.isValid()){
            _latestInput.headers.insert("Authorization", "Bearer " + token.getToken());
            _latestWorker->execute(&_latestInput);
        }else{
            _implicitFlow.removeToken(_latestScope.join(" "));
            qDebug() << "Could not retrieve a valid token";
        }
        break;
    case 2: //authorization flow
        token = _authFlow.getToken(_latestScope.join(" "));
        if(token.isValid()){
            _latestInput.headers.insert("Authorization", "Bearer " + token.getToken());
            _latestWorker->execute(&_latestInput);
        }else{
            _authFlow.removeToken(_latestScope.join(" "));
            qDebug() << "Could not retrieve a valid token";
        }
        break;
    case 3: //client credentials flow
        token = _credentialFlow.getToken(_latestScope.join(" "));
        if(token.isValid()){
            _latestInput.headers.insert("Authorization", "Bearer " + token.getToken());
            _latestWorker->execute(&_latestInput);
        }else{
            _credentialFlow.removeToken(_latestScope.join(" "));
            qDebug() << "Could not retrieve a valid token";
        }
        break;
    case 4: //resource owner password flow
        token = _passwordFlow.getToken(_latestScope.join(" "));
        if(token.isValid()){
            _latestInput.headers.insert("Authorization", "Bearer " + token.getToken());
            _latestWorker->execute(&_latestInput);
        }else{
            _credentialFlow.removeToken(_latestScope.join(" "));
            qDebug() << "Could not retrieve a valid token";
        }
        break;
    default:
        qDebug() << "No Oauth method set!";
        break;
    }
}
} // namespace OpenAPI
