/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductAdd_sales_tax.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductAdd_sales_tax::OAIProductAdd_sales_tax(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductAdd_sales_tax::OAIProductAdd_sales_tax() {
    this->initializeModel();
}

OAIProductAdd_sales_tax::~OAIProductAdd_sales_tax() {}

void OAIProductAdd_sales_tax::initializeModel() {

    m_tax_percent_isSet = false;
    m_tax_percent_isValid = false;

    m_tax_state_isSet = false;
    m_tax_state_isValid = false;

    m_shipping_inc_in_tax_isSet = false;
    m_shipping_inc_in_tax_isValid = false;
}

void OAIProductAdd_sales_tax::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductAdd_sales_tax::fromJsonObject(QJsonObject json) {

    m_tax_percent_isValid = ::OpenAPI::fromJsonValue(m_tax_percent, json[QString("tax_percent")]);
    m_tax_percent_isSet = !json[QString("tax_percent")].isNull() && m_tax_percent_isValid;

    m_tax_state_isValid = ::OpenAPI::fromJsonValue(m_tax_state, json[QString("tax_state")]);
    m_tax_state_isSet = !json[QString("tax_state")].isNull() && m_tax_state_isValid;

    m_shipping_inc_in_tax_isValid = ::OpenAPI::fromJsonValue(m_shipping_inc_in_tax, json[QString("shipping_inc_in_tax")]);
    m_shipping_inc_in_tax_isSet = !json[QString("shipping_inc_in_tax")].isNull() && m_shipping_inc_in_tax_isValid;
}

QString OAIProductAdd_sales_tax::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductAdd_sales_tax::asJsonObject() const {
    QJsonObject obj;
    if (m_tax_percent_isSet) {
        obj.insert(QString("tax_percent"), ::OpenAPI::toJsonValue(m_tax_percent));
    }
    if (m_tax_state_isSet) {
        obj.insert(QString("tax_state"), ::OpenAPI::toJsonValue(m_tax_state));
    }
    if (m_shipping_inc_in_tax_isSet) {
        obj.insert(QString("shipping_inc_in_tax"), ::OpenAPI::toJsonValue(m_shipping_inc_in_tax));
    }
    return obj;
}

double OAIProductAdd_sales_tax::getTaxPercent() const {
    return m_tax_percent;
}
void OAIProductAdd_sales_tax::setTaxPercent(const double &tax_percent) {
    m_tax_percent = tax_percent;
    m_tax_percent_isSet = true;
}

bool OAIProductAdd_sales_tax::is_tax_percent_Set() const{
    return m_tax_percent_isSet;
}

bool OAIProductAdd_sales_tax::is_tax_percent_Valid() const{
    return m_tax_percent_isValid;
}

QString OAIProductAdd_sales_tax::getTaxState() const {
    return m_tax_state;
}
void OAIProductAdd_sales_tax::setTaxState(const QString &tax_state) {
    m_tax_state = tax_state;
    m_tax_state_isSet = true;
}

bool OAIProductAdd_sales_tax::is_tax_state_Set() const{
    return m_tax_state_isSet;
}

bool OAIProductAdd_sales_tax::is_tax_state_Valid() const{
    return m_tax_state_isValid;
}

bool OAIProductAdd_sales_tax::isShippingIncInTax() const {
    return m_shipping_inc_in_tax;
}
void OAIProductAdd_sales_tax::setShippingIncInTax(const bool &shipping_inc_in_tax) {
    m_shipping_inc_in_tax = shipping_inc_in_tax;
    m_shipping_inc_in_tax_isSet = true;
}

bool OAIProductAdd_sales_tax::is_shipping_inc_in_tax_Set() const{
    return m_shipping_inc_in_tax_isSet;
}

bool OAIProductAdd_sales_tax::is_shipping_inc_in_tax_Valid() const{
    return m_shipping_inc_in_tax_isValid;
}

bool OAIProductAdd_sales_tax::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tax_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_inc_in_tax_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductAdd_sales_tax::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
