/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderCalculate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderCalculate::OAIOrderCalculate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderCalculate::OAIOrderCalculate() {
    this->initializeModel();
}

OAIOrderCalculate::~OAIOrderCalculate() {}

void OAIOrderCalculate::initializeModel() {

    m_customer_email_isSet = false;
    m_customer_email_isValid = false;

    m_currency_id_isSet = false;
    m_currency_id_isValid = false;

    m_store_id_isSet = false;
    m_store_id_isValid = false;

    m_coupons_isSet = false;
    m_coupons_isValid = false;

    m_shipp_first_name_isSet = false;
    m_shipp_first_name_isValid = false;

    m_shipp_last_name_isSet = false;
    m_shipp_last_name_isValid = false;

    m_shipp_address_1_isSet = false;
    m_shipp_address_1_isValid = false;

    m_shipp_address_2_isSet = false;
    m_shipp_address_2_isValid = false;

    m_shipp_city_isSet = false;
    m_shipp_city_isValid = false;

    m_shipp_postcode_isSet = false;
    m_shipp_postcode_isValid = false;

    m_shipp_state_isSet = false;
    m_shipp_state_isValid = false;

    m_shipp_country_isSet = false;
    m_shipp_country_isValid = false;

    m_shipp_company_isSet = false;
    m_shipp_company_isValid = false;

    m_shipp_phone_isSet = false;
    m_shipp_phone_isValid = false;

    m_bill_first_name_isSet = false;
    m_bill_first_name_isValid = false;

    m_bill_last_name_isSet = false;
    m_bill_last_name_isValid = false;

    m_bill_address_1_isSet = false;
    m_bill_address_1_isValid = false;

    m_bill_address_2_isSet = false;
    m_bill_address_2_isValid = false;

    m_bill_city_isSet = false;
    m_bill_city_isValid = false;

    m_bill_postcode_isSet = false;
    m_bill_postcode_isValid = false;

    m_bill_state_isSet = false;
    m_bill_state_isValid = false;

    m_bill_country_isSet = false;
    m_bill_country_isValid = false;

    m_bill_company_isSet = false;
    m_bill_company_isValid = false;

    m_bill_phone_isSet = false;
    m_bill_phone_isValid = false;

    m_response_fields_isSet = false;
    m_response_fields_isValid = false;

    m_order_item_isSet = false;
    m_order_item_isValid = false;
}

void OAIOrderCalculate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderCalculate::fromJsonObject(QJsonObject json) {

    m_customer_email_isValid = ::OpenAPI::fromJsonValue(m_customer_email, json[QString("customer_email")]);
    m_customer_email_isSet = !json[QString("customer_email")].isNull() && m_customer_email_isValid;

    m_currency_id_isValid = ::OpenAPI::fromJsonValue(m_currency_id, json[QString("currency_id")]);
    m_currency_id_isSet = !json[QString("currency_id")].isNull() && m_currency_id_isValid;

    m_store_id_isValid = ::OpenAPI::fromJsonValue(m_store_id, json[QString("store_id")]);
    m_store_id_isSet = !json[QString("store_id")].isNull() && m_store_id_isValid;

    m_coupons_isValid = ::OpenAPI::fromJsonValue(m_coupons, json[QString("coupons")]);
    m_coupons_isSet = !json[QString("coupons")].isNull() && m_coupons_isValid;

    m_shipp_first_name_isValid = ::OpenAPI::fromJsonValue(m_shipp_first_name, json[QString("shipp_first_name")]);
    m_shipp_first_name_isSet = !json[QString("shipp_first_name")].isNull() && m_shipp_first_name_isValid;

    m_shipp_last_name_isValid = ::OpenAPI::fromJsonValue(m_shipp_last_name, json[QString("shipp_last_name")]);
    m_shipp_last_name_isSet = !json[QString("shipp_last_name")].isNull() && m_shipp_last_name_isValid;

    m_shipp_address_1_isValid = ::OpenAPI::fromJsonValue(m_shipp_address_1, json[QString("shipp_address_1")]);
    m_shipp_address_1_isSet = !json[QString("shipp_address_1")].isNull() && m_shipp_address_1_isValid;

    m_shipp_address_2_isValid = ::OpenAPI::fromJsonValue(m_shipp_address_2, json[QString("shipp_address_2")]);
    m_shipp_address_2_isSet = !json[QString("shipp_address_2")].isNull() && m_shipp_address_2_isValid;

    m_shipp_city_isValid = ::OpenAPI::fromJsonValue(m_shipp_city, json[QString("shipp_city")]);
    m_shipp_city_isSet = !json[QString("shipp_city")].isNull() && m_shipp_city_isValid;

    m_shipp_postcode_isValid = ::OpenAPI::fromJsonValue(m_shipp_postcode, json[QString("shipp_postcode")]);
    m_shipp_postcode_isSet = !json[QString("shipp_postcode")].isNull() && m_shipp_postcode_isValid;

    m_shipp_state_isValid = ::OpenAPI::fromJsonValue(m_shipp_state, json[QString("shipp_state")]);
    m_shipp_state_isSet = !json[QString("shipp_state")].isNull() && m_shipp_state_isValid;

    m_shipp_country_isValid = ::OpenAPI::fromJsonValue(m_shipp_country, json[QString("shipp_country")]);
    m_shipp_country_isSet = !json[QString("shipp_country")].isNull() && m_shipp_country_isValid;

    m_shipp_company_isValid = ::OpenAPI::fromJsonValue(m_shipp_company, json[QString("shipp_company")]);
    m_shipp_company_isSet = !json[QString("shipp_company")].isNull() && m_shipp_company_isValid;

    m_shipp_phone_isValid = ::OpenAPI::fromJsonValue(m_shipp_phone, json[QString("shipp_phone")]);
    m_shipp_phone_isSet = !json[QString("shipp_phone")].isNull() && m_shipp_phone_isValid;

    m_bill_first_name_isValid = ::OpenAPI::fromJsonValue(m_bill_first_name, json[QString("bill_first_name")]);
    m_bill_first_name_isSet = !json[QString("bill_first_name")].isNull() && m_bill_first_name_isValid;

    m_bill_last_name_isValid = ::OpenAPI::fromJsonValue(m_bill_last_name, json[QString("bill_last_name")]);
    m_bill_last_name_isSet = !json[QString("bill_last_name")].isNull() && m_bill_last_name_isValid;

    m_bill_address_1_isValid = ::OpenAPI::fromJsonValue(m_bill_address_1, json[QString("bill_address_1")]);
    m_bill_address_1_isSet = !json[QString("bill_address_1")].isNull() && m_bill_address_1_isValid;

    m_bill_address_2_isValid = ::OpenAPI::fromJsonValue(m_bill_address_2, json[QString("bill_address_2")]);
    m_bill_address_2_isSet = !json[QString("bill_address_2")].isNull() && m_bill_address_2_isValid;

    m_bill_city_isValid = ::OpenAPI::fromJsonValue(m_bill_city, json[QString("bill_city")]);
    m_bill_city_isSet = !json[QString("bill_city")].isNull() && m_bill_city_isValid;

    m_bill_postcode_isValid = ::OpenAPI::fromJsonValue(m_bill_postcode, json[QString("bill_postcode")]);
    m_bill_postcode_isSet = !json[QString("bill_postcode")].isNull() && m_bill_postcode_isValid;

    m_bill_state_isValid = ::OpenAPI::fromJsonValue(m_bill_state, json[QString("bill_state")]);
    m_bill_state_isSet = !json[QString("bill_state")].isNull() && m_bill_state_isValid;

    m_bill_country_isValid = ::OpenAPI::fromJsonValue(m_bill_country, json[QString("bill_country")]);
    m_bill_country_isSet = !json[QString("bill_country")].isNull() && m_bill_country_isValid;

    m_bill_company_isValid = ::OpenAPI::fromJsonValue(m_bill_company, json[QString("bill_company")]);
    m_bill_company_isSet = !json[QString("bill_company")].isNull() && m_bill_company_isValid;

    m_bill_phone_isValid = ::OpenAPI::fromJsonValue(m_bill_phone, json[QString("bill_phone")]);
    m_bill_phone_isSet = !json[QString("bill_phone")].isNull() && m_bill_phone_isValid;

    m_response_fields_isValid = ::OpenAPI::fromJsonValue(m_response_fields, json[QString("response_fields")]);
    m_response_fields_isSet = !json[QString("response_fields")].isNull() && m_response_fields_isValid;

    m_order_item_isValid = ::OpenAPI::fromJsonValue(m_order_item, json[QString("order_item")]);
    m_order_item_isSet = !json[QString("order_item")].isNull() && m_order_item_isValid;
}

QString OAIOrderCalculate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderCalculate::asJsonObject() const {
    QJsonObject obj;
    if (m_customer_email_isSet) {
        obj.insert(QString("customer_email"), ::OpenAPI::toJsonValue(m_customer_email));
    }
    if (m_currency_id_isSet) {
        obj.insert(QString("currency_id"), ::OpenAPI::toJsonValue(m_currency_id));
    }
    if (m_store_id_isSet) {
        obj.insert(QString("store_id"), ::OpenAPI::toJsonValue(m_store_id));
    }
    if (m_coupons.size() > 0) {
        obj.insert(QString("coupons"), ::OpenAPI::toJsonValue(m_coupons));
    }
    if (m_shipp_first_name_isSet) {
        obj.insert(QString("shipp_first_name"), ::OpenAPI::toJsonValue(m_shipp_first_name));
    }
    if (m_shipp_last_name_isSet) {
        obj.insert(QString("shipp_last_name"), ::OpenAPI::toJsonValue(m_shipp_last_name));
    }
    if (m_shipp_address_1_isSet) {
        obj.insert(QString("shipp_address_1"), ::OpenAPI::toJsonValue(m_shipp_address_1));
    }
    if (m_shipp_address_2_isSet) {
        obj.insert(QString("shipp_address_2"), ::OpenAPI::toJsonValue(m_shipp_address_2));
    }
    if (m_shipp_city_isSet) {
        obj.insert(QString("shipp_city"), ::OpenAPI::toJsonValue(m_shipp_city));
    }
    if (m_shipp_postcode_isSet) {
        obj.insert(QString("shipp_postcode"), ::OpenAPI::toJsonValue(m_shipp_postcode));
    }
    if (m_shipp_state_isSet) {
        obj.insert(QString("shipp_state"), ::OpenAPI::toJsonValue(m_shipp_state));
    }
    if (m_shipp_country_isSet) {
        obj.insert(QString("shipp_country"), ::OpenAPI::toJsonValue(m_shipp_country));
    }
    if (m_shipp_company_isSet) {
        obj.insert(QString("shipp_company"), ::OpenAPI::toJsonValue(m_shipp_company));
    }
    if (m_shipp_phone_isSet) {
        obj.insert(QString("shipp_phone"), ::OpenAPI::toJsonValue(m_shipp_phone));
    }
    if (m_bill_first_name_isSet) {
        obj.insert(QString("bill_first_name"), ::OpenAPI::toJsonValue(m_bill_first_name));
    }
    if (m_bill_last_name_isSet) {
        obj.insert(QString("bill_last_name"), ::OpenAPI::toJsonValue(m_bill_last_name));
    }
    if (m_bill_address_1_isSet) {
        obj.insert(QString("bill_address_1"), ::OpenAPI::toJsonValue(m_bill_address_1));
    }
    if (m_bill_address_2_isSet) {
        obj.insert(QString("bill_address_2"), ::OpenAPI::toJsonValue(m_bill_address_2));
    }
    if (m_bill_city_isSet) {
        obj.insert(QString("bill_city"), ::OpenAPI::toJsonValue(m_bill_city));
    }
    if (m_bill_postcode_isSet) {
        obj.insert(QString("bill_postcode"), ::OpenAPI::toJsonValue(m_bill_postcode));
    }
    if (m_bill_state_isSet) {
        obj.insert(QString("bill_state"), ::OpenAPI::toJsonValue(m_bill_state));
    }
    if (m_bill_country_isSet) {
        obj.insert(QString("bill_country"), ::OpenAPI::toJsonValue(m_bill_country));
    }
    if (m_bill_company_isSet) {
        obj.insert(QString("bill_company"), ::OpenAPI::toJsonValue(m_bill_company));
    }
    if (m_bill_phone_isSet) {
        obj.insert(QString("bill_phone"), ::OpenAPI::toJsonValue(m_bill_phone));
    }
    if (m_response_fields_isSet) {
        obj.insert(QString("response_fields"), ::OpenAPI::toJsonValue(m_response_fields));
    }
    if (m_order_item.size() > 0) {
        obj.insert(QString("order_item"), ::OpenAPI::toJsonValue(m_order_item));
    }
    return obj;
}

QString OAIOrderCalculate::getCustomerEmail() const {
    return m_customer_email;
}
void OAIOrderCalculate::setCustomerEmail(const QString &customer_email) {
    m_customer_email = customer_email;
    m_customer_email_isSet = true;
}

bool OAIOrderCalculate::is_customer_email_Set() const{
    return m_customer_email_isSet;
}

bool OAIOrderCalculate::is_customer_email_Valid() const{
    return m_customer_email_isValid;
}

QString OAIOrderCalculate::getCurrencyId() const {
    return m_currency_id;
}
void OAIOrderCalculate::setCurrencyId(const QString &currency_id) {
    m_currency_id = currency_id;
    m_currency_id_isSet = true;
}

bool OAIOrderCalculate::is_currency_id_Set() const{
    return m_currency_id_isSet;
}

bool OAIOrderCalculate::is_currency_id_Valid() const{
    return m_currency_id_isValid;
}

QString OAIOrderCalculate::getStoreId() const {
    return m_store_id;
}
void OAIOrderCalculate::setStoreId(const QString &store_id) {
    m_store_id = store_id;
    m_store_id_isSet = true;
}

bool OAIOrderCalculate::is_store_id_Set() const{
    return m_store_id_isSet;
}

bool OAIOrderCalculate::is_store_id_Valid() const{
    return m_store_id_isValid;
}

QList<QString> OAIOrderCalculate::getCoupons() const {
    return m_coupons;
}
void OAIOrderCalculate::setCoupons(const QList<QString> &coupons) {
    m_coupons = coupons;
    m_coupons_isSet = true;
}

bool OAIOrderCalculate::is_coupons_Set() const{
    return m_coupons_isSet;
}

bool OAIOrderCalculate::is_coupons_Valid() const{
    return m_coupons_isValid;
}

QString OAIOrderCalculate::getShippFirstName() const {
    return m_shipp_first_name;
}
void OAIOrderCalculate::setShippFirstName(const QString &shipp_first_name) {
    m_shipp_first_name = shipp_first_name;
    m_shipp_first_name_isSet = true;
}

bool OAIOrderCalculate::is_shipp_first_name_Set() const{
    return m_shipp_first_name_isSet;
}

bool OAIOrderCalculate::is_shipp_first_name_Valid() const{
    return m_shipp_first_name_isValid;
}

QString OAIOrderCalculate::getShippLastName() const {
    return m_shipp_last_name;
}
void OAIOrderCalculate::setShippLastName(const QString &shipp_last_name) {
    m_shipp_last_name = shipp_last_name;
    m_shipp_last_name_isSet = true;
}

bool OAIOrderCalculate::is_shipp_last_name_Set() const{
    return m_shipp_last_name_isSet;
}

bool OAIOrderCalculate::is_shipp_last_name_Valid() const{
    return m_shipp_last_name_isValid;
}

QString OAIOrderCalculate::getShippAddress1() const {
    return m_shipp_address_1;
}
void OAIOrderCalculate::setShippAddress1(const QString &shipp_address_1) {
    m_shipp_address_1 = shipp_address_1;
    m_shipp_address_1_isSet = true;
}

bool OAIOrderCalculate::is_shipp_address_1_Set() const{
    return m_shipp_address_1_isSet;
}

bool OAIOrderCalculate::is_shipp_address_1_Valid() const{
    return m_shipp_address_1_isValid;
}

QString OAIOrderCalculate::getShippAddress2() const {
    return m_shipp_address_2;
}
void OAIOrderCalculate::setShippAddress2(const QString &shipp_address_2) {
    m_shipp_address_2 = shipp_address_2;
    m_shipp_address_2_isSet = true;
}

bool OAIOrderCalculate::is_shipp_address_2_Set() const{
    return m_shipp_address_2_isSet;
}

bool OAIOrderCalculate::is_shipp_address_2_Valid() const{
    return m_shipp_address_2_isValid;
}

QString OAIOrderCalculate::getShippCity() const {
    return m_shipp_city;
}
void OAIOrderCalculate::setShippCity(const QString &shipp_city) {
    m_shipp_city = shipp_city;
    m_shipp_city_isSet = true;
}

bool OAIOrderCalculate::is_shipp_city_Set() const{
    return m_shipp_city_isSet;
}

bool OAIOrderCalculate::is_shipp_city_Valid() const{
    return m_shipp_city_isValid;
}

QString OAIOrderCalculate::getShippPostcode() const {
    return m_shipp_postcode;
}
void OAIOrderCalculate::setShippPostcode(const QString &shipp_postcode) {
    m_shipp_postcode = shipp_postcode;
    m_shipp_postcode_isSet = true;
}

bool OAIOrderCalculate::is_shipp_postcode_Set() const{
    return m_shipp_postcode_isSet;
}

bool OAIOrderCalculate::is_shipp_postcode_Valid() const{
    return m_shipp_postcode_isValid;
}

QString OAIOrderCalculate::getShippState() const {
    return m_shipp_state;
}
void OAIOrderCalculate::setShippState(const QString &shipp_state) {
    m_shipp_state = shipp_state;
    m_shipp_state_isSet = true;
}

bool OAIOrderCalculate::is_shipp_state_Set() const{
    return m_shipp_state_isSet;
}

bool OAIOrderCalculate::is_shipp_state_Valid() const{
    return m_shipp_state_isValid;
}

QString OAIOrderCalculate::getShippCountry() const {
    return m_shipp_country;
}
void OAIOrderCalculate::setShippCountry(const QString &shipp_country) {
    m_shipp_country = shipp_country;
    m_shipp_country_isSet = true;
}

bool OAIOrderCalculate::is_shipp_country_Set() const{
    return m_shipp_country_isSet;
}

bool OAIOrderCalculate::is_shipp_country_Valid() const{
    return m_shipp_country_isValid;
}

QString OAIOrderCalculate::getShippCompany() const {
    return m_shipp_company;
}
void OAIOrderCalculate::setShippCompany(const QString &shipp_company) {
    m_shipp_company = shipp_company;
    m_shipp_company_isSet = true;
}

bool OAIOrderCalculate::is_shipp_company_Set() const{
    return m_shipp_company_isSet;
}

bool OAIOrderCalculate::is_shipp_company_Valid() const{
    return m_shipp_company_isValid;
}

QString OAIOrderCalculate::getShippPhone() const {
    return m_shipp_phone;
}
void OAIOrderCalculate::setShippPhone(const QString &shipp_phone) {
    m_shipp_phone = shipp_phone;
    m_shipp_phone_isSet = true;
}

bool OAIOrderCalculate::is_shipp_phone_Set() const{
    return m_shipp_phone_isSet;
}

bool OAIOrderCalculate::is_shipp_phone_Valid() const{
    return m_shipp_phone_isValid;
}

QString OAIOrderCalculate::getBillFirstName() const {
    return m_bill_first_name;
}
void OAIOrderCalculate::setBillFirstName(const QString &bill_first_name) {
    m_bill_first_name = bill_first_name;
    m_bill_first_name_isSet = true;
}

bool OAIOrderCalculate::is_bill_first_name_Set() const{
    return m_bill_first_name_isSet;
}

bool OAIOrderCalculate::is_bill_first_name_Valid() const{
    return m_bill_first_name_isValid;
}

QString OAIOrderCalculate::getBillLastName() const {
    return m_bill_last_name;
}
void OAIOrderCalculate::setBillLastName(const QString &bill_last_name) {
    m_bill_last_name = bill_last_name;
    m_bill_last_name_isSet = true;
}

bool OAIOrderCalculate::is_bill_last_name_Set() const{
    return m_bill_last_name_isSet;
}

bool OAIOrderCalculate::is_bill_last_name_Valid() const{
    return m_bill_last_name_isValid;
}

QString OAIOrderCalculate::getBillAddress1() const {
    return m_bill_address_1;
}
void OAIOrderCalculate::setBillAddress1(const QString &bill_address_1) {
    m_bill_address_1 = bill_address_1;
    m_bill_address_1_isSet = true;
}

bool OAIOrderCalculate::is_bill_address_1_Set() const{
    return m_bill_address_1_isSet;
}

bool OAIOrderCalculate::is_bill_address_1_Valid() const{
    return m_bill_address_1_isValid;
}

QString OAIOrderCalculate::getBillAddress2() const {
    return m_bill_address_2;
}
void OAIOrderCalculate::setBillAddress2(const QString &bill_address_2) {
    m_bill_address_2 = bill_address_2;
    m_bill_address_2_isSet = true;
}

bool OAIOrderCalculate::is_bill_address_2_Set() const{
    return m_bill_address_2_isSet;
}

bool OAIOrderCalculate::is_bill_address_2_Valid() const{
    return m_bill_address_2_isValid;
}

QString OAIOrderCalculate::getBillCity() const {
    return m_bill_city;
}
void OAIOrderCalculate::setBillCity(const QString &bill_city) {
    m_bill_city = bill_city;
    m_bill_city_isSet = true;
}

bool OAIOrderCalculate::is_bill_city_Set() const{
    return m_bill_city_isSet;
}

bool OAIOrderCalculate::is_bill_city_Valid() const{
    return m_bill_city_isValid;
}

QString OAIOrderCalculate::getBillPostcode() const {
    return m_bill_postcode;
}
void OAIOrderCalculate::setBillPostcode(const QString &bill_postcode) {
    m_bill_postcode = bill_postcode;
    m_bill_postcode_isSet = true;
}

bool OAIOrderCalculate::is_bill_postcode_Set() const{
    return m_bill_postcode_isSet;
}

bool OAIOrderCalculate::is_bill_postcode_Valid() const{
    return m_bill_postcode_isValid;
}

QString OAIOrderCalculate::getBillState() const {
    return m_bill_state;
}
void OAIOrderCalculate::setBillState(const QString &bill_state) {
    m_bill_state = bill_state;
    m_bill_state_isSet = true;
}

bool OAIOrderCalculate::is_bill_state_Set() const{
    return m_bill_state_isSet;
}

bool OAIOrderCalculate::is_bill_state_Valid() const{
    return m_bill_state_isValid;
}

QString OAIOrderCalculate::getBillCountry() const {
    return m_bill_country;
}
void OAIOrderCalculate::setBillCountry(const QString &bill_country) {
    m_bill_country = bill_country;
    m_bill_country_isSet = true;
}

bool OAIOrderCalculate::is_bill_country_Set() const{
    return m_bill_country_isSet;
}

bool OAIOrderCalculate::is_bill_country_Valid() const{
    return m_bill_country_isValid;
}

QString OAIOrderCalculate::getBillCompany() const {
    return m_bill_company;
}
void OAIOrderCalculate::setBillCompany(const QString &bill_company) {
    m_bill_company = bill_company;
    m_bill_company_isSet = true;
}

bool OAIOrderCalculate::is_bill_company_Set() const{
    return m_bill_company_isSet;
}

bool OAIOrderCalculate::is_bill_company_Valid() const{
    return m_bill_company_isValid;
}

QString OAIOrderCalculate::getBillPhone() const {
    return m_bill_phone;
}
void OAIOrderCalculate::setBillPhone(const QString &bill_phone) {
    m_bill_phone = bill_phone;
    m_bill_phone_isSet = true;
}

bool OAIOrderCalculate::is_bill_phone_Set() const{
    return m_bill_phone_isSet;
}

bool OAIOrderCalculate::is_bill_phone_Valid() const{
    return m_bill_phone_isValid;
}

QString OAIOrderCalculate::getResponseFields() const {
    return m_response_fields;
}
void OAIOrderCalculate::setResponseFields(const QString &response_fields) {
    m_response_fields = response_fields;
    m_response_fields_isSet = true;
}

bool OAIOrderCalculate::is_response_fields_Set() const{
    return m_response_fields_isSet;
}

bool OAIOrderCalculate::is_response_fields_Valid() const{
    return m_response_fields_isValid;
}

QList<OAIOrderCalculate_order_item_inner> OAIOrderCalculate::getOrderItem() const {
    return m_order_item;
}
void OAIOrderCalculate::setOrderItem(const QList<OAIOrderCalculate_order_item_inner> &order_item) {
    m_order_item = order_item;
    m_order_item_isSet = true;
}

bool OAIOrderCalculate::is_order_item_Set() const{
    return m_order_item_isSet;
}

bool OAIOrderCalculate::is_order_item_Valid() const{
    return m_order_item_isValid;
}

bool OAIOrderCalculate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_customer_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coupons.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_address_1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_address_2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_postcode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_company_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipp_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_address_1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_address_2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_postcode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_company_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bill_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderCalculate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_customer_email_isValid && m_shipp_first_name_isValid && m_shipp_last_name_isValid && m_shipp_address_1_isValid && m_shipp_city_isValid && m_shipp_postcode_isValid && m_shipp_country_isValid && m_order_item_isValid && true;
}

} // namespace OpenAPI
