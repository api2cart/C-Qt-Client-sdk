/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductVariantAddBatch_payload_inner_combination_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductVariantAddBatch_payload_inner_combination_inner::OAIProductVariantAddBatch_payload_inner_combination_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductVariantAddBatch_payload_inner_combination_inner::OAIProductVariantAddBatch_payload_inner_combination_inner() {
    this->initializeModel();
}

OAIProductVariantAddBatch_payload_inner_combination_inner::~OAIProductVariantAddBatch_payload_inner_combination_inner() {}

void OAIProductVariantAddBatch_payload_inner_combination_inner::initializeModel() {

    m_option_name_isSet = false;
    m_option_name_isValid = false;

    m_option_value_name_isSet = false;
    m_option_value_name_isValid = false;
}

void OAIProductVariantAddBatch_payload_inner_combination_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductVariantAddBatch_payload_inner_combination_inner::fromJsonObject(QJsonObject json) {

    m_option_name_isValid = ::OpenAPI::fromJsonValue(m_option_name, json[QString("option_name")]);
    m_option_name_isSet = !json[QString("option_name")].isNull() && m_option_name_isValid;

    m_option_value_name_isValid = ::OpenAPI::fromJsonValue(m_option_value_name, json[QString("option_value_name")]);
    m_option_value_name_isSet = !json[QString("option_value_name")].isNull() && m_option_value_name_isValid;
}

QString OAIProductVariantAddBatch_payload_inner_combination_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductVariantAddBatch_payload_inner_combination_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_option_name_isSet) {
        obj.insert(QString("option_name"), ::OpenAPI::toJsonValue(m_option_name));
    }
    if (m_option_value_name_isSet) {
        obj.insert(QString("option_value_name"), ::OpenAPI::toJsonValue(m_option_value_name));
    }
    return obj;
}

QString OAIProductVariantAddBatch_payload_inner_combination_inner::getOptionName() const {
    return m_option_name;
}
void OAIProductVariantAddBatch_payload_inner_combination_inner::setOptionName(const QString &option_name) {
    m_option_name = option_name;
    m_option_name_isSet = true;
}

bool OAIProductVariantAddBatch_payload_inner_combination_inner::is_option_name_Set() const{
    return m_option_name_isSet;
}

bool OAIProductVariantAddBatch_payload_inner_combination_inner::is_option_name_Valid() const{
    return m_option_name_isValid;
}

QString OAIProductVariantAddBatch_payload_inner_combination_inner::getOptionValueName() const {
    return m_option_value_name;
}
void OAIProductVariantAddBatch_payload_inner_combination_inner::setOptionValueName(const QString &option_value_name) {
    m_option_value_name = option_value_name;
    m_option_value_name_isSet = true;
}

bool OAIProductVariantAddBatch_payload_inner_combination_inner::is_option_value_name_Set() const{
    return m_option_value_name_isSet;
}

bool OAIProductVariantAddBatch_payload_inner_combination_inner::is_option_value_name_Valid() const{
    return m_option_value_name_isValid;
}

bool OAIProductVariantAddBatch_payload_inner_combination_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_option_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_option_value_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductVariantAddBatch_payload_inner_combination_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_option_name_isValid && m_option_value_name_isValid && true;
}

} // namespace OpenAPI
