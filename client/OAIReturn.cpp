/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReturn.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReturn::OAIReturn(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReturn::OAIReturn() {
    this->initializeModel();
}

OAIReturn::~OAIReturn() {}

void OAIReturn::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_customer_id_isSet = false;
    m_customer_id_isValid = false;

    m_store_id_isSet = false;
    m_store_id_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_modified_at_isSet = false;
    m_modified_at_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_order_products_isSet = false;
    m_order_products_isValid = false;

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_staff_note_isSet = false;
    m_staff_note_isValid = false;

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;
}

void OAIReturn::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReturn::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("order_id")]);
    m_order_id_isSet = !json[QString("order_id")].isNull() && m_order_id_isValid;

    m_customer_id_isValid = ::OpenAPI::fromJsonValue(m_customer_id, json[QString("customer_id")]);
    m_customer_id_isSet = !json[QString("customer_id")].isNull() && m_customer_id_isValid;

    m_store_id_isValid = ::OpenAPI::fromJsonValue(m_store_id, json[QString("store_id")]);
    m_store_id_isSet = !json[QString("store_id")].isNull() && m_store_id_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_modified_at_isValid = ::OpenAPI::fromJsonValue(m_modified_at, json[QString("modified_at")]);
    m_modified_at_isSet = !json[QString("modified_at")].isNull() && m_modified_at_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_order_products_isValid = ::OpenAPI::fromJsonValue(m_order_products, json[QString("order_products")]);
    m_order_products_isSet = !json[QString("order_products")].isNull() && m_order_products_isValid;

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("comment")]);
    m_comment_isSet = !json[QString("comment")].isNull() && m_comment_isValid;

    m_staff_note_isValid = ::OpenAPI::fromJsonValue(m_staff_note, json[QString("staff_note")]);
    m_staff_note_isSet = !json[QString("staff_note")].isNull() && m_staff_note_isValid;

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;
}

QString OAIReturn::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReturn::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("order_id"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_customer_id_isSet) {
        obj.insert(QString("customer_id"), ::OpenAPI::toJsonValue(m_customer_id));
    }
    if (m_store_id_isSet) {
        obj.insert(QString("store_id"), ::OpenAPI::toJsonValue(m_store_id));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_modified_at_isSet) {
        obj.insert(QString("modified_at"), ::OpenAPI::toJsonValue(m_modified_at));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_order_products.size() > 0) {
        obj.insert(QString("order_products"), ::OpenAPI::toJsonValue(m_order_products));
    }
    if (m_comment_isSet) {
        obj.insert(QString("comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_staff_note_isSet) {
        obj.insert(QString("staff_note"), ::OpenAPI::toJsonValue(m_staff_note));
    }
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    return obj;
}

QString OAIReturn::getId() const {
    return m_id;
}
void OAIReturn::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIReturn::is_id_Set() const{
    return m_id_isSet;
}

bool OAIReturn::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIReturn::getName() const {
    return m_name;
}
void OAIReturn::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIReturn::is_name_Set() const{
    return m_name_isSet;
}

bool OAIReturn::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIReturn::getOrderId() const {
    return m_order_id;
}
void OAIReturn::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIReturn::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIReturn::is_order_id_Valid() const{
    return m_order_id_isValid;
}

QString OAIReturn::getCustomerId() const {
    return m_customer_id;
}
void OAIReturn::setCustomerId(const QString &customer_id) {
    m_customer_id = customer_id;
    m_customer_id_isSet = true;
}

bool OAIReturn::is_customer_id_Set() const{
    return m_customer_id_isSet;
}

bool OAIReturn::is_customer_id_Valid() const{
    return m_customer_id_isValid;
}

QString OAIReturn::getStoreId() const {
    return m_store_id;
}
void OAIReturn::setStoreId(const QString &store_id) {
    m_store_id = store_id;
    m_store_id_isSet = true;
}

bool OAIReturn::is_store_id_Set() const{
    return m_store_id_isSet;
}

bool OAIReturn::is_store_id_Valid() const{
    return m_store_id_isValid;
}

QString OAIReturn::getCreatedAt() const {
    return m_created_at;
}
void OAIReturn::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIReturn::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIReturn::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIReturn::getModifiedAt() const {
    return m_modified_at;
}
void OAIReturn::setModifiedAt(const QString &modified_at) {
    m_modified_at = modified_at;
    m_modified_at_isSet = true;
}

bool OAIReturn::is_modified_at_Set() const{
    return m_modified_at_isSet;
}

bool OAIReturn::is_modified_at_Valid() const{
    return m_modified_at_isValid;
}

OAIReturn_Status OAIReturn::getStatus() const {
    return m_status;
}
void OAIReturn::setStatus(const OAIReturn_Status &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIReturn::is_status_Set() const{
    return m_status_isSet;
}

bool OAIReturn::is_status_Valid() const{
    return m_status_isValid;
}

QList<OAIReturn_OrderProduct> OAIReturn::getOrderProducts() const {
    return m_order_products;
}
void OAIReturn::setOrderProducts(const QList<OAIReturn_OrderProduct> &order_products) {
    m_order_products = order_products;
    m_order_products_isSet = true;
}

bool OAIReturn::is_order_products_Set() const{
    return m_order_products_isSet;
}

bool OAIReturn::is_order_products_Valid() const{
    return m_order_products_isValid;
}

QString OAIReturn::getComment() const {
    return m_comment;
}
void OAIReturn::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAIReturn::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAIReturn::is_comment_Valid() const{
    return m_comment_isValid;
}

QString OAIReturn::getStaffNote() const {
    return m_staff_note;
}
void OAIReturn::setStaffNote(const QString &staff_note) {
    m_staff_note = staff_note;
    m_staff_note_isSet = true;
}

bool OAIReturn::is_staff_note_Set() const{
    return m_staff_note_isSet;
}

bool OAIReturn::is_staff_note_Valid() const{
    return m_staff_note_isValid;
}

OAIObject OAIReturn::getAdditionalFields() const {
    return m_additional_fields;
}
void OAIReturn::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAIReturn::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAIReturn::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

OAIObject OAIReturn::getCustomFields() const {
    return m_custom_fields;
}
void OAIReturn::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIReturn::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIReturn::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

bool OAIReturn::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_staff_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReturn::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
