/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductAdd_logistic_info_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductAdd_logistic_info_inner::OAIProductAdd_logistic_info_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductAdd_logistic_info_inner::OAIProductAdd_logistic_info_inner() {
    this->initializeModel();
}

OAIProductAdd_logistic_info_inner::~OAIProductAdd_logistic_info_inner() {}

void OAIProductAdd_logistic_info_inner::initializeModel() {

    m_logistic_id_isSet = false;
    m_logistic_id_isValid = false;

    m_is_free_isSet = false;
    m_is_free_isValid = false;

    m_shipping_fee_isSet = false;
    m_shipping_fee_isValid = false;

    m_size_id_isSet = false;
    m_size_id_isValid = false;
}

void OAIProductAdd_logistic_info_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductAdd_logistic_info_inner::fromJsonObject(QJsonObject json) {

    m_logistic_id_isValid = ::OpenAPI::fromJsonValue(m_logistic_id, json[QString("logistic_id")]);
    m_logistic_id_isSet = !json[QString("logistic_id")].isNull() && m_logistic_id_isValid;

    m_is_free_isValid = ::OpenAPI::fromJsonValue(m_is_free, json[QString("is_free")]);
    m_is_free_isSet = !json[QString("is_free")].isNull() && m_is_free_isValid;

    m_shipping_fee_isValid = ::OpenAPI::fromJsonValue(m_shipping_fee, json[QString("shipping_fee")]);
    m_shipping_fee_isSet = !json[QString("shipping_fee")].isNull() && m_shipping_fee_isValid;

    m_size_id_isValid = ::OpenAPI::fromJsonValue(m_size_id, json[QString("size_id")]);
    m_size_id_isSet = !json[QString("size_id")].isNull() && m_size_id_isValid;
}

QString OAIProductAdd_logistic_info_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductAdd_logistic_info_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_logistic_id_isSet) {
        obj.insert(QString("logistic_id"), ::OpenAPI::toJsonValue(m_logistic_id));
    }
    if (m_is_free_isSet) {
        obj.insert(QString("is_free"), ::OpenAPI::toJsonValue(m_is_free));
    }
    if (m_shipping_fee_isSet) {
        obj.insert(QString("shipping_fee"), ::OpenAPI::toJsonValue(m_shipping_fee));
    }
    if (m_size_id_isSet) {
        obj.insert(QString("size_id"), ::OpenAPI::toJsonValue(m_size_id));
    }
    return obj;
}

double OAIProductAdd_logistic_info_inner::getLogisticId() const {
    return m_logistic_id;
}
void OAIProductAdd_logistic_info_inner::setLogisticId(const double &logistic_id) {
    m_logistic_id = logistic_id;
    m_logistic_id_isSet = true;
}

bool OAIProductAdd_logistic_info_inner::is_logistic_id_Set() const{
    return m_logistic_id_isSet;
}

bool OAIProductAdd_logistic_info_inner::is_logistic_id_Valid() const{
    return m_logistic_id_isValid;
}

bool OAIProductAdd_logistic_info_inner::isIsFree() const {
    return m_is_free;
}
void OAIProductAdd_logistic_info_inner::setIsFree(const bool &is_free) {
    m_is_free = is_free;
    m_is_free_isSet = true;
}

bool OAIProductAdd_logistic_info_inner::is_is_free_Set() const{
    return m_is_free_isSet;
}

bool OAIProductAdd_logistic_info_inner::is_is_free_Valid() const{
    return m_is_free_isValid;
}

double OAIProductAdd_logistic_info_inner::getShippingFee() const {
    return m_shipping_fee;
}
void OAIProductAdd_logistic_info_inner::setShippingFee(const double &shipping_fee) {
    m_shipping_fee = shipping_fee;
    m_shipping_fee_isSet = true;
}

bool OAIProductAdd_logistic_info_inner::is_shipping_fee_Set() const{
    return m_shipping_fee_isSet;
}

bool OAIProductAdd_logistic_info_inner::is_shipping_fee_Valid() const{
    return m_shipping_fee_isValid;
}

double OAIProductAdd_logistic_info_inner::getSizeId() const {
    return m_size_id;
}
void OAIProductAdd_logistic_info_inner::setSizeId(const double &size_id) {
    m_size_id = size_id;
    m_size_id_isSet = true;
}

bool OAIProductAdd_logistic_info_inner::is_size_id_Set() const{
    return m_size_id_isSet;
}

bool OAIProductAdd_logistic_info_inner::is_size_id_Valid() const{
    return m_size_id_isValid;
}

bool OAIProductAdd_logistic_info_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_logistic_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_free_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_fee_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductAdd_logistic_info_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_logistic_id_isValid && true;
}

} // namespace OpenAPI
