/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReturn_Reason.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReturn_Reason::OAIReturn_Reason(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReturn_Reason::OAIReturn_Reason() {
    this->initializeModel();
}

OAIReturn_Reason::~OAIReturn_Reason() {}

void OAIReturn_Reason::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;
}

void OAIReturn_Reason::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReturn_Reason::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;
}

QString OAIReturn_Reason::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReturn_Reason::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    return obj;
}

QString OAIReturn_Reason::getId() const {
    return m_id;
}
void OAIReturn_Reason::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIReturn_Reason::is_id_Set() const{
    return m_id_isSet;
}

bool OAIReturn_Reason::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIReturn_Reason::getName() const {
    return m_name;
}
void OAIReturn_Reason::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIReturn_Reason::is_name_Set() const{
    return m_name_isSet;
}

bool OAIReturn_Reason::is_name_Valid() const{
    return m_name_isValid;
}

OAIObject OAIReturn_Reason::getAdditionalFields() const {
    return m_additional_fields;
}
void OAIReturn_Reason::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAIReturn_Reason::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAIReturn_Reason::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

OAIObject OAIReturn_Reason::getCustomFields() const {
    return m_custom_fields;
}
void OAIReturn_Reason::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIReturn_Reason::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIReturn_Reason::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

bool OAIReturn_Reason::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReturn_Reason::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
