/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountCartAdd.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountCartAdd::OAIAccountCartAdd(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountCartAdd::OAIAccountCartAdd() {
    this->initializeModel();
}

OAIAccountCartAdd::~OAIAccountCartAdd() {}

void OAIAccountCartAdd::initializeModel() {

    m_cart_id_isSet = false;
    m_cart_id_isValid = false;

    m_store_url_isSet = false;
    m_store_url_isValid = false;

    m_bridge_url_isSet = false;
    m_bridge_url_isValid = false;

    m_store_root_isSet = false;
    m_store_root_isValid = false;

    m_store_key_isSet = false;
    m_store_key_isValid = false;

    m_validate_version_isSet = false;
    m_validate_version_isValid = false;

    m_verify_isSet = false;
    m_verify_isValid = false;

    m_db_tables_prefix_isSet = false;
    m_db_tables_prefix_isValid = false;

    m_user_agent_isSet = false;
    m_user_agent_isValid = false;

    m_ftp_host_isSet = false;
    m_ftp_host_isValid = false;

    m_ftp_user_isSet = false;
    m_ftp_user_isValid = false;

    m_ftp_password_isSet = false;
    m_ftp_password_isValid = false;

    m_ftp_port_isSet = false;
    m_ftp_port_isValid = false;

    m_ftp_store_dir_isSet = false;
    m_ftp_store_dir_isValid = false;

    m_r_3dcart_private_key_isSet = false;
    m_r_3dcart_private_key_isValid = false;

    m_r_3dcart_access_token_isSet = false;
    m_r_3dcart_access_token_isValid = false;

    m_r_3dcartapi_api_key_isSet = false;
    m_r_3dcartapi_api_key_isValid = false;

    m_amazon_sp_client_id_isSet = false;
    m_amazon_sp_client_id_isValid = false;

    m_amazon_sp_client_secret_isSet = false;
    m_amazon_sp_client_secret_isValid = false;

    m_amazon_sp_refresh_token_isSet = false;
    m_amazon_sp_refresh_token_isValid = false;

    m_amazon_sp_aws_region_isSet = false;
    m_amazon_sp_aws_region_isValid = false;

    m_amazon_sp_api_environment_isSet = false;
    m_amazon_sp_api_environment_isValid = false;

    m_amazon_seller_id_isSet = false;
    m_amazon_seller_id_isValid = false;

    m_aspdotnetstorefront_api_user_isSet = false;
    m_aspdotnetstorefront_api_user_isValid = false;

    m_aspdotnetstorefront_api_pass_isSet = false;
    m_aspdotnetstorefront_api_pass_isValid = false;

    m_bigcommerceapi_admin_account_isSet = false;
    m_bigcommerceapi_admin_account_isValid = false;

    m_bigcommerceapi_api_path_isSet = false;
    m_bigcommerceapi_api_path_isValid = false;

    m_bigcommerceapi_api_key_isSet = false;
    m_bigcommerceapi_api_key_isValid = false;

    m_bigcommerceapi_client_id_isSet = false;
    m_bigcommerceapi_client_id_isValid = false;

    m_bigcommerceapi_access_token_isSet = false;
    m_bigcommerceapi_access_token_isValid = false;

    m_bigcommerceapi_context_isSet = false;
    m_bigcommerceapi_context_isValid = false;

    m_bol_api_key_isSet = false;
    m_bol_api_key_isValid = false;

    m_bol_api_secret_isSet = false;
    m_bol_api_secret_isValid = false;

    m_bol_retailer_id_isSet = false;
    m_bol_retailer_id_isValid = false;

    m_demandware_client_id_isSet = false;
    m_demandware_client_id_isValid = false;

    m_demandware_api_password_isSet = false;
    m_demandware_api_password_isValid = false;

    m_demandware_user_name_isSet = false;
    m_demandware_user_name_isValid = false;

    m_demandware_user_password_isSet = false;
    m_demandware_user_password_isValid = false;

    m_ebay_client_id_isSet = false;
    m_ebay_client_id_isValid = false;

    m_ebay_client_secret_isSet = false;
    m_ebay_client_secret_isValid = false;

    m_ebay_runame_isSet = false;
    m_ebay_runame_isValid = false;

    m_ebay_access_token_isSet = false;
    m_ebay_access_token_isValid = false;

    m_ebay_refresh_token_isSet = false;
    m_ebay_refresh_token_isValid = false;

    m_ebay_environment_isSet = false;
    m_ebay_environment_isValid = false;

    m_ebay_site_id_isSet = false;
    m_ebay_site_id_isValid = false;

    m_walmart_client_id_isSet = false;
    m_walmart_client_id_isValid = false;

    m_walmart_client_secret_isSet = false;
    m_walmart_client_secret_isValid = false;

    m_walmart_environment_isSet = false;
    m_walmart_environment_isValid = false;

    m_walmart_channel_type_isSet = false;
    m_walmart_channel_type_isValid = false;

    m_walmart_region_isSet = false;
    m_walmart_region_isValid = false;

    m_ecwid_acess_token_isSet = false;
    m_ecwid_acess_token_isValid = false;

    m_ecwid_store_id_isSet = false;
    m_ecwid_store_id_isValid = false;

    m_lazada_app_id_isSet = false;
    m_lazada_app_id_isValid = false;

    m_lazada_app_secret_isSet = false;
    m_lazada_app_secret_isValid = false;

    m_lazada_refresh_token_isSet = false;
    m_lazada_refresh_token_isValid = false;

    m_lazada_region_isSet = false;
    m_lazada_region_isValid = false;

    m_lightspeed_api_key_isSet = false;
    m_lightspeed_api_key_isValid = false;

    m_lightspeed_api_secret_isSet = false;
    m_lightspeed_api_secret_isValid = false;

    m_etsy_keystring_isSet = false;
    m_etsy_keystring_isValid = false;

    m_etsy_shared_secret_isSet = false;
    m_etsy_shared_secret_isValid = false;

    m_etsy_access_token_isSet = false;
    m_etsy_access_token_isValid = false;

    m_etsy_token_secret_isSet = false;
    m_etsy_token_secret_isValid = false;

    m_etsy_client_id_isSet = false;
    m_etsy_client_id_isValid = false;

    m_etsy_refresh_token_isSet = false;
    m_etsy_refresh_token_isValid = false;

    m_facebook_app_id_isSet = false;
    m_facebook_app_id_isValid = false;

    m_facebook_app_secret_isSet = false;
    m_facebook_app_secret_isValid = false;

    m_facebook_access_token_isSet = false;
    m_facebook_access_token_isValid = false;

    m_facebook_business_id_isSet = false;
    m_facebook_business_id_isValid = false;

    m_neto_api_key_isSet = false;
    m_neto_api_key_isValid = false;

    m_neto_api_username_isSet = false;
    m_neto_api_username_isValid = false;

    m_shopline_access_token_isSet = false;
    m_shopline_access_token_isValid = false;

    m_shopline_app_key_isSet = false;
    m_shopline_app_key_isValid = false;

    m_shopline_app_secret_isSet = false;
    m_shopline_app_secret_isValid = false;

    m_shopify_access_token_isSet = false;
    m_shopify_access_token_isValid = false;

    m_shopify_api_key_isSet = false;
    m_shopify_api_key_isValid = false;

    m_shopify_api_password_isSet = false;
    m_shopify_api_password_isValid = false;

    m_shopify_shared_secret_isSet = false;
    m_shopify_shared_secret_isValid = false;

    m_shoplazza_access_token_isSet = false;
    m_shoplazza_access_token_isValid = false;

    m_shoplazza_shared_secret_isSet = false;
    m_shoplazza_shared_secret_isValid = false;

    m_shopware_access_key_isSet = false;
    m_shopware_access_key_isValid = false;

    m_shopware_api_key_isSet = false;
    m_shopware_api_key_isValid = false;

    m_shopware_api_secret_isSet = false;
    m_shopware_api_secret_isValid = false;

    m_miva_access_token_isSet = false;
    m_miva_access_token_isValid = false;

    m_miva_signature_isSet = false;
    m_miva_signature_isValid = false;

    m_tiendanube_user_id_isSet = false;
    m_tiendanube_user_id_isValid = false;

    m_tiendanube_access_token_isSet = false;
    m_tiendanube_access_token_isValid = false;

    m_tiendanube_client_secret_isSet = false;
    m_tiendanube_client_secret_isValid = false;

    m_volusion_login_isSet = false;
    m_volusion_login_isValid = false;

    m_volusion_password_isSet = false;
    m_volusion_password_isValid = false;

    m_hybris_client_id_isSet = false;
    m_hybris_client_id_isValid = false;

    m_hybris_client_secret_isSet = false;
    m_hybris_client_secret_isValid = false;

    m_hybris_username_isSet = false;
    m_hybris_username_isValid = false;

    m_hybris_password_isSet = false;
    m_hybris_password_isValid = false;

    m_hybris_websites_isSet = false;
    m_hybris_websites_isValid = false;

    m_square_client_id_isSet = false;
    m_square_client_id_isValid = false;

    m_square_client_secret_isSet = false;
    m_square_client_secret_isValid = false;

    m_square_refresh_token_isSet = false;
    m_square_refresh_token_isValid = false;

    m_squarespace_api_key_isSet = false;
    m_squarespace_api_key_isValid = false;

    m_squarespace_client_id_isSet = false;
    m_squarespace_client_id_isValid = false;

    m_squarespace_client_secret_isSet = false;
    m_squarespace_client_secret_isValid = false;

    m_squarespace_access_token_isSet = false;
    m_squarespace_access_token_isValid = false;

    m_squarespace_refresh_token_isSet = false;
    m_squarespace_refresh_token_isValid = false;

    m_commercehq_api_key_isSet = false;
    m_commercehq_api_key_isValid = false;

    m_commercehq_api_password_isSet = false;
    m_commercehq_api_password_isValid = false;

    m_wc_consumer_key_isSet = false;
    m_wc_consumer_key_isValid = false;

    m_wc_consumer_secret_isSet = false;
    m_wc_consumer_secret_isValid = false;

    m_magento_consumer_key_isSet = false;
    m_magento_consumer_key_isValid = false;

    m_magento_consumer_secret_isSet = false;
    m_magento_consumer_secret_isValid = false;

    m_magento_access_token_isSet = false;
    m_magento_access_token_isValid = false;

    m_magento_token_secret_isSet = false;
    m_magento_token_secret_isValid = false;

    m_prestashop_webservice_key_isSet = false;
    m_prestashop_webservice_key_isValid = false;

    m_wix_app_id_isSet = false;
    m_wix_app_id_isValid = false;

    m_wix_app_secret_key_isSet = false;
    m_wix_app_secret_key_isValid = false;

    m_wix_instance_id_isSet = false;
    m_wix_instance_id_isValid = false;

    m_wix_refresh_token_isSet = false;
    m_wix_refresh_token_isValid = false;

    m_mercado_libre_app_id_isSet = false;
    m_mercado_libre_app_id_isValid = false;

    m_mercado_libre_app_secret_key_isSet = false;
    m_mercado_libre_app_secret_key_isValid = false;

    m_mercado_libre_refresh_token_isSet = false;
    m_mercado_libre_refresh_token_isValid = false;

    m_zid_client_id_isSet = false;
    m_zid_client_id_isValid = false;

    m_zid_client_secret_isSet = false;
    m_zid_client_secret_isValid = false;

    m_zid_access_token_isSet = false;
    m_zid_access_token_isValid = false;

    m_zid_authorization_isSet = false;
    m_zid_authorization_isValid = false;

    m_zid_refresh_token_isSet = false;
    m_zid_refresh_token_isValid = false;

    m_flipkart_client_id_isSet = false;
    m_flipkart_client_id_isValid = false;

    m_flipkart_client_secret_isSet = false;
    m_flipkart_client_secret_isValid = false;

    m_allegro_client_id_isSet = false;
    m_allegro_client_id_isValid = false;

    m_allegro_client_secret_isSet = false;
    m_allegro_client_secret_isValid = false;

    m_allegro_access_token_isSet = false;
    m_allegro_access_token_isValid = false;

    m_allegro_refresh_token_isSet = false;
    m_allegro_refresh_token_isValid = false;

    m_allegro_environment_isSet = false;
    m_allegro_environment_isValid = false;

    m_zoho_client_id_isSet = false;
    m_zoho_client_id_isValid = false;

    m_zoho_client_secret_isSet = false;
    m_zoho_client_secret_isValid = false;

    m_zoho_refresh_token_isSet = false;
    m_zoho_refresh_token_isValid = false;

    m_zoho_region_isSet = false;
    m_zoho_region_isValid = false;

    m_otto_client_id_isSet = false;
    m_otto_client_id_isValid = false;

    m_otto_client_secret_isSet = false;
    m_otto_client_secret_isValid = false;

    m_otto_app_id_isSet = false;
    m_otto_app_id_isValid = false;

    m_otto_refresh_token_isSet = false;
    m_otto_refresh_token_isValid = false;

    m_otto_environment_isSet = false;
    m_otto_environment_isValid = false;

    m_otto_access_token_isSet = false;
    m_otto_access_token_isValid = false;

    m_tiktokshop_app_key_isSet = false;
    m_tiktokshop_app_key_isValid = false;

    m_tiktokshop_app_secret_isSet = false;
    m_tiktokshop_app_secret_isValid = false;

    m_tiktokshop_refresh_token_isSet = false;
    m_tiktokshop_refresh_token_isValid = false;

    m_tiktokshop_access_token_isSet = false;
    m_tiktokshop_access_token_isValid = false;

    m_salla_client_id_isSet = false;
    m_salla_client_id_isValid = false;

    m_salla_client_secret_isSet = false;
    m_salla_client_secret_isValid = false;

    m_salla_refresh_token_isSet = false;
    m_salla_refresh_token_isValid = false;

    m_salla_access_token_isSet = false;
    m_salla_access_token_isValid = false;
}

void OAIAccountCartAdd::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountCartAdd::fromJsonObject(QJsonObject json) {

    m_cart_id_isValid = ::OpenAPI::fromJsonValue(m_cart_id, json[QString("cart_id")]);
    m_cart_id_isSet = !json[QString("cart_id")].isNull() && m_cart_id_isValid;

    m_store_url_isValid = ::OpenAPI::fromJsonValue(m_store_url, json[QString("store_url")]);
    m_store_url_isSet = !json[QString("store_url")].isNull() && m_store_url_isValid;

    m_bridge_url_isValid = ::OpenAPI::fromJsonValue(m_bridge_url, json[QString("bridge_url")]);
    m_bridge_url_isSet = !json[QString("bridge_url")].isNull() && m_bridge_url_isValid;

    m_store_root_isValid = ::OpenAPI::fromJsonValue(m_store_root, json[QString("store_root")]);
    m_store_root_isSet = !json[QString("store_root")].isNull() && m_store_root_isValid;

    m_store_key_isValid = ::OpenAPI::fromJsonValue(m_store_key, json[QString("store_key")]);
    m_store_key_isSet = !json[QString("store_key")].isNull() && m_store_key_isValid;

    m_validate_version_isValid = ::OpenAPI::fromJsonValue(m_validate_version, json[QString("validate_version")]);
    m_validate_version_isSet = !json[QString("validate_version")].isNull() && m_validate_version_isValid;

    m_verify_isValid = ::OpenAPI::fromJsonValue(m_verify, json[QString("verify")]);
    m_verify_isSet = !json[QString("verify")].isNull() && m_verify_isValid;

    m_db_tables_prefix_isValid = ::OpenAPI::fromJsonValue(m_db_tables_prefix, json[QString("db_tables_prefix")]);
    m_db_tables_prefix_isSet = !json[QString("db_tables_prefix")].isNull() && m_db_tables_prefix_isValid;

    m_user_agent_isValid = ::OpenAPI::fromJsonValue(m_user_agent, json[QString("user_agent")]);
    m_user_agent_isSet = !json[QString("user_agent")].isNull() && m_user_agent_isValid;

    m_ftp_host_isValid = ::OpenAPI::fromJsonValue(m_ftp_host, json[QString("ftp_host")]);
    m_ftp_host_isSet = !json[QString("ftp_host")].isNull() && m_ftp_host_isValid;

    m_ftp_user_isValid = ::OpenAPI::fromJsonValue(m_ftp_user, json[QString("ftp_user")]);
    m_ftp_user_isSet = !json[QString("ftp_user")].isNull() && m_ftp_user_isValid;

    m_ftp_password_isValid = ::OpenAPI::fromJsonValue(m_ftp_password, json[QString("ftp_password")]);
    m_ftp_password_isSet = !json[QString("ftp_password")].isNull() && m_ftp_password_isValid;

    m_ftp_port_isValid = ::OpenAPI::fromJsonValue(m_ftp_port, json[QString("ftp_port")]);
    m_ftp_port_isSet = !json[QString("ftp_port")].isNull() && m_ftp_port_isValid;

    m_ftp_store_dir_isValid = ::OpenAPI::fromJsonValue(m_ftp_store_dir, json[QString("ftp_store_dir")]);
    m_ftp_store_dir_isSet = !json[QString("ftp_store_dir")].isNull() && m_ftp_store_dir_isValid;

    m_r_3dcart_private_key_isValid = ::OpenAPI::fromJsonValue(m_r_3dcart_private_key, json[QString("3dcart_private_key")]);
    m_r_3dcart_private_key_isSet = !json[QString("3dcart_private_key")].isNull() && m_r_3dcart_private_key_isValid;

    m_r_3dcart_access_token_isValid = ::OpenAPI::fromJsonValue(m_r_3dcart_access_token, json[QString("3dcart_access_token")]);
    m_r_3dcart_access_token_isSet = !json[QString("3dcart_access_token")].isNull() && m_r_3dcart_access_token_isValid;

    m_r_3dcartapi_api_key_isValid = ::OpenAPI::fromJsonValue(m_r_3dcartapi_api_key, json[QString("3dcartapi_api_key")]);
    m_r_3dcartapi_api_key_isSet = !json[QString("3dcartapi_api_key")].isNull() && m_r_3dcartapi_api_key_isValid;

    m_amazon_sp_client_id_isValid = ::OpenAPI::fromJsonValue(m_amazon_sp_client_id, json[QString("amazon_sp_client_id")]);
    m_amazon_sp_client_id_isSet = !json[QString("amazon_sp_client_id")].isNull() && m_amazon_sp_client_id_isValid;

    m_amazon_sp_client_secret_isValid = ::OpenAPI::fromJsonValue(m_amazon_sp_client_secret, json[QString("amazon_sp_client_secret")]);
    m_amazon_sp_client_secret_isSet = !json[QString("amazon_sp_client_secret")].isNull() && m_amazon_sp_client_secret_isValid;

    m_amazon_sp_refresh_token_isValid = ::OpenAPI::fromJsonValue(m_amazon_sp_refresh_token, json[QString("amazon_sp_refresh_token")]);
    m_amazon_sp_refresh_token_isSet = !json[QString("amazon_sp_refresh_token")].isNull() && m_amazon_sp_refresh_token_isValid;

    m_amazon_sp_aws_region_isValid = ::OpenAPI::fromJsonValue(m_amazon_sp_aws_region, json[QString("amazon_sp_aws_region")]);
    m_amazon_sp_aws_region_isSet = !json[QString("amazon_sp_aws_region")].isNull() && m_amazon_sp_aws_region_isValid;

    m_amazon_sp_api_environment_isValid = ::OpenAPI::fromJsonValue(m_amazon_sp_api_environment, json[QString("amazon_sp_api_environment")]);
    m_amazon_sp_api_environment_isSet = !json[QString("amazon_sp_api_environment")].isNull() && m_amazon_sp_api_environment_isValid;

    m_amazon_seller_id_isValid = ::OpenAPI::fromJsonValue(m_amazon_seller_id, json[QString("amazon_seller_id")]);
    m_amazon_seller_id_isSet = !json[QString("amazon_seller_id")].isNull() && m_amazon_seller_id_isValid;

    m_aspdotnetstorefront_api_user_isValid = ::OpenAPI::fromJsonValue(m_aspdotnetstorefront_api_user, json[QString("aspdotnetstorefront_api_user")]);
    m_aspdotnetstorefront_api_user_isSet = !json[QString("aspdotnetstorefront_api_user")].isNull() && m_aspdotnetstorefront_api_user_isValid;

    m_aspdotnetstorefront_api_pass_isValid = ::OpenAPI::fromJsonValue(m_aspdotnetstorefront_api_pass, json[QString("aspdotnetstorefront_api_pass")]);
    m_aspdotnetstorefront_api_pass_isSet = !json[QString("aspdotnetstorefront_api_pass")].isNull() && m_aspdotnetstorefront_api_pass_isValid;

    m_bigcommerceapi_admin_account_isValid = ::OpenAPI::fromJsonValue(m_bigcommerceapi_admin_account, json[QString("bigcommerceapi_admin_account")]);
    m_bigcommerceapi_admin_account_isSet = !json[QString("bigcommerceapi_admin_account")].isNull() && m_bigcommerceapi_admin_account_isValid;

    m_bigcommerceapi_api_path_isValid = ::OpenAPI::fromJsonValue(m_bigcommerceapi_api_path, json[QString("bigcommerceapi_api_path")]);
    m_bigcommerceapi_api_path_isSet = !json[QString("bigcommerceapi_api_path")].isNull() && m_bigcommerceapi_api_path_isValid;

    m_bigcommerceapi_api_key_isValid = ::OpenAPI::fromJsonValue(m_bigcommerceapi_api_key, json[QString("bigcommerceapi_api_key")]);
    m_bigcommerceapi_api_key_isSet = !json[QString("bigcommerceapi_api_key")].isNull() && m_bigcommerceapi_api_key_isValid;

    m_bigcommerceapi_client_id_isValid = ::OpenAPI::fromJsonValue(m_bigcommerceapi_client_id, json[QString("bigcommerceapi_client_id")]);
    m_bigcommerceapi_client_id_isSet = !json[QString("bigcommerceapi_client_id")].isNull() && m_bigcommerceapi_client_id_isValid;

    m_bigcommerceapi_access_token_isValid = ::OpenAPI::fromJsonValue(m_bigcommerceapi_access_token, json[QString("bigcommerceapi_access_token")]);
    m_bigcommerceapi_access_token_isSet = !json[QString("bigcommerceapi_access_token")].isNull() && m_bigcommerceapi_access_token_isValid;

    m_bigcommerceapi_context_isValid = ::OpenAPI::fromJsonValue(m_bigcommerceapi_context, json[QString("bigcommerceapi_context")]);
    m_bigcommerceapi_context_isSet = !json[QString("bigcommerceapi_context")].isNull() && m_bigcommerceapi_context_isValid;

    m_bol_api_key_isValid = ::OpenAPI::fromJsonValue(m_bol_api_key, json[QString("bol_api_key")]);
    m_bol_api_key_isSet = !json[QString("bol_api_key")].isNull() && m_bol_api_key_isValid;

    m_bol_api_secret_isValid = ::OpenAPI::fromJsonValue(m_bol_api_secret, json[QString("bol_api_secret")]);
    m_bol_api_secret_isSet = !json[QString("bol_api_secret")].isNull() && m_bol_api_secret_isValid;

    m_bol_retailer_id_isValid = ::OpenAPI::fromJsonValue(m_bol_retailer_id, json[QString("bol_retailer_id")]);
    m_bol_retailer_id_isSet = !json[QString("bol_retailer_id")].isNull() && m_bol_retailer_id_isValid;

    m_demandware_client_id_isValid = ::OpenAPI::fromJsonValue(m_demandware_client_id, json[QString("demandware_client_id")]);
    m_demandware_client_id_isSet = !json[QString("demandware_client_id")].isNull() && m_demandware_client_id_isValid;

    m_demandware_api_password_isValid = ::OpenAPI::fromJsonValue(m_demandware_api_password, json[QString("demandware_api_password")]);
    m_demandware_api_password_isSet = !json[QString("demandware_api_password")].isNull() && m_demandware_api_password_isValid;

    m_demandware_user_name_isValid = ::OpenAPI::fromJsonValue(m_demandware_user_name, json[QString("demandware_user_name")]);
    m_demandware_user_name_isSet = !json[QString("demandware_user_name")].isNull() && m_demandware_user_name_isValid;

    m_demandware_user_password_isValid = ::OpenAPI::fromJsonValue(m_demandware_user_password, json[QString("demandware_user_password")]);
    m_demandware_user_password_isSet = !json[QString("demandware_user_password")].isNull() && m_demandware_user_password_isValid;

    m_ebay_client_id_isValid = ::OpenAPI::fromJsonValue(m_ebay_client_id, json[QString("ebay_client_id")]);
    m_ebay_client_id_isSet = !json[QString("ebay_client_id")].isNull() && m_ebay_client_id_isValid;

    m_ebay_client_secret_isValid = ::OpenAPI::fromJsonValue(m_ebay_client_secret, json[QString("ebay_client_secret")]);
    m_ebay_client_secret_isSet = !json[QString("ebay_client_secret")].isNull() && m_ebay_client_secret_isValid;

    m_ebay_runame_isValid = ::OpenAPI::fromJsonValue(m_ebay_runame, json[QString("ebay_runame")]);
    m_ebay_runame_isSet = !json[QString("ebay_runame")].isNull() && m_ebay_runame_isValid;

    m_ebay_access_token_isValid = ::OpenAPI::fromJsonValue(m_ebay_access_token, json[QString("ebay_access_token")]);
    m_ebay_access_token_isSet = !json[QString("ebay_access_token")].isNull() && m_ebay_access_token_isValid;

    m_ebay_refresh_token_isValid = ::OpenAPI::fromJsonValue(m_ebay_refresh_token, json[QString("ebay_refresh_token")]);
    m_ebay_refresh_token_isSet = !json[QString("ebay_refresh_token")].isNull() && m_ebay_refresh_token_isValid;

    m_ebay_environment_isValid = ::OpenAPI::fromJsonValue(m_ebay_environment, json[QString("ebay_environment")]);
    m_ebay_environment_isSet = !json[QString("ebay_environment")].isNull() && m_ebay_environment_isValid;

    m_ebay_site_id_isValid = ::OpenAPI::fromJsonValue(m_ebay_site_id, json[QString("ebay_site_id")]);
    m_ebay_site_id_isSet = !json[QString("ebay_site_id")].isNull() && m_ebay_site_id_isValid;

    m_walmart_client_id_isValid = ::OpenAPI::fromJsonValue(m_walmart_client_id, json[QString("walmart_client_id")]);
    m_walmart_client_id_isSet = !json[QString("walmart_client_id")].isNull() && m_walmart_client_id_isValid;

    m_walmart_client_secret_isValid = ::OpenAPI::fromJsonValue(m_walmart_client_secret, json[QString("walmart_client_secret")]);
    m_walmart_client_secret_isSet = !json[QString("walmart_client_secret")].isNull() && m_walmart_client_secret_isValid;

    m_walmart_environment_isValid = ::OpenAPI::fromJsonValue(m_walmart_environment, json[QString("walmart_environment")]);
    m_walmart_environment_isSet = !json[QString("walmart_environment")].isNull() && m_walmart_environment_isValid;

    m_walmart_channel_type_isValid = ::OpenAPI::fromJsonValue(m_walmart_channel_type, json[QString("walmart_channel_type")]);
    m_walmart_channel_type_isSet = !json[QString("walmart_channel_type")].isNull() && m_walmart_channel_type_isValid;

    m_walmart_region_isValid = ::OpenAPI::fromJsonValue(m_walmart_region, json[QString("walmart_region")]);
    m_walmart_region_isSet = !json[QString("walmart_region")].isNull() && m_walmart_region_isValid;

    m_ecwid_acess_token_isValid = ::OpenAPI::fromJsonValue(m_ecwid_acess_token, json[QString("ecwid_acess_token")]);
    m_ecwid_acess_token_isSet = !json[QString("ecwid_acess_token")].isNull() && m_ecwid_acess_token_isValid;

    m_ecwid_store_id_isValid = ::OpenAPI::fromJsonValue(m_ecwid_store_id, json[QString("ecwid_store_id")]);
    m_ecwid_store_id_isSet = !json[QString("ecwid_store_id")].isNull() && m_ecwid_store_id_isValid;

    m_lazada_app_id_isValid = ::OpenAPI::fromJsonValue(m_lazada_app_id, json[QString("lazada_app_id")]);
    m_lazada_app_id_isSet = !json[QString("lazada_app_id")].isNull() && m_lazada_app_id_isValid;

    m_lazada_app_secret_isValid = ::OpenAPI::fromJsonValue(m_lazada_app_secret, json[QString("lazada_app_secret")]);
    m_lazada_app_secret_isSet = !json[QString("lazada_app_secret")].isNull() && m_lazada_app_secret_isValid;

    m_lazada_refresh_token_isValid = ::OpenAPI::fromJsonValue(m_lazada_refresh_token, json[QString("lazada_refresh_token")]);
    m_lazada_refresh_token_isSet = !json[QString("lazada_refresh_token")].isNull() && m_lazada_refresh_token_isValid;

    m_lazada_region_isValid = ::OpenAPI::fromJsonValue(m_lazada_region, json[QString("lazada_region")]);
    m_lazada_region_isSet = !json[QString("lazada_region")].isNull() && m_lazada_region_isValid;

    m_lightspeed_api_key_isValid = ::OpenAPI::fromJsonValue(m_lightspeed_api_key, json[QString("lightspeed_api_key")]);
    m_lightspeed_api_key_isSet = !json[QString("lightspeed_api_key")].isNull() && m_lightspeed_api_key_isValid;

    m_lightspeed_api_secret_isValid = ::OpenAPI::fromJsonValue(m_lightspeed_api_secret, json[QString("lightspeed_api_secret")]);
    m_lightspeed_api_secret_isSet = !json[QString("lightspeed_api_secret")].isNull() && m_lightspeed_api_secret_isValid;

    m_etsy_keystring_isValid = ::OpenAPI::fromJsonValue(m_etsy_keystring, json[QString("etsy_keystring")]);
    m_etsy_keystring_isSet = !json[QString("etsy_keystring")].isNull() && m_etsy_keystring_isValid;

    m_etsy_shared_secret_isValid = ::OpenAPI::fromJsonValue(m_etsy_shared_secret, json[QString("etsy_shared_secret")]);
    m_etsy_shared_secret_isSet = !json[QString("etsy_shared_secret")].isNull() && m_etsy_shared_secret_isValid;

    m_etsy_access_token_isValid = ::OpenAPI::fromJsonValue(m_etsy_access_token, json[QString("etsy_access_token")]);
    m_etsy_access_token_isSet = !json[QString("etsy_access_token")].isNull() && m_etsy_access_token_isValid;

    m_etsy_token_secret_isValid = ::OpenAPI::fromJsonValue(m_etsy_token_secret, json[QString("etsy_token_secret")]);
    m_etsy_token_secret_isSet = !json[QString("etsy_token_secret")].isNull() && m_etsy_token_secret_isValid;

    m_etsy_client_id_isValid = ::OpenAPI::fromJsonValue(m_etsy_client_id, json[QString("etsy_client_id")]);
    m_etsy_client_id_isSet = !json[QString("etsy_client_id")].isNull() && m_etsy_client_id_isValid;

    m_etsy_refresh_token_isValid = ::OpenAPI::fromJsonValue(m_etsy_refresh_token, json[QString("etsy_refresh_token")]);
    m_etsy_refresh_token_isSet = !json[QString("etsy_refresh_token")].isNull() && m_etsy_refresh_token_isValid;

    m_facebook_app_id_isValid = ::OpenAPI::fromJsonValue(m_facebook_app_id, json[QString("facebook_app_id")]);
    m_facebook_app_id_isSet = !json[QString("facebook_app_id")].isNull() && m_facebook_app_id_isValid;

    m_facebook_app_secret_isValid = ::OpenAPI::fromJsonValue(m_facebook_app_secret, json[QString("facebook_app_secret")]);
    m_facebook_app_secret_isSet = !json[QString("facebook_app_secret")].isNull() && m_facebook_app_secret_isValid;

    m_facebook_access_token_isValid = ::OpenAPI::fromJsonValue(m_facebook_access_token, json[QString("facebook_access_token")]);
    m_facebook_access_token_isSet = !json[QString("facebook_access_token")].isNull() && m_facebook_access_token_isValid;

    m_facebook_business_id_isValid = ::OpenAPI::fromJsonValue(m_facebook_business_id, json[QString("facebook_business_id")]);
    m_facebook_business_id_isSet = !json[QString("facebook_business_id")].isNull() && m_facebook_business_id_isValid;

    m_neto_api_key_isValid = ::OpenAPI::fromJsonValue(m_neto_api_key, json[QString("neto_api_key")]);
    m_neto_api_key_isSet = !json[QString("neto_api_key")].isNull() && m_neto_api_key_isValid;

    m_neto_api_username_isValid = ::OpenAPI::fromJsonValue(m_neto_api_username, json[QString("neto_api_username")]);
    m_neto_api_username_isSet = !json[QString("neto_api_username")].isNull() && m_neto_api_username_isValid;

    m_shopline_access_token_isValid = ::OpenAPI::fromJsonValue(m_shopline_access_token, json[QString("shopline_access_token")]);
    m_shopline_access_token_isSet = !json[QString("shopline_access_token")].isNull() && m_shopline_access_token_isValid;

    m_shopline_app_key_isValid = ::OpenAPI::fromJsonValue(m_shopline_app_key, json[QString("shopline_app_key")]);
    m_shopline_app_key_isSet = !json[QString("shopline_app_key")].isNull() && m_shopline_app_key_isValid;

    m_shopline_app_secret_isValid = ::OpenAPI::fromJsonValue(m_shopline_app_secret, json[QString("shopline_app_secret")]);
    m_shopline_app_secret_isSet = !json[QString("shopline_app_secret")].isNull() && m_shopline_app_secret_isValid;

    m_shopify_access_token_isValid = ::OpenAPI::fromJsonValue(m_shopify_access_token, json[QString("shopify_access_token")]);
    m_shopify_access_token_isSet = !json[QString("shopify_access_token")].isNull() && m_shopify_access_token_isValid;

    m_shopify_api_key_isValid = ::OpenAPI::fromJsonValue(m_shopify_api_key, json[QString("shopify_api_key")]);
    m_shopify_api_key_isSet = !json[QString("shopify_api_key")].isNull() && m_shopify_api_key_isValid;

    m_shopify_api_password_isValid = ::OpenAPI::fromJsonValue(m_shopify_api_password, json[QString("shopify_api_password")]);
    m_shopify_api_password_isSet = !json[QString("shopify_api_password")].isNull() && m_shopify_api_password_isValid;

    m_shopify_shared_secret_isValid = ::OpenAPI::fromJsonValue(m_shopify_shared_secret, json[QString("shopify_shared_secret")]);
    m_shopify_shared_secret_isSet = !json[QString("shopify_shared_secret")].isNull() && m_shopify_shared_secret_isValid;

    m_shoplazza_access_token_isValid = ::OpenAPI::fromJsonValue(m_shoplazza_access_token, json[QString("shoplazza_access_token")]);
    m_shoplazza_access_token_isSet = !json[QString("shoplazza_access_token")].isNull() && m_shoplazza_access_token_isValid;

    m_shoplazza_shared_secret_isValid = ::OpenAPI::fromJsonValue(m_shoplazza_shared_secret, json[QString("shoplazza_shared_secret")]);
    m_shoplazza_shared_secret_isSet = !json[QString("shoplazza_shared_secret")].isNull() && m_shoplazza_shared_secret_isValid;

    m_shopware_access_key_isValid = ::OpenAPI::fromJsonValue(m_shopware_access_key, json[QString("shopware_access_key")]);
    m_shopware_access_key_isSet = !json[QString("shopware_access_key")].isNull() && m_shopware_access_key_isValid;

    m_shopware_api_key_isValid = ::OpenAPI::fromJsonValue(m_shopware_api_key, json[QString("shopware_api_key")]);
    m_shopware_api_key_isSet = !json[QString("shopware_api_key")].isNull() && m_shopware_api_key_isValid;

    m_shopware_api_secret_isValid = ::OpenAPI::fromJsonValue(m_shopware_api_secret, json[QString("shopware_api_secret")]);
    m_shopware_api_secret_isSet = !json[QString("shopware_api_secret")].isNull() && m_shopware_api_secret_isValid;

    m_miva_access_token_isValid = ::OpenAPI::fromJsonValue(m_miva_access_token, json[QString("miva_access_token")]);
    m_miva_access_token_isSet = !json[QString("miva_access_token")].isNull() && m_miva_access_token_isValid;

    m_miva_signature_isValid = ::OpenAPI::fromJsonValue(m_miva_signature, json[QString("miva_signature")]);
    m_miva_signature_isSet = !json[QString("miva_signature")].isNull() && m_miva_signature_isValid;

    m_tiendanube_user_id_isValid = ::OpenAPI::fromJsonValue(m_tiendanube_user_id, json[QString("tiendanube_user_id")]);
    m_tiendanube_user_id_isSet = !json[QString("tiendanube_user_id")].isNull() && m_tiendanube_user_id_isValid;

    m_tiendanube_access_token_isValid = ::OpenAPI::fromJsonValue(m_tiendanube_access_token, json[QString("tiendanube_access_token")]);
    m_tiendanube_access_token_isSet = !json[QString("tiendanube_access_token")].isNull() && m_tiendanube_access_token_isValid;

    m_tiendanube_client_secret_isValid = ::OpenAPI::fromJsonValue(m_tiendanube_client_secret, json[QString("tiendanube_client_secret")]);
    m_tiendanube_client_secret_isSet = !json[QString("tiendanube_client_secret")].isNull() && m_tiendanube_client_secret_isValid;

    m_volusion_login_isValid = ::OpenAPI::fromJsonValue(m_volusion_login, json[QString("volusion_login")]);
    m_volusion_login_isSet = !json[QString("volusion_login")].isNull() && m_volusion_login_isValid;

    m_volusion_password_isValid = ::OpenAPI::fromJsonValue(m_volusion_password, json[QString("volusion_password")]);
    m_volusion_password_isSet = !json[QString("volusion_password")].isNull() && m_volusion_password_isValid;

    m_hybris_client_id_isValid = ::OpenAPI::fromJsonValue(m_hybris_client_id, json[QString("hybris_client_id")]);
    m_hybris_client_id_isSet = !json[QString("hybris_client_id")].isNull() && m_hybris_client_id_isValid;

    m_hybris_client_secret_isValid = ::OpenAPI::fromJsonValue(m_hybris_client_secret, json[QString("hybris_client_secret")]);
    m_hybris_client_secret_isSet = !json[QString("hybris_client_secret")].isNull() && m_hybris_client_secret_isValid;

    m_hybris_username_isValid = ::OpenAPI::fromJsonValue(m_hybris_username, json[QString("hybris_username")]);
    m_hybris_username_isSet = !json[QString("hybris_username")].isNull() && m_hybris_username_isValid;

    m_hybris_password_isValid = ::OpenAPI::fromJsonValue(m_hybris_password, json[QString("hybris_password")]);
    m_hybris_password_isSet = !json[QString("hybris_password")].isNull() && m_hybris_password_isValid;

    m_hybris_websites_isValid = ::OpenAPI::fromJsonValue(m_hybris_websites, json[QString("hybris_websites")]);
    m_hybris_websites_isSet = !json[QString("hybris_websites")].isNull() && m_hybris_websites_isValid;

    m_square_client_id_isValid = ::OpenAPI::fromJsonValue(m_square_client_id, json[QString("square_client_id")]);
    m_square_client_id_isSet = !json[QString("square_client_id")].isNull() && m_square_client_id_isValid;

    m_square_client_secret_isValid = ::OpenAPI::fromJsonValue(m_square_client_secret, json[QString("square_client_secret")]);
    m_square_client_secret_isSet = !json[QString("square_client_secret")].isNull() && m_square_client_secret_isValid;

    m_square_refresh_token_isValid = ::OpenAPI::fromJsonValue(m_square_refresh_token, json[QString("square_refresh_token")]);
    m_square_refresh_token_isSet = !json[QString("square_refresh_token")].isNull() && m_square_refresh_token_isValid;

    m_squarespace_api_key_isValid = ::OpenAPI::fromJsonValue(m_squarespace_api_key, json[QString("squarespace_api_key")]);
    m_squarespace_api_key_isSet = !json[QString("squarespace_api_key")].isNull() && m_squarespace_api_key_isValid;

    m_squarespace_client_id_isValid = ::OpenAPI::fromJsonValue(m_squarespace_client_id, json[QString("squarespace_client_id")]);
    m_squarespace_client_id_isSet = !json[QString("squarespace_client_id")].isNull() && m_squarespace_client_id_isValid;

    m_squarespace_client_secret_isValid = ::OpenAPI::fromJsonValue(m_squarespace_client_secret, json[QString("squarespace_client_secret")]);
    m_squarespace_client_secret_isSet = !json[QString("squarespace_client_secret")].isNull() && m_squarespace_client_secret_isValid;

    m_squarespace_access_token_isValid = ::OpenAPI::fromJsonValue(m_squarespace_access_token, json[QString("squarespace_access_token")]);
    m_squarespace_access_token_isSet = !json[QString("squarespace_access_token")].isNull() && m_squarespace_access_token_isValid;

    m_squarespace_refresh_token_isValid = ::OpenAPI::fromJsonValue(m_squarespace_refresh_token, json[QString("squarespace_refresh_token")]);
    m_squarespace_refresh_token_isSet = !json[QString("squarespace_refresh_token")].isNull() && m_squarespace_refresh_token_isValid;

    m_commercehq_api_key_isValid = ::OpenAPI::fromJsonValue(m_commercehq_api_key, json[QString("commercehq_api_key")]);
    m_commercehq_api_key_isSet = !json[QString("commercehq_api_key")].isNull() && m_commercehq_api_key_isValid;

    m_commercehq_api_password_isValid = ::OpenAPI::fromJsonValue(m_commercehq_api_password, json[QString("commercehq_api_password")]);
    m_commercehq_api_password_isSet = !json[QString("commercehq_api_password")].isNull() && m_commercehq_api_password_isValid;

    m_wc_consumer_key_isValid = ::OpenAPI::fromJsonValue(m_wc_consumer_key, json[QString("wc_consumer_key")]);
    m_wc_consumer_key_isSet = !json[QString("wc_consumer_key")].isNull() && m_wc_consumer_key_isValid;

    m_wc_consumer_secret_isValid = ::OpenAPI::fromJsonValue(m_wc_consumer_secret, json[QString("wc_consumer_secret")]);
    m_wc_consumer_secret_isSet = !json[QString("wc_consumer_secret")].isNull() && m_wc_consumer_secret_isValid;

    m_magento_consumer_key_isValid = ::OpenAPI::fromJsonValue(m_magento_consumer_key, json[QString("magento_consumer_key")]);
    m_magento_consumer_key_isSet = !json[QString("magento_consumer_key")].isNull() && m_magento_consumer_key_isValid;

    m_magento_consumer_secret_isValid = ::OpenAPI::fromJsonValue(m_magento_consumer_secret, json[QString("magento_consumer_secret")]);
    m_magento_consumer_secret_isSet = !json[QString("magento_consumer_secret")].isNull() && m_magento_consumer_secret_isValid;

    m_magento_access_token_isValid = ::OpenAPI::fromJsonValue(m_magento_access_token, json[QString("magento_access_token")]);
    m_magento_access_token_isSet = !json[QString("magento_access_token")].isNull() && m_magento_access_token_isValid;

    m_magento_token_secret_isValid = ::OpenAPI::fromJsonValue(m_magento_token_secret, json[QString("magento_token_secret")]);
    m_magento_token_secret_isSet = !json[QString("magento_token_secret")].isNull() && m_magento_token_secret_isValid;

    m_prestashop_webservice_key_isValid = ::OpenAPI::fromJsonValue(m_prestashop_webservice_key, json[QString("prestashop_webservice_key")]);
    m_prestashop_webservice_key_isSet = !json[QString("prestashop_webservice_key")].isNull() && m_prestashop_webservice_key_isValid;

    m_wix_app_id_isValid = ::OpenAPI::fromJsonValue(m_wix_app_id, json[QString("wix_app_id")]);
    m_wix_app_id_isSet = !json[QString("wix_app_id")].isNull() && m_wix_app_id_isValid;

    m_wix_app_secret_key_isValid = ::OpenAPI::fromJsonValue(m_wix_app_secret_key, json[QString("wix_app_secret_key")]);
    m_wix_app_secret_key_isSet = !json[QString("wix_app_secret_key")].isNull() && m_wix_app_secret_key_isValid;

    m_wix_instance_id_isValid = ::OpenAPI::fromJsonValue(m_wix_instance_id, json[QString("wix_instance_id")]);
    m_wix_instance_id_isSet = !json[QString("wix_instance_id")].isNull() && m_wix_instance_id_isValid;

    m_wix_refresh_token_isValid = ::OpenAPI::fromJsonValue(m_wix_refresh_token, json[QString("wix_refresh_token")]);
    m_wix_refresh_token_isSet = !json[QString("wix_refresh_token")].isNull() && m_wix_refresh_token_isValid;

    m_mercado_libre_app_id_isValid = ::OpenAPI::fromJsonValue(m_mercado_libre_app_id, json[QString("mercado_libre_app_id")]);
    m_mercado_libre_app_id_isSet = !json[QString("mercado_libre_app_id")].isNull() && m_mercado_libre_app_id_isValid;

    m_mercado_libre_app_secret_key_isValid = ::OpenAPI::fromJsonValue(m_mercado_libre_app_secret_key, json[QString("mercado_libre_app_secret_key")]);
    m_mercado_libre_app_secret_key_isSet = !json[QString("mercado_libre_app_secret_key")].isNull() && m_mercado_libre_app_secret_key_isValid;

    m_mercado_libre_refresh_token_isValid = ::OpenAPI::fromJsonValue(m_mercado_libre_refresh_token, json[QString("mercado_libre_refresh_token")]);
    m_mercado_libre_refresh_token_isSet = !json[QString("mercado_libre_refresh_token")].isNull() && m_mercado_libre_refresh_token_isValid;

    m_zid_client_id_isValid = ::OpenAPI::fromJsonValue(m_zid_client_id, json[QString("zid_client_id")]);
    m_zid_client_id_isSet = !json[QString("zid_client_id")].isNull() && m_zid_client_id_isValid;

    m_zid_client_secret_isValid = ::OpenAPI::fromJsonValue(m_zid_client_secret, json[QString("zid_client_secret")]);
    m_zid_client_secret_isSet = !json[QString("zid_client_secret")].isNull() && m_zid_client_secret_isValid;

    m_zid_access_token_isValid = ::OpenAPI::fromJsonValue(m_zid_access_token, json[QString("zid_access_token")]);
    m_zid_access_token_isSet = !json[QString("zid_access_token")].isNull() && m_zid_access_token_isValid;

    m_zid_authorization_isValid = ::OpenAPI::fromJsonValue(m_zid_authorization, json[QString("zid_authorization")]);
    m_zid_authorization_isSet = !json[QString("zid_authorization")].isNull() && m_zid_authorization_isValid;

    m_zid_refresh_token_isValid = ::OpenAPI::fromJsonValue(m_zid_refresh_token, json[QString("zid_refresh_token")]);
    m_zid_refresh_token_isSet = !json[QString("zid_refresh_token")].isNull() && m_zid_refresh_token_isValid;

    m_flipkart_client_id_isValid = ::OpenAPI::fromJsonValue(m_flipkart_client_id, json[QString("flipkart_client_id")]);
    m_flipkart_client_id_isSet = !json[QString("flipkart_client_id")].isNull() && m_flipkart_client_id_isValid;

    m_flipkart_client_secret_isValid = ::OpenAPI::fromJsonValue(m_flipkart_client_secret, json[QString("flipkart_client_secret")]);
    m_flipkart_client_secret_isSet = !json[QString("flipkart_client_secret")].isNull() && m_flipkart_client_secret_isValid;

    m_allegro_client_id_isValid = ::OpenAPI::fromJsonValue(m_allegro_client_id, json[QString("allegro_client_id")]);
    m_allegro_client_id_isSet = !json[QString("allegro_client_id")].isNull() && m_allegro_client_id_isValid;

    m_allegro_client_secret_isValid = ::OpenAPI::fromJsonValue(m_allegro_client_secret, json[QString("allegro_client_secret")]);
    m_allegro_client_secret_isSet = !json[QString("allegro_client_secret")].isNull() && m_allegro_client_secret_isValid;

    m_allegro_access_token_isValid = ::OpenAPI::fromJsonValue(m_allegro_access_token, json[QString("allegro_access_token")]);
    m_allegro_access_token_isSet = !json[QString("allegro_access_token")].isNull() && m_allegro_access_token_isValid;

    m_allegro_refresh_token_isValid = ::OpenAPI::fromJsonValue(m_allegro_refresh_token, json[QString("allegro_refresh_token")]);
    m_allegro_refresh_token_isSet = !json[QString("allegro_refresh_token")].isNull() && m_allegro_refresh_token_isValid;

    m_allegro_environment_isValid = ::OpenAPI::fromJsonValue(m_allegro_environment, json[QString("allegro_environment")]);
    m_allegro_environment_isSet = !json[QString("allegro_environment")].isNull() && m_allegro_environment_isValid;

    m_zoho_client_id_isValid = ::OpenAPI::fromJsonValue(m_zoho_client_id, json[QString("zoho_client_id")]);
    m_zoho_client_id_isSet = !json[QString("zoho_client_id")].isNull() && m_zoho_client_id_isValid;

    m_zoho_client_secret_isValid = ::OpenAPI::fromJsonValue(m_zoho_client_secret, json[QString("zoho_client_secret")]);
    m_zoho_client_secret_isSet = !json[QString("zoho_client_secret")].isNull() && m_zoho_client_secret_isValid;

    m_zoho_refresh_token_isValid = ::OpenAPI::fromJsonValue(m_zoho_refresh_token, json[QString("zoho_refresh_token")]);
    m_zoho_refresh_token_isSet = !json[QString("zoho_refresh_token")].isNull() && m_zoho_refresh_token_isValid;

    m_zoho_region_isValid = ::OpenAPI::fromJsonValue(m_zoho_region, json[QString("zoho_region")]);
    m_zoho_region_isSet = !json[QString("zoho_region")].isNull() && m_zoho_region_isValid;

    m_otto_client_id_isValid = ::OpenAPI::fromJsonValue(m_otto_client_id, json[QString("otto_client_id")]);
    m_otto_client_id_isSet = !json[QString("otto_client_id")].isNull() && m_otto_client_id_isValid;

    m_otto_client_secret_isValid = ::OpenAPI::fromJsonValue(m_otto_client_secret, json[QString("otto_client_secret")]);
    m_otto_client_secret_isSet = !json[QString("otto_client_secret")].isNull() && m_otto_client_secret_isValid;

    m_otto_app_id_isValid = ::OpenAPI::fromJsonValue(m_otto_app_id, json[QString("otto_app_id")]);
    m_otto_app_id_isSet = !json[QString("otto_app_id")].isNull() && m_otto_app_id_isValid;

    m_otto_refresh_token_isValid = ::OpenAPI::fromJsonValue(m_otto_refresh_token, json[QString("otto_refresh_token")]);
    m_otto_refresh_token_isSet = !json[QString("otto_refresh_token")].isNull() && m_otto_refresh_token_isValid;

    m_otto_environment_isValid = ::OpenAPI::fromJsonValue(m_otto_environment, json[QString("otto_environment")]);
    m_otto_environment_isSet = !json[QString("otto_environment")].isNull() && m_otto_environment_isValid;

    m_otto_access_token_isValid = ::OpenAPI::fromJsonValue(m_otto_access_token, json[QString("otto_access_token")]);
    m_otto_access_token_isSet = !json[QString("otto_access_token")].isNull() && m_otto_access_token_isValid;

    m_tiktokshop_app_key_isValid = ::OpenAPI::fromJsonValue(m_tiktokshop_app_key, json[QString("tiktokshop_app_key")]);
    m_tiktokshop_app_key_isSet = !json[QString("tiktokshop_app_key")].isNull() && m_tiktokshop_app_key_isValid;

    m_tiktokshop_app_secret_isValid = ::OpenAPI::fromJsonValue(m_tiktokshop_app_secret, json[QString("tiktokshop_app_secret")]);
    m_tiktokshop_app_secret_isSet = !json[QString("tiktokshop_app_secret")].isNull() && m_tiktokshop_app_secret_isValid;

    m_tiktokshop_refresh_token_isValid = ::OpenAPI::fromJsonValue(m_tiktokshop_refresh_token, json[QString("tiktokshop_refresh_token")]);
    m_tiktokshop_refresh_token_isSet = !json[QString("tiktokshop_refresh_token")].isNull() && m_tiktokshop_refresh_token_isValid;

    m_tiktokshop_access_token_isValid = ::OpenAPI::fromJsonValue(m_tiktokshop_access_token, json[QString("tiktokshop_access_token")]);
    m_tiktokshop_access_token_isSet = !json[QString("tiktokshop_access_token")].isNull() && m_tiktokshop_access_token_isValid;

    m_salla_client_id_isValid = ::OpenAPI::fromJsonValue(m_salla_client_id, json[QString("salla_client_id")]);
    m_salla_client_id_isSet = !json[QString("salla_client_id")].isNull() && m_salla_client_id_isValid;

    m_salla_client_secret_isValid = ::OpenAPI::fromJsonValue(m_salla_client_secret, json[QString("salla_client_secret")]);
    m_salla_client_secret_isSet = !json[QString("salla_client_secret")].isNull() && m_salla_client_secret_isValid;

    m_salla_refresh_token_isValid = ::OpenAPI::fromJsonValue(m_salla_refresh_token, json[QString("salla_refresh_token")]);
    m_salla_refresh_token_isSet = !json[QString("salla_refresh_token")].isNull() && m_salla_refresh_token_isValid;

    m_salla_access_token_isValid = ::OpenAPI::fromJsonValue(m_salla_access_token, json[QString("salla_access_token")]);
    m_salla_access_token_isSet = !json[QString("salla_access_token")].isNull() && m_salla_access_token_isValid;
}

QString OAIAccountCartAdd::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountCartAdd::asJsonObject() const {
    QJsonObject obj;
    if (m_cart_id_isSet) {
        obj.insert(QString("cart_id"), ::OpenAPI::toJsonValue(m_cart_id));
    }
    if (m_store_url_isSet) {
        obj.insert(QString("store_url"), ::OpenAPI::toJsonValue(m_store_url));
    }
    if (m_bridge_url_isSet) {
        obj.insert(QString("bridge_url"), ::OpenAPI::toJsonValue(m_bridge_url));
    }
    if (m_store_root_isSet) {
        obj.insert(QString("store_root"), ::OpenAPI::toJsonValue(m_store_root));
    }
    if (m_store_key_isSet) {
        obj.insert(QString("store_key"), ::OpenAPI::toJsonValue(m_store_key));
    }
    if (m_validate_version_isSet) {
        obj.insert(QString("validate_version"), ::OpenAPI::toJsonValue(m_validate_version));
    }
    if (m_verify_isSet) {
        obj.insert(QString("verify"), ::OpenAPI::toJsonValue(m_verify));
    }
    if (m_db_tables_prefix_isSet) {
        obj.insert(QString("db_tables_prefix"), ::OpenAPI::toJsonValue(m_db_tables_prefix));
    }
    if (m_user_agent_isSet) {
        obj.insert(QString("user_agent"), ::OpenAPI::toJsonValue(m_user_agent));
    }
    if (m_ftp_host_isSet) {
        obj.insert(QString("ftp_host"), ::OpenAPI::toJsonValue(m_ftp_host));
    }
    if (m_ftp_user_isSet) {
        obj.insert(QString("ftp_user"), ::OpenAPI::toJsonValue(m_ftp_user));
    }
    if (m_ftp_password_isSet) {
        obj.insert(QString("ftp_password"), ::OpenAPI::toJsonValue(m_ftp_password));
    }
    if (m_ftp_port_isSet) {
        obj.insert(QString("ftp_port"), ::OpenAPI::toJsonValue(m_ftp_port));
    }
    if (m_ftp_store_dir_isSet) {
        obj.insert(QString("ftp_store_dir"), ::OpenAPI::toJsonValue(m_ftp_store_dir));
    }
    if (m_r_3dcart_private_key_isSet) {
        obj.insert(QString("3dcart_private_key"), ::OpenAPI::toJsonValue(m_r_3dcart_private_key));
    }
    if (m_r_3dcart_access_token_isSet) {
        obj.insert(QString("3dcart_access_token"), ::OpenAPI::toJsonValue(m_r_3dcart_access_token));
    }
    if (m_r_3dcartapi_api_key_isSet) {
        obj.insert(QString("3dcartapi_api_key"), ::OpenAPI::toJsonValue(m_r_3dcartapi_api_key));
    }
    if (m_amazon_sp_client_id_isSet) {
        obj.insert(QString("amazon_sp_client_id"), ::OpenAPI::toJsonValue(m_amazon_sp_client_id));
    }
    if (m_amazon_sp_client_secret_isSet) {
        obj.insert(QString("amazon_sp_client_secret"), ::OpenAPI::toJsonValue(m_amazon_sp_client_secret));
    }
    if (m_amazon_sp_refresh_token_isSet) {
        obj.insert(QString("amazon_sp_refresh_token"), ::OpenAPI::toJsonValue(m_amazon_sp_refresh_token));
    }
    if (m_amazon_sp_aws_region_isSet) {
        obj.insert(QString("amazon_sp_aws_region"), ::OpenAPI::toJsonValue(m_amazon_sp_aws_region));
    }
    if (m_amazon_sp_api_environment_isSet) {
        obj.insert(QString("amazon_sp_api_environment"), ::OpenAPI::toJsonValue(m_amazon_sp_api_environment));
    }
    if (m_amazon_seller_id_isSet) {
        obj.insert(QString("amazon_seller_id"), ::OpenAPI::toJsonValue(m_amazon_seller_id));
    }
    if (m_aspdotnetstorefront_api_user_isSet) {
        obj.insert(QString("aspdotnetstorefront_api_user"), ::OpenAPI::toJsonValue(m_aspdotnetstorefront_api_user));
    }
    if (m_aspdotnetstorefront_api_pass_isSet) {
        obj.insert(QString("aspdotnetstorefront_api_pass"), ::OpenAPI::toJsonValue(m_aspdotnetstorefront_api_pass));
    }
    if (m_bigcommerceapi_admin_account_isSet) {
        obj.insert(QString("bigcommerceapi_admin_account"), ::OpenAPI::toJsonValue(m_bigcommerceapi_admin_account));
    }
    if (m_bigcommerceapi_api_path_isSet) {
        obj.insert(QString("bigcommerceapi_api_path"), ::OpenAPI::toJsonValue(m_bigcommerceapi_api_path));
    }
    if (m_bigcommerceapi_api_key_isSet) {
        obj.insert(QString("bigcommerceapi_api_key"), ::OpenAPI::toJsonValue(m_bigcommerceapi_api_key));
    }
    if (m_bigcommerceapi_client_id_isSet) {
        obj.insert(QString("bigcommerceapi_client_id"), ::OpenAPI::toJsonValue(m_bigcommerceapi_client_id));
    }
    if (m_bigcommerceapi_access_token_isSet) {
        obj.insert(QString("bigcommerceapi_access_token"), ::OpenAPI::toJsonValue(m_bigcommerceapi_access_token));
    }
    if (m_bigcommerceapi_context_isSet) {
        obj.insert(QString("bigcommerceapi_context"), ::OpenAPI::toJsonValue(m_bigcommerceapi_context));
    }
    if (m_bol_api_key_isSet) {
        obj.insert(QString("bol_api_key"), ::OpenAPI::toJsonValue(m_bol_api_key));
    }
    if (m_bol_api_secret_isSet) {
        obj.insert(QString("bol_api_secret"), ::OpenAPI::toJsonValue(m_bol_api_secret));
    }
    if (m_bol_retailer_id_isSet) {
        obj.insert(QString("bol_retailer_id"), ::OpenAPI::toJsonValue(m_bol_retailer_id));
    }
    if (m_demandware_client_id_isSet) {
        obj.insert(QString("demandware_client_id"), ::OpenAPI::toJsonValue(m_demandware_client_id));
    }
    if (m_demandware_api_password_isSet) {
        obj.insert(QString("demandware_api_password"), ::OpenAPI::toJsonValue(m_demandware_api_password));
    }
    if (m_demandware_user_name_isSet) {
        obj.insert(QString("demandware_user_name"), ::OpenAPI::toJsonValue(m_demandware_user_name));
    }
    if (m_demandware_user_password_isSet) {
        obj.insert(QString("demandware_user_password"), ::OpenAPI::toJsonValue(m_demandware_user_password));
    }
    if (m_ebay_client_id_isSet) {
        obj.insert(QString("ebay_client_id"), ::OpenAPI::toJsonValue(m_ebay_client_id));
    }
    if (m_ebay_client_secret_isSet) {
        obj.insert(QString("ebay_client_secret"), ::OpenAPI::toJsonValue(m_ebay_client_secret));
    }
    if (m_ebay_runame_isSet) {
        obj.insert(QString("ebay_runame"), ::OpenAPI::toJsonValue(m_ebay_runame));
    }
    if (m_ebay_access_token_isSet) {
        obj.insert(QString("ebay_access_token"), ::OpenAPI::toJsonValue(m_ebay_access_token));
    }
    if (m_ebay_refresh_token_isSet) {
        obj.insert(QString("ebay_refresh_token"), ::OpenAPI::toJsonValue(m_ebay_refresh_token));
    }
    if (m_ebay_environment_isSet) {
        obj.insert(QString("ebay_environment"), ::OpenAPI::toJsonValue(m_ebay_environment));
    }
    if (m_ebay_site_id_isSet) {
        obj.insert(QString("ebay_site_id"), ::OpenAPI::toJsonValue(m_ebay_site_id));
    }
    if (m_walmart_client_id_isSet) {
        obj.insert(QString("walmart_client_id"), ::OpenAPI::toJsonValue(m_walmart_client_id));
    }
    if (m_walmart_client_secret_isSet) {
        obj.insert(QString("walmart_client_secret"), ::OpenAPI::toJsonValue(m_walmart_client_secret));
    }
    if (m_walmart_environment_isSet) {
        obj.insert(QString("walmart_environment"), ::OpenAPI::toJsonValue(m_walmart_environment));
    }
    if (m_walmart_channel_type_isSet) {
        obj.insert(QString("walmart_channel_type"), ::OpenAPI::toJsonValue(m_walmart_channel_type));
    }
    if (m_walmart_region_isSet) {
        obj.insert(QString("walmart_region"), ::OpenAPI::toJsonValue(m_walmart_region));
    }
    if (m_ecwid_acess_token_isSet) {
        obj.insert(QString("ecwid_acess_token"), ::OpenAPI::toJsonValue(m_ecwid_acess_token));
    }
    if (m_ecwid_store_id_isSet) {
        obj.insert(QString("ecwid_store_id"), ::OpenAPI::toJsonValue(m_ecwid_store_id));
    }
    if (m_lazada_app_id_isSet) {
        obj.insert(QString("lazada_app_id"), ::OpenAPI::toJsonValue(m_lazada_app_id));
    }
    if (m_lazada_app_secret_isSet) {
        obj.insert(QString("lazada_app_secret"), ::OpenAPI::toJsonValue(m_lazada_app_secret));
    }
    if (m_lazada_refresh_token_isSet) {
        obj.insert(QString("lazada_refresh_token"), ::OpenAPI::toJsonValue(m_lazada_refresh_token));
    }
    if (m_lazada_region_isSet) {
        obj.insert(QString("lazada_region"), ::OpenAPI::toJsonValue(m_lazada_region));
    }
    if (m_lightspeed_api_key_isSet) {
        obj.insert(QString("lightspeed_api_key"), ::OpenAPI::toJsonValue(m_lightspeed_api_key));
    }
    if (m_lightspeed_api_secret_isSet) {
        obj.insert(QString("lightspeed_api_secret"), ::OpenAPI::toJsonValue(m_lightspeed_api_secret));
    }
    if (m_etsy_keystring_isSet) {
        obj.insert(QString("etsy_keystring"), ::OpenAPI::toJsonValue(m_etsy_keystring));
    }
    if (m_etsy_shared_secret_isSet) {
        obj.insert(QString("etsy_shared_secret"), ::OpenAPI::toJsonValue(m_etsy_shared_secret));
    }
    if (m_etsy_access_token_isSet) {
        obj.insert(QString("etsy_access_token"), ::OpenAPI::toJsonValue(m_etsy_access_token));
    }
    if (m_etsy_token_secret_isSet) {
        obj.insert(QString("etsy_token_secret"), ::OpenAPI::toJsonValue(m_etsy_token_secret));
    }
    if (m_etsy_client_id_isSet) {
        obj.insert(QString("etsy_client_id"), ::OpenAPI::toJsonValue(m_etsy_client_id));
    }
    if (m_etsy_refresh_token_isSet) {
        obj.insert(QString("etsy_refresh_token"), ::OpenAPI::toJsonValue(m_etsy_refresh_token));
    }
    if (m_facebook_app_id_isSet) {
        obj.insert(QString("facebook_app_id"), ::OpenAPI::toJsonValue(m_facebook_app_id));
    }
    if (m_facebook_app_secret_isSet) {
        obj.insert(QString("facebook_app_secret"), ::OpenAPI::toJsonValue(m_facebook_app_secret));
    }
    if (m_facebook_access_token_isSet) {
        obj.insert(QString("facebook_access_token"), ::OpenAPI::toJsonValue(m_facebook_access_token));
    }
    if (m_facebook_business_id_isSet) {
        obj.insert(QString("facebook_business_id"), ::OpenAPI::toJsonValue(m_facebook_business_id));
    }
    if (m_neto_api_key_isSet) {
        obj.insert(QString("neto_api_key"), ::OpenAPI::toJsonValue(m_neto_api_key));
    }
    if (m_neto_api_username_isSet) {
        obj.insert(QString("neto_api_username"), ::OpenAPI::toJsonValue(m_neto_api_username));
    }
    if (m_shopline_access_token_isSet) {
        obj.insert(QString("shopline_access_token"), ::OpenAPI::toJsonValue(m_shopline_access_token));
    }
    if (m_shopline_app_key_isSet) {
        obj.insert(QString("shopline_app_key"), ::OpenAPI::toJsonValue(m_shopline_app_key));
    }
    if (m_shopline_app_secret_isSet) {
        obj.insert(QString("shopline_app_secret"), ::OpenAPI::toJsonValue(m_shopline_app_secret));
    }
    if (m_shopify_access_token_isSet) {
        obj.insert(QString("shopify_access_token"), ::OpenAPI::toJsonValue(m_shopify_access_token));
    }
    if (m_shopify_api_key_isSet) {
        obj.insert(QString("shopify_api_key"), ::OpenAPI::toJsonValue(m_shopify_api_key));
    }
    if (m_shopify_api_password_isSet) {
        obj.insert(QString("shopify_api_password"), ::OpenAPI::toJsonValue(m_shopify_api_password));
    }
    if (m_shopify_shared_secret_isSet) {
        obj.insert(QString("shopify_shared_secret"), ::OpenAPI::toJsonValue(m_shopify_shared_secret));
    }
    if (m_shoplazza_access_token_isSet) {
        obj.insert(QString("shoplazza_access_token"), ::OpenAPI::toJsonValue(m_shoplazza_access_token));
    }
    if (m_shoplazza_shared_secret_isSet) {
        obj.insert(QString("shoplazza_shared_secret"), ::OpenAPI::toJsonValue(m_shoplazza_shared_secret));
    }
    if (m_shopware_access_key_isSet) {
        obj.insert(QString("shopware_access_key"), ::OpenAPI::toJsonValue(m_shopware_access_key));
    }
    if (m_shopware_api_key_isSet) {
        obj.insert(QString("shopware_api_key"), ::OpenAPI::toJsonValue(m_shopware_api_key));
    }
    if (m_shopware_api_secret_isSet) {
        obj.insert(QString("shopware_api_secret"), ::OpenAPI::toJsonValue(m_shopware_api_secret));
    }
    if (m_miva_access_token_isSet) {
        obj.insert(QString("miva_access_token"), ::OpenAPI::toJsonValue(m_miva_access_token));
    }
    if (m_miva_signature_isSet) {
        obj.insert(QString("miva_signature"), ::OpenAPI::toJsonValue(m_miva_signature));
    }
    if (m_tiendanube_user_id_isSet) {
        obj.insert(QString("tiendanube_user_id"), ::OpenAPI::toJsonValue(m_tiendanube_user_id));
    }
    if (m_tiendanube_access_token_isSet) {
        obj.insert(QString("tiendanube_access_token"), ::OpenAPI::toJsonValue(m_tiendanube_access_token));
    }
    if (m_tiendanube_client_secret_isSet) {
        obj.insert(QString("tiendanube_client_secret"), ::OpenAPI::toJsonValue(m_tiendanube_client_secret));
    }
    if (m_volusion_login_isSet) {
        obj.insert(QString("volusion_login"), ::OpenAPI::toJsonValue(m_volusion_login));
    }
    if (m_volusion_password_isSet) {
        obj.insert(QString("volusion_password"), ::OpenAPI::toJsonValue(m_volusion_password));
    }
    if (m_hybris_client_id_isSet) {
        obj.insert(QString("hybris_client_id"), ::OpenAPI::toJsonValue(m_hybris_client_id));
    }
    if (m_hybris_client_secret_isSet) {
        obj.insert(QString("hybris_client_secret"), ::OpenAPI::toJsonValue(m_hybris_client_secret));
    }
    if (m_hybris_username_isSet) {
        obj.insert(QString("hybris_username"), ::OpenAPI::toJsonValue(m_hybris_username));
    }
    if (m_hybris_password_isSet) {
        obj.insert(QString("hybris_password"), ::OpenAPI::toJsonValue(m_hybris_password));
    }
    if (m_hybris_websites.size() > 0) {
        obj.insert(QString("hybris_websites"), ::OpenAPI::toJsonValue(m_hybris_websites));
    }
    if (m_square_client_id_isSet) {
        obj.insert(QString("square_client_id"), ::OpenAPI::toJsonValue(m_square_client_id));
    }
    if (m_square_client_secret_isSet) {
        obj.insert(QString("square_client_secret"), ::OpenAPI::toJsonValue(m_square_client_secret));
    }
    if (m_square_refresh_token_isSet) {
        obj.insert(QString("square_refresh_token"), ::OpenAPI::toJsonValue(m_square_refresh_token));
    }
    if (m_squarespace_api_key_isSet) {
        obj.insert(QString("squarespace_api_key"), ::OpenAPI::toJsonValue(m_squarespace_api_key));
    }
    if (m_squarespace_client_id_isSet) {
        obj.insert(QString("squarespace_client_id"), ::OpenAPI::toJsonValue(m_squarespace_client_id));
    }
    if (m_squarespace_client_secret_isSet) {
        obj.insert(QString("squarespace_client_secret"), ::OpenAPI::toJsonValue(m_squarespace_client_secret));
    }
    if (m_squarespace_access_token_isSet) {
        obj.insert(QString("squarespace_access_token"), ::OpenAPI::toJsonValue(m_squarespace_access_token));
    }
    if (m_squarespace_refresh_token_isSet) {
        obj.insert(QString("squarespace_refresh_token"), ::OpenAPI::toJsonValue(m_squarespace_refresh_token));
    }
    if (m_commercehq_api_key_isSet) {
        obj.insert(QString("commercehq_api_key"), ::OpenAPI::toJsonValue(m_commercehq_api_key));
    }
    if (m_commercehq_api_password_isSet) {
        obj.insert(QString("commercehq_api_password"), ::OpenAPI::toJsonValue(m_commercehq_api_password));
    }
    if (m_wc_consumer_key_isSet) {
        obj.insert(QString("wc_consumer_key"), ::OpenAPI::toJsonValue(m_wc_consumer_key));
    }
    if (m_wc_consumer_secret_isSet) {
        obj.insert(QString("wc_consumer_secret"), ::OpenAPI::toJsonValue(m_wc_consumer_secret));
    }
    if (m_magento_consumer_key_isSet) {
        obj.insert(QString("magento_consumer_key"), ::OpenAPI::toJsonValue(m_magento_consumer_key));
    }
    if (m_magento_consumer_secret_isSet) {
        obj.insert(QString("magento_consumer_secret"), ::OpenAPI::toJsonValue(m_magento_consumer_secret));
    }
    if (m_magento_access_token_isSet) {
        obj.insert(QString("magento_access_token"), ::OpenAPI::toJsonValue(m_magento_access_token));
    }
    if (m_magento_token_secret_isSet) {
        obj.insert(QString("magento_token_secret"), ::OpenAPI::toJsonValue(m_magento_token_secret));
    }
    if (m_prestashop_webservice_key_isSet) {
        obj.insert(QString("prestashop_webservice_key"), ::OpenAPI::toJsonValue(m_prestashop_webservice_key));
    }
    if (m_wix_app_id_isSet) {
        obj.insert(QString("wix_app_id"), ::OpenAPI::toJsonValue(m_wix_app_id));
    }
    if (m_wix_app_secret_key_isSet) {
        obj.insert(QString("wix_app_secret_key"), ::OpenAPI::toJsonValue(m_wix_app_secret_key));
    }
    if (m_wix_instance_id_isSet) {
        obj.insert(QString("wix_instance_id"), ::OpenAPI::toJsonValue(m_wix_instance_id));
    }
    if (m_wix_refresh_token_isSet) {
        obj.insert(QString("wix_refresh_token"), ::OpenAPI::toJsonValue(m_wix_refresh_token));
    }
    if (m_mercado_libre_app_id_isSet) {
        obj.insert(QString("mercado_libre_app_id"), ::OpenAPI::toJsonValue(m_mercado_libre_app_id));
    }
    if (m_mercado_libre_app_secret_key_isSet) {
        obj.insert(QString("mercado_libre_app_secret_key"), ::OpenAPI::toJsonValue(m_mercado_libre_app_secret_key));
    }
    if (m_mercado_libre_refresh_token_isSet) {
        obj.insert(QString("mercado_libre_refresh_token"), ::OpenAPI::toJsonValue(m_mercado_libre_refresh_token));
    }
    if (m_zid_client_id_isSet) {
        obj.insert(QString("zid_client_id"), ::OpenAPI::toJsonValue(m_zid_client_id));
    }
    if (m_zid_client_secret_isSet) {
        obj.insert(QString("zid_client_secret"), ::OpenAPI::toJsonValue(m_zid_client_secret));
    }
    if (m_zid_access_token_isSet) {
        obj.insert(QString("zid_access_token"), ::OpenAPI::toJsonValue(m_zid_access_token));
    }
    if (m_zid_authorization_isSet) {
        obj.insert(QString("zid_authorization"), ::OpenAPI::toJsonValue(m_zid_authorization));
    }
    if (m_zid_refresh_token_isSet) {
        obj.insert(QString("zid_refresh_token"), ::OpenAPI::toJsonValue(m_zid_refresh_token));
    }
    if (m_flipkart_client_id_isSet) {
        obj.insert(QString("flipkart_client_id"), ::OpenAPI::toJsonValue(m_flipkart_client_id));
    }
    if (m_flipkart_client_secret_isSet) {
        obj.insert(QString("flipkart_client_secret"), ::OpenAPI::toJsonValue(m_flipkart_client_secret));
    }
    if (m_allegro_client_id_isSet) {
        obj.insert(QString("allegro_client_id"), ::OpenAPI::toJsonValue(m_allegro_client_id));
    }
    if (m_allegro_client_secret_isSet) {
        obj.insert(QString("allegro_client_secret"), ::OpenAPI::toJsonValue(m_allegro_client_secret));
    }
    if (m_allegro_access_token_isSet) {
        obj.insert(QString("allegro_access_token"), ::OpenAPI::toJsonValue(m_allegro_access_token));
    }
    if (m_allegro_refresh_token_isSet) {
        obj.insert(QString("allegro_refresh_token"), ::OpenAPI::toJsonValue(m_allegro_refresh_token));
    }
    if (m_allegro_environment_isSet) {
        obj.insert(QString("allegro_environment"), ::OpenAPI::toJsonValue(m_allegro_environment));
    }
    if (m_zoho_client_id_isSet) {
        obj.insert(QString("zoho_client_id"), ::OpenAPI::toJsonValue(m_zoho_client_id));
    }
    if (m_zoho_client_secret_isSet) {
        obj.insert(QString("zoho_client_secret"), ::OpenAPI::toJsonValue(m_zoho_client_secret));
    }
    if (m_zoho_refresh_token_isSet) {
        obj.insert(QString("zoho_refresh_token"), ::OpenAPI::toJsonValue(m_zoho_refresh_token));
    }
    if (m_zoho_region_isSet) {
        obj.insert(QString("zoho_region"), ::OpenAPI::toJsonValue(m_zoho_region));
    }
    if (m_otto_client_id_isSet) {
        obj.insert(QString("otto_client_id"), ::OpenAPI::toJsonValue(m_otto_client_id));
    }
    if (m_otto_client_secret_isSet) {
        obj.insert(QString("otto_client_secret"), ::OpenAPI::toJsonValue(m_otto_client_secret));
    }
    if (m_otto_app_id_isSet) {
        obj.insert(QString("otto_app_id"), ::OpenAPI::toJsonValue(m_otto_app_id));
    }
    if (m_otto_refresh_token_isSet) {
        obj.insert(QString("otto_refresh_token"), ::OpenAPI::toJsonValue(m_otto_refresh_token));
    }
    if (m_otto_environment_isSet) {
        obj.insert(QString("otto_environment"), ::OpenAPI::toJsonValue(m_otto_environment));
    }
    if (m_otto_access_token_isSet) {
        obj.insert(QString("otto_access_token"), ::OpenAPI::toJsonValue(m_otto_access_token));
    }
    if (m_tiktokshop_app_key_isSet) {
        obj.insert(QString("tiktokshop_app_key"), ::OpenAPI::toJsonValue(m_tiktokshop_app_key));
    }
    if (m_tiktokshop_app_secret_isSet) {
        obj.insert(QString("tiktokshop_app_secret"), ::OpenAPI::toJsonValue(m_tiktokshop_app_secret));
    }
    if (m_tiktokshop_refresh_token_isSet) {
        obj.insert(QString("tiktokshop_refresh_token"), ::OpenAPI::toJsonValue(m_tiktokshop_refresh_token));
    }
    if (m_tiktokshop_access_token_isSet) {
        obj.insert(QString("tiktokshop_access_token"), ::OpenAPI::toJsonValue(m_tiktokshop_access_token));
    }
    if (m_salla_client_id_isSet) {
        obj.insert(QString("salla_client_id"), ::OpenAPI::toJsonValue(m_salla_client_id));
    }
    if (m_salla_client_secret_isSet) {
        obj.insert(QString("salla_client_secret"), ::OpenAPI::toJsonValue(m_salla_client_secret));
    }
    if (m_salla_refresh_token_isSet) {
        obj.insert(QString("salla_refresh_token"), ::OpenAPI::toJsonValue(m_salla_refresh_token));
    }
    if (m_salla_access_token_isSet) {
        obj.insert(QString("salla_access_token"), ::OpenAPI::toJsonValue(m_salla_access_token));
    }
    return obj;
}

QString OAIAccountCartAdd::getCartId() const {
    return m_cart_id;
}
void OAIAccountCartAdd::setCartId(const QString &cart_id) {
    m_cart_id = cart_id;
    m_cart_id_isSet = true;
}

bool OAIAccountCartAdd::is_cart_id_Set() const{
    return m_cart_id_isSet;
}

bool OAIAccountCartAdd::is_cart_id_Valid() const{
    return m_cart_id_isValid;
}

QString OAIAccountCartAdd::getStoreUrl() const {
    return m_store_url;
}
void OAIAccountCartAdd::setStoreUrl(const QString &store_url) {
    m_store_url = store_url;
    m_store_url_isSet = true;
}

bool OAIAccountCartAdd::is_store_url_Set() const{
    return m_store_url_isSet;
}

bool OAIAccountCartAdd::is_store_url_Valid() const{
    return m_store_url_isValid;
}

QString OAIAccountCartAdd::getBridgeUrl() const {
    return m_bridge_url;
}
void OAIAccountCartAdd::setBridgeUrl(const QString &bridge_url) {
    m_bridge_url = bridge_url;
    m_bridge_url_isSet = true;
}

bool OAIAccountCartAdd::is_bridge_url_Set() const{
    return m_bridge_url_isSet;
}

bool OAIAccountCartAdd::is_bridge_url_Valid() const{
    return m_bridge_url_isValid;
}

QString OAIAccountCartAdd::getStoreRoot() const {
    return m_store_root;
}
void OAIAccountCartAdd::setStoreRoot(const QString &store_root) {
    m_store_root = store_root;
    m_store_root_isSet = true;
}

bool OAIAccountCartAdd::is_store_root_Set() const{
    return m_store_root_isSet;
}

bool OAIAccountCartAdd::is_store_root_Valid() const{
    return m_store_root_isValid;
}

QString OAIAccountCartAdd::getStoreKey() const {
    return m_store_key;
}
void OAIAccountCartAdd::setStoreKey(const QString &store_key) {
    m_store_key = store_key;
    m_store_key_isSet = true;
}

bool OAIAccountCartAdd::is_store_key_Set() const{
    return m_store_key_isSet;
}

bool OAIAccountCartAdd::is_store_key_Valid() const{
    return m_store_key_isValid;
}

bool OAIAccountCartAdd::isValidateVersion() const {
    return m_validate_version;
}
void OAIAccountCartAdd::setValidateVersion(const bool &validate_version) {
    m_validate_version = validate_version;
    m_validate_version_isSet = true;
}

bool OAIAccountCartAdd::is_validate_version_Set() const{
    return m_validate_version_isSet;
}

bool OAIAccountCartAdd::is_validate_version_Valid() const{
    return m_validate_version_isValid;
}

bool OAIAccountCartAdd::isVerify() const {
    return m_verify;
}
void OAIAccountCartAdd::setVerify(const bool &verify) {
    m_verify = verify;
    m_verify_isSet = true;
}

bool OAIAccountCartAdd::is_verify_Set() const{
    return m_verify_isSet;
}

bool OAIAccountCartAdd::is_verify_Valid() const{
    return m_verify_isValid;
}

QString OAIAccountCartAdd::getDbTablesPrefix() const {
    return m_db_tables_prefix;
}
void OAIAccountCartAdd::setDbTablesPrefix(const QString &db_tables_prefix) {
    m_db_tables_prefix = db_tables_prefix;
    m_db_tables_prefix_isSet = true;
}

bool OAIAccountCartAdd::is_db_tables_prefix_Set() const{
    return m_db_tables_prefix_isSet;
}

bool OAIAccountCartAdd::is_db_tables_prefix_Valid() const{
    return m_db_tables_prefix_isValid;
}

QString OAIAccountCartAdd::getUserAgent() const {
    return m_user_agent;
}
void OAIAccountCartAdd::setUserAgent(const QString &user_agent) {
    m_user_agent = user_agent;
    m_user_agent_isSet = true;
}

bool OAIAccountCartAdd::is_user_agent_Set() const{
    return m_user_agent_isSet;
}

bool OAIAccountCartAdd::is_user_agent_Valid() const{
    return m_user_agent_isValid;
}

QString OAIAccountCartAdd::getFtpHost() const {
    return m_ftp_host;
}
void OAIAccountCartAdd::setFtpHost(const QString &ftp_host) {
    m_ftp_host = ftp_host;
    m_ftp_host_isSet = true;
}

bool OAIAccountCartAdd::is_ftp_host_Set() const{
    return m_ftp_host_isSet;
}

bool OAIAccountCartAdd::is_ftp_host_Valid() const{
    return m_ftp_host_isValid;
}

QString OAIAccountCartAdd::getFtpUser() const {
    return m_ftp_user;
}
void OAIAccountCartAdd::setFtpUser(const QString &ftp_user) {
    m_ftp_user = ftp_user;
    m_ftp_user_isSet = true;
}

bool OAIAccountCartAdd::is_ftp_user_Set() const{
    return m_ftp_user_isSet;
}

bool OAIAccountCartAdd::is_ftp_user_Valid() const{
    return m_ftp_user_isValid;
}

QString OAIAccountCartAdd::getFtpPassword() const {
    return m_ftp_password;
}
void OAIAccountCartAdd::setFtpPassword(const QString &ftp_password) {
    m_ftp_password = ftp_password;
    m_ftp_password_isSet = true;
}

bool OAIAccountCartAdd::is_ftp_password_Set() const{
    return m_ftp_password_isSet;
}

bool OAIAccountCartAdd::is_ftp_password_Valid() const{
    return m_ftp_password_isValid;
}

qint32 OAIAccountCartAdd::getFtpPort() const {
    return m_ftp_port;
}
void OAIAccountCartAdd::setFtpPort(const qint32 &ftp_port) {
    m_ftp_port = ftp_port;
    m_ftp_port_isSet = true;
}

bool OAIAccountCartAdd::is_ftp_port_Set() const{
    return m_ftp_port_isSet;
}

bool OAIAccountCartAdd::is_ftp_port_Valid() const{
    return m_ftp_port_isValid;
}

QString OAIAccountCartAdd::getFtpStoreDir() const {
    return m_ftp_store_dir;
}
void OAIAccountCartAdd::setFtpStoreDir(const QString &ftp_store_dir) {
    m_ftp_store_dir = ftp_store_dir;
    m_ftp_store_dir_isSet = true;
}

bool OAIAccountCartAdd::is_ftp_store_dir_Set() const{
    return m_ftp_store_dir_isSet;
}

bool OAIAccountCartAdd::is_ftp_store_dir_Valid() const{
    return m_ftp_store_dir_isValid;
}

QString OAIAccountCartAdd::getR3dcartPrivateKey() const {
    return m_r_3dcart_private_key;
}
void OAIAccountCartAdd::setR3dcartPrivateKey(const QString &r_3dcart_private_key) {
    m_r_3dcart_private_key = r_3dcart_private_key;
    m_r_3dcart_private_key_isSet = true;
}

bool OAIAccountCartAdd::is_r_3dcart_private_key_Set() const{
    return m_r_3dcart_private_key_isSet;
}

bool OAIAccountCartAdd::is_r_3dcart_private_key_Valid() const{
    return m_r_3dcart_private_key_isValid;
}

QString OAIAccountCartAdd::getR3dcartAccessToken() const {
    return m_r_3dcart_access_token;
}
void OAIAccountCartAdd::setR3dcartAccessToken(const QString &r_3dcart_access_token) {
    m_r_3dcart_access_token = r_3dcart_access_token;
    m_r_3dcart_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_r_3dcart_access_token_Set() const{
    return m_r_3dcart_access_token_isSet;
}

bool OAIAccountCartAdd::is_r_3dcart_access_token_Valid() const{
    return m_r_3dcart_access_token_isValid;
}

QString OAIAccountCartAdd::getR3dcartapiApiKey() const {
    return m_r_3dcartapi_api_key;
}
void OAIAccountCartAdd::setR3dcartapiApiKey(const QString &r_3dcartapi_api_key) {
    m_r_3dcartapi_api_key = r_3dcartapi_api_key;
    m_r_3dcartapi_api_key_isSet = true;
}

bool OAIAccountCartAdd::is_r_3dcartapi_api_key_Set() const{
    return m_r_3dcartapi_api_key_isSet;
}

bool OAIAccountCartAdd::is_r_3dcartapi_api_key_Valid() const{
    return m_r_3dcartapi_api_key_isValid;
}

QString OAIAccountCartAdd::getAmazonSpClientId() const {
    return m_amazon_sp_client_id;
}
void OAIAccountCartAdd::setAmazonSpClientId(const QString &amazon_sp_client_id) {
    m_amazon_sp_client_id = amazon_sp_client_id;
    m_amazon_sp_client_id_isSet = true;
}

bool OAIAccountCartAdd::is_amazon_sp_client_id_Set() const{
    return m_amazon_sp_client_id_isSet;
}

bool OAIAccountCartAdd::is_amazon_sp_client_id_Valid() const{
    return m_amazon_sp_client_id_isValid;
}

QString OAIAccountCartAdd::getAmazonSpClientSecret() const {
    return m_amazon_sp_client_secret;
}
void OAIAccountCartAdd::setAmazonSpClientSecret(const QString &amazon_sp_client_secret) {
    m_amazon_sp_client_secret = amazon_sp_client_secret;
    m_amazon_sp_client_secret_isSet = true;
}

bool OAIAccountCartAdd::is_amazon_sp_client_secret_Set() const{
    return m_amazon_sp_client_secret_isSet;
}

bool OAIAccountCartAdd::is_amazon_sp_client_secret_Valid() const{
    return m_amazon_sp_client_secret_isValid;
}

QString OAIAccountCartAdd::getAmazonSpRefreshToken() const {
    return m_amazon_sp_refresh_token;
}
void OAIAccountCartAdd::setAmazonSpRefreshToken(const QString &amazon_sp_refresh_token) {
    m_amazon_sp_refresh_token = amazon_sp_refresh_token;
    m_amazon_sp_refresh_token_isSet = true;
}

bool OAIAccountCartAdd::is_amazon_sp_refresh_token_Set() const{
    return m_amazon_sp_refresh_token_isSet;
}

bool OAIAccountCartAdd::is_amazon_sp_refresh_token_Valid() const{
    return m_amazon_sp_refresh_token_isValid;
}

QString OAIAccountCartAdd::getAmazonSpAwsRegion() const {
    return m_amazon_sp_aws_region;
}
void OAIAccountCartAdd::setAmazonSpAwsRegion(const QString &amazon_sp_aws_region) {
    m_amazon_sp_aws_region = amazon_sp_aws_region;
    m_amazon_sp_aws_region_isSet = true;
}

bool OAIAccountCartAdd::is_amazon_sp_aws_region_Set() const{
    return m_amazon_sp_aws_region_isSet;
}

bool OAIAccountCartAdd::is_amazon_sp_aws_region_Valid() const{
    return m_amazon_sp_aws_region_isValid;
}

QString OAIAccountCartAdd::getAmazonSpApiEnvironment() const {
    return m_amazon_sp_api_environment;
}
void OAIAccountCartAdd::setAmazonSpApiEnvironment(const QString &amazon_sp_api_environment) {
    m_amazon_sp_api_environment = amazon_sp_api_environment;
    m_amazon_sp_api_environment_isSet = true;
}

bool OAIAccountCartAdd::is_amazon_sp_api_environment_Set() const{
    return m_amazon_sp_api_environment_isSet;
}

bool OAIAccountCartAdd::is_amazon_sp_api_environment_Valid() const{
    return m_amazon_sp_api_environment_isValid;
}

QString OAIAccountCartAdd::getAmazonSellerId() const {
    return m_amazon_seller_id;
}
void OAIAccountCartAdd::setAmazonSellerId(const QString &amazon_seller_id) {
    m_amazon_seller_id = amazon_seller_id;
    m_amazon_seller_id_isSet = true;
}

bool OAIAccountCartAdd::is_amazon_seller_id_Set() const{
    return m_amazon_seller_id_isSet;
}

bool OAIAccountCartAdd::is_amazon_seller_id_Valid() const{
    return m_amazon_seller_id_isValid;
}

QString OAIAccountCartAdd::getAspdotnetstorefrontApiUser() const {
    return m_aspdotnetstorefront_api_user;
}
void OAIAccountCartAdd::setAspdotnetstorefrontApiUser(const QString &aspdotnetstorefront_api_user) {
    m_aspdotnetstorefront_api_user = aspdotnetstorefront_api_user;
    m_aspdotnetstorefront_api_user_isSet = true;
}

bool OAIAccountCartAdd::is_aspdotnetstorefront_api_user_Set() const{
    return m_aspdotnetstorefront_api_user_isSet;
}

bool OAIAccountCartAdd::is_aspdotnetstorefront_api_user_Valid() const{
    return m_aspdotnetstorefront_api_user_isValid;
}

QString OAIAccountCartAdd::getAspdotnetstorefrontApiPass() const {
    return m_aspdotnetstorefront_api_pass;
}
void OAIAccountCartAdd::setAspdotnetstorefrontApiPass(const QString &aspdotnetstorefront_api_pass) {
    m_aspdotnetstorefront_api_pass = aspdotnetstorefront_api_pass;
    m_aspdotnetstorefront_api_pass_isSet = true;
}

bool OAIAccountCartAdd::is_aspdotnetstorefront_api_pass_Set() const{
    return m_aspdotnetstorefront_api_pass_isSet;
}

bool OAIAccountCartAdd::is_aspdotnetstorefront_api_pass_Valid() const{
    return m_aspdotnetstorefront_api_pass_isValid;
}

QString OAIAccountCartAdd::getBigcommerceapiAdminAccount() const {
    return m_bigcommerceapi_admin_account;
}
void OAIAccountCartAdd::setBigcommerceapiAdminAccount(const QString &bigcommerceapi_admin_account) {
    m_bigcommerceapi_admin_account = bigcommerceapi_admin_account;
    m_bigcommerceapi_admin_account_isSet = true;
}

bool OAIAccountCartAdd::is_bigcommerceapi_admin_account_Set() const{
    return m_bigcommerceapi_admin_account_isSet;
}

bool OAIAccountCartAdd::is_bigcommerceapi_admin_account_Valid() const{
    return m_bigcommerceapi_admin_account_isValid;
}

QString OAIAccountCartAdd::getBigcommerceapiApiPath() const {
    return m_bigcommerceapi_api_path;
}
void OAIAccountCartAdd::setBigcommerceapiApiPath(const QString &bigcommerceapi_api_path) {
    m_bigcommerceapi_api_path = bigcommerceapi_api_path;
    m_bigcommerceapi_api_path_isSet = true;
}

bool OAIAccountCartAdd::is_bigcommerceapi_api_path_Set() const{
    return m_bigcommerceapi_api_path_isSet;
}

bool OAIAccountCartAdd::is_bigcommerceapi_api_path_Valid() const{
    return m_bigcommerceapi_api_path_isValid;
}

QString OAIAccountCartAdd::getBigcommerceapiApiKey() const {
    return m_bigcommerceapi_api_key;
}
void OAIAccountCartAdd::setBigcommerceapiApiKey(const QString &bigcommerceapi_api_key) {
    m_bigcommerceapi_api_key = bigcommerceapi_api_key;
    m_bigcommerceapi_api_key_isSet = true;
}

bool OAIAccountCartAdd::is_bigcommerceapi_api_key_Set() const{
    return m_bigcommerceapi_api_key_isSet;
}

bool OAIAccountCartAdd::is_bigcommerceapi_api_key_Valid() const{
    return m_bigcommerceapi_api_key_isValid;
}

QString OAIAccountCartAdd::getBigcommerceapiClientId() const {
    return m_bigcommerceapi_client_id;
}
void OAIAccountCartAdd::setBigcommerceapiClientId(const QString &bigcommerceapi_client_id) {
    m_bigcommerceapi_client_id = bigcommerceapi_client_id;
    m_bigcommerceapi_client_id_isSet = true;
}

bool OAIAccountCartAdd::is_bigcommerceapi_client_id_Set() const{
    return m_bigcommerceapi_client_id_isSet;
}

bool OAIAccountCartAdd::is_bigcommerceapi_client_id_Valid() const{
    return m_bigcommerceapi_client_id_isValid;
}

QString OAIAccountCartAdd::getBigcommerceapiAccessToken() const {
    return m_bigcommerceapi_access_token;
}
void OAIAccountCartAdd::setBigcommerceapiAccessToken(const QString &bigcommerceapi_access_token) {
    m_bigcommerceapi_access_token = bigcommerceapi_access_token;
    m_bigcommerceapi_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_bigcommerceapi_access_token_Set() const{
    return m_bigcommerceapi_access_token_isSet;
}

bool OAIAccountCartAdd::is_bigcommerceapi_access_token_Valid() const{
    return m_bigcommerceapi_access_token_isValid;
}

QString OAIAccountCartAdd::getBigcommerceapiContext() const {
    return m_bigcommerceapi_context;
}
void OAIAccountCartAdd::setBigcommerceapiContext(const QString &bigcommerceapi_context) {
    m_bigcommerceapi_context = bigcommerceapi_context;
    m_bigcommerceapi_context_isSet = true;
}

bool OAIAccountCartAdd::is_bigcommerceapi_context_Set() const{
    return m_bigcommerceapi_context_isSet;
}

bool OAIAccountCartAdd::is_bigcommerceapi_context_Valid() const{
    return m_bigcommerceapi_context_isValid;
}

QString OAIAccountCartAdd::getBolApiKey() const {
    return m_bol_api_key;
}
void OAIAccountCartAdd::setBolApiKey(const QString &bol_api_key) {
    m_bol_api_key = bol_api_key;
    m_bol_api_key_isSet = true;
}

bool OAIAccountCartAdd::is_bol_api_key_Set() const{
    return m_bol_api_key_isSet;
}

bool OAIAccountCartAdd::is_bol_api_key_Valid() const{
    return m_bol_api_key_isValid;
}

QString OAIAccountCartAdd::getBolApiSecret() const {
    return m_bol_api_secret;
}
void OAIAccountCartAdd::setBolApiSecret(const QString &bol_api_secret) {
    m_bol_api_secret = bol_api_secret;
    m_bol_api_secret_isSet = true;
}

bool OAIAccountCartAdd::is_bol_api_secret_Set() const{
    return m_bol_api_secret_isSet;
}

bool OAIAccountCartAdd::is_bol_api_secret_Valid() const{
    return m_bol_api_secret_isValid;
}

qint32 OAIAccountCartAdd::getBolRetailerId() const {
    return m_bol_retailer_id;
}
void OAIAccountCartAdd::setBolRetailerId(const qint32 &bol_retailer_id) {
    m_bol_retailer_id = bol_retailer_id;
    m_bol_retailer_id_isSet = true;
}

bool OAIAccountCartAdd::is_bol_retailer_id_Set() const{
    return m_bol_retailer_id_isSet;
}

bool OAIAccountCartAdd::is_bol_retailer_id_Valid() const{
    return m_bol_retailer_id_isValid;
}

QString OAIAccountCartAdd::getDemandwareClientId() const {
    return m_demandware_client_id;
}
void OAIAccountCartAdd::setDemandwareClientId(const QString &demandware_client_id) {
    m_demandware_client_id = demandware_client_id;
    m_demandware_client_id_isSet = true;
}

bool OAIAccountCartAdd::is_demandware_client_id_Set() const{
    return m_demandware_client_id_isSet;
}

bool OAIAccountCartAdd::is_demandware_client_id_Valid() const{
    return m_demandware_client_id_isValid;
}

QString OAIAccountCartAdd::getDemandwareApiPassword() const {
    return m_demandware_api_password;
}
void OAIAccountCartAdd::setDemandwareApiPassword(const QString &demandware_api_password) {
    m_demandware_api_password = demandware_api_password;
    m_demandware_api_password_isSet = true;
}

bool OAIAccountCartAdd::is_demandware_api_password_Set() const{
    return m_demandware_api_password_isSet;
}

bool OAIAccountCartAdd::is_demandware_api_password_Valid() const{
    return m_demandware_api_password_isValid;
}

QString OAIAccountCartAdd::getDemandwareUserName() const {
    return m_demandware_user_name;
}
void OAIAccountCartAdd::setDemandwareUserName(const QString &demandware_user_name) {
    m_demandware_user_name = demandware_user_name;
    m_demandware_user_name_isSet = true;
}

bool OAIAccountCartAdd::is_demandware_user_name_Set() const{
    return m_demandware_user_name_isSet;
}

bool OAIAccountCartAdd::is_demandware_user_name_Valid() const{
    return m_demandware_user_name_isValid;
}

QString OAIAccountCartAdd::getDemandwareUserPassword() const {
    return m_demandware_user_password;
}
void OAIAccountCartAdd::setDemandwareUserPassword(const QString &demandware_user_password) {
    m_demandware_user_password = demandware_user_password;
    m_demandware_user_password_isSet = true;
}

bool OAIAccountCartAdd::is_demandware_user_password_Set() const{
    return m_demandware_user_password_isSet;
}

bool OAIAccountCartAdd::is_demandware_user_password_Valid() const{
    return m_demandware_user_password_isValid;
}

QString OAIAccountCartAdd::getEbayClientId() const {
    return m_ebay_client_id;
}
void OAIAccountCartAdd::setEbayClientId(const QString &ebay_client_id) {
    m_ebay_client_id = ebay_client_id;
    m_ebay_client_id_isSet = true;
}

bool OAIAccountCartAdd::is_ebay_client_id_Set() const{
    return m_ebay_client_id_isSet;
}

bool OAIAccountCartAdd::is_ebay_client_id_Valid() const{
    return m_ebay_client_id_isValid;
}

QString OAIAccountCartAdd::getEbayClientSecret() const {
    return m_ebay_client_secret;
}
void OAIAccountCartAdd::setEbayClientSecret(const QString &ebay_client_secret) {
    m_ebay_client_secret = ebay_client_secret;
    m_ebay_client_secret_isSet = true;
}

bool OAIAccountCartAdd::is_ebay_client_secret_Set() const{
    return m_ebay_client_secret_isSet;
}

bool OAIAccountCartAdd::is_ebay_client_secret_Valid() const{
    return m_ebay_client_secret_isValid;
}

QString OAIAccountCartAdd::getEbayRuname() const {
    return m_ebay_runame;
}
void OAIAccountCartAdd::setEbayRuname(const QString &ebay_runame) {
    m_ebay_runame = ebay_runame;
    m_ebay_runame_isSet = true;
}

bool OAIAccountCartAdd::is_ebay_runame_Set() const{
    return m_ebay_runame_isSet;
}

bool OAIAccountCartAdd::is_ebay_runame_Valid() const{
    return m_ebay_runame_isValid;
}

QString OAIAccountCartAdd::getEbayAccessToken() const {
    return m_ebay_access_token;
}
void OAIAccountCartAdd::setEbayAccessToken(const QString &ebay_access_token) {
    m_ebay_access_token = ebay_access_token;
    m_ebay_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_ebay_access_token_Set() const{
    return m_ebay_access_token_isSet;
}

bool OAIAccountCartAdd::is_ebay_access_token_Valid() const{
    return m_ebay_access_token_isValid;
}

QString OAIAccountCartAdd::getEbayRefreshToken() const {
    return m_ebay_refresh_token;
}
void OAIAccountCartAdd::setEbayRefreshToken(const QString &ebay_refresh_token) {
    m_ebay_refresh_token = ebay_refresh_token;
    m_ebay_refresh_token_isSet = true;
}

bool OAIAccountCartAdd::is_ebay_refresh_token_Set() const{
    return m_ebay_refresh_token_isSet;
}

bool OAIAccountCartAdd::is_ebay_refresh_token_Valid() const{
    return m_ebay_refresh_token_isValid;
}

QString OAIAccountCartAdd::getEbayEnvironment() const {
    return m_ebay_environment;
}
void OAIAccountCartAdd::setEbayEnvironment(const QString &ebay_environment) {
    m_ebay_environment = ebay_environment;
    m_ebay_environment_isSet = true;
}

bool OAIAccountCartAdd::is_ebay_environment_Set() const{
    return m_ebay_environment_isSet;
}

bool OAIAccountCartAdd::is_ebay_environment_Valid() const{
    return m_ebay_environment_isValid;
}

qint32 OAIAccountCartAdd::getEbaySiteId() const {
    return m_ebay_site_id;
}
void OAIAccountCartAdd::setEbaySiteId(const qint32 &ebay_site_id) {
    m_ebay_site_id = ebay_site_id;
    m_ebay_site_id_isSet = true;
}

bool OAIAccountCartAdd::is_ebay_site_id_Set() const{
    return m_ebay_site_id_isSet;
}

bool OAIAccountCartAdd::is_ebay_site_id_Valid() const{
    return m_ebay_site_id_isValid;
}

QString OAIAccountCartAdd::getWalmartClientId() const {
    return m_walmart_client_id;
}
void OAIAccountCartAdd::setWalmartClientId(const QString &walmart_client_id) {
    m_walmart_client_id = walmart_client_id;
    m_walmart_client_id_isSet = true;
}

bool OAIAccountCartAdd::is_walmart_client_id_Set() const{
    return m_walmart_client_id_isSet;
}

bool OAIAccountCartAdd::is_walmart_client_id_Valid() const{
    return m_walmart_client_id_isValid;
}

QString OAIAccountCartAdd::getWalmartClientSecret() const {
    return m_walmart_client_secret;
}
void OAIAccountCartAdd::setWalmartClientSecret(const QString &walmart_client_secret) {
    m_walmart_client_secret = walmart_client_secret;
    m_walmart_client_secret_isSet = true;
}

bool OAIAccountCartAdd::is_walmart_client_secret_Set() const{
    return m_walmart_client_secret_isSet;
}

bool OAIAccountCartAdd::is_walmart_client_secret_Valid() const{
    return m_walmart_client_secret_isValid;
}

QString OAIAccountCartAdd::getWalmartEnvironment() const {
    return m_walmart_environment;
}
void OAIAccountCartAdd::setWalmartEnvironment(const QString &walmart_environment) {
    m_walmart_environment = walmart_environment;
    m_walmart_environment_isSet = true;
}

bool OAIAccountCartAdd::is_walmart_environment_Set() const{
    return m_walmart_environment_isSet;
}

bool OAIAccountCartAdd::is_walmart_environment_Valid() const{
    return m_walmart_environment_isValid;
}

QString OAIAccountCartAdd::getWalmartChannelType() const {
    return m_walmart_channel_type;
}
void OAIAccountCartAdd::setWalmartChannelType(const QString &walmart_channel_type) {
    m_walmart_channel_type = walmart_channel_type;
    m_walmart_channel_type_isSet = true;
}

bool OAIAccountCartAdd::is_walmart_channel_type_Set() const{
    return m_walmart_channel_type_isSet;
}

bool OAIAccountCartAdd::is_walmart_channel_type_Valid() const{
    return m_walmart_channel_type_isValid;
}

QString OAIAccountCartAdd::getWalmartRegion() const {
    return m_walmart_region;
}
void OAIAccountCartAdd::setWalmartRegion(const QString &walmart_region) {
    m_walmart_region = walmart_region;
    m_walmart_region_isSet = true;
}

bool OAIAccountCartAdd::is_walmart_region_Set() const{
    return m_walmart_region_isSet;
}

bool OAIAccountCartAdd::is_walmart_region_Valid() const{
    return m_walmart_region_isValid;
}

QString OAIAccountCartAdd::getEcwidAcessToken() const {
    return m_ecwid_acess_token;
}
void OAIAccountCartAdd::setEcwidAcessToken(const QString &ecwid_acess_token) {
    m_ecwid_acess_token = ecwid_acess_token;
    m_ecwid_acess_token_isSet = true;
}

bool OAIAccountCartAdd::is_ecwid_acess_token_Set() const{
    return m_ecwid_acess_token_isSet;
}

bool OAIAccountCartAdd::is_ecwid_acess_token_Valid() const{
    return m_ecwid_acess_token_isValid;
}

QString OAIAccountCartAdd::getEcwidStoreId() const {
    return m_ecwid_store_id;
}
void OAIAccountCartAdd::setEcwidStoreId(const QString &ecwid_store_id) {
    m_ecwid_store_id = ecwid_store_id;
    m_ecwid_store_id_isSet = true;
}

bool OAIAccountCartAdd::is_ecwid_store_id_Set() const{
    return m_ecwid_store_id_isSet;
}

bool OAIAccountCartAdd::is_ecwid_store_id_Valid() const{
    return m_ecwid_store_id_isValid;
}

QString OAIAccountCartAdd::getLazadaAppId() const {
    return m_lazada_app_id;
}
void OAIAccountCartAdd::setLazadaAppId(const QString &lazada_app_id) {
    m_lazada_app_id = lazada_app_id;
    m_lazada_app_id_isSet = true;
}

bool OAIAccountCartAdd::is_lazada_app_id_Set() const{
    return m_lazada_app_id_isSet;
}

bool OAIAccountCartAdd::is_lazada_app_id_Valid() const{
    return m_lazada_app_id_isValid;
}

QString OAIAccountCartAdd::getLazadaAppSecret() const {
    return m_lazada_app_secret;
}
void OAIAccountCartAdd::setLazadaAppSecret(const QString &lazada_app_secret) {
    m_lazada_app_secret = lazada_app_secret;
    m_lazada_app_secret_isSet = true;
}

bool OAIAccountCartAdd::is_lazada_app_secret_Set() const{
    return m_lazada_app_secret_isSet;
}

bool OAIAccountCartAdd::is_lazada_app_secret_Valid() const{
    return m_lazada_app_secret_isValid;
}

QString OAIAccountCartAdd::getLazadaRefreshToken() const {
    return m_lazada_refresh_token;
}
void OAIAccountCartAdd::setLazadaRefreshToken(const QString &lazada_refresh_token) {
    m_lazada_refresh_token = lazada_refresh_token;
    m_lazada_refresh_token_isSet = true;
}

bool OAIAccountCartAdd::is_lazada_refresh_token_Set() const{
    return m_lazada_refresh_token_isSet;
}

bool OAIAccountCartAdd::is_lazada_refresh_token_Valid() const{
    return m_lazada_refresh_token_isValid;
}

QString OAIAccountCartAdd::getLazadaRegion() const {
    return m_lazada_region;
}
void OAIAccountCartAdd::setLazadaRegion(const QString &lazada_region) {
    m_lazada_region = lazada_region;
    m_lazada_region_isSet = true;
}

bool OAIAccountCartAdd::is_lazada_region_Set() const{
    return m_lazada_region_isSet;
}

bool OAIAccountCartAdd::is_lazada_region_Valid() const{
    return m_lazada_region_isValid;
}

QString OAIAccountCartAdd::getLightspeedApiKey() const {
    return m_lightspeed_api_key;
}
void OAIAccountCartAdd::setLightspeedApiKey(const QString &lightspeed_api_key) {
    m_lightspeed_api_key = lightspeed_api_key;
    m_lightspeed_api_key_isSet = true;
}

bool OAIAccountCartAdd::is_lightspeed_api_key_Set() const{
    return m_lightspeed_api_key_isSet;
}

bool OAIAccountCartAdd::is_lightspeed_api_key_Valid() const{
    return m_lightspeed_api_key_isValid;
}

QString OAIAccountCartAdd::getLightspeedApiSecret() const {
    return m_lightspeed_api_secret;
}
void OAIAccountCartAdd::setLightspeedApiSecret(const QString &lightspeed_api_secret) {
    m_lightspeed_api_secret = lightspeed_api_secret;
    m_lightspeed_api_secret_isSet = true;
}

bool OAIAccountCartAdd::is_lightspeed_api_secret_Set() const{
    return m_lightspeed_api_secret_isSet;
}

bool OAIAccountCartAdd::is_lightspeed_api_secret_Valid() const{
    return m_lightspeed_api_secret_isValid;
}

QString OAIAccountCartAdd::getEtsyKeystring() const {
    return m_etsy_keystring;
}
void OAIAccountCartAdd::setEtsyKeystring(const QString &etsy_keystring) {
    m_etsy_keystring = etsy_keystring;
    m_etsy_keystring_isSet = true;
}

bool OAIAccountCartAdd::is_etsy_keystring_Set() const{
    return m_etsy_keystring_isSet;
}

bool OAIAccountCartAdd::is_etsy_keystring_Valid() const{
    return m_etsy_keystring_isValid;
}

QString OAIAccountCartAdd::getEtsySharedSecret() const {
    return m_etsy_shared_secret;
}
void OAIAccountCartAdd::setEtsySharedSecret(const QString &etsy_shared_secret) {
    m_etsy_shared_secret = etsy_shared_secret;
    m_etsy_shared_secret_isSet = true;
}

bool OAIAccountCartAdd::is_etsy_shared_secret_Set() const{
    return m_etsy_shared_secret_isSet;
}

bool OAIAccountCartAdd::is_etsy_shared_secret_Valid() const{
    return m_etsy_shared_secret_isValid;
}

QString OAIAccountCartAdd::getEtsyAccessToken() const {
    return m_etsy_access_token;
}
void OAIAccountCartAdd::setEtsyAccessToken(const QString &etsy_access_token) {
    m_etsy_access_token = etsy_access_token;
    m_etsy_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_etsy_access_token_Set() const{
    return m_etsy_access_token_isSet;
}

bool OAIAccountCartAdd::is_etsy_access_token_Valid() const{
    return m_etsy_access_token_isValid;
}

QString OAIAccountCartAdd::getEtsyTokenSecret() const {
    return m_etsy_token_secret;
}
void OAIAccountCartAdd::setEtsyTokenSecret(const QString &etsy_token_secret) {
    m_etsy_token_secret = etsy_token_secret;
    m_etsy_token_secret_isSet = true;
}

bool OAIAccountCartAdd::is_etsy_token_secret_Set() const{
    return m_etsy_token_secret_isSet;
}

bool OAIAccountCartAdd::is_etsy_token_secret_Valid() const{
    return m_etsy_token_secret_isValid;
}

QString OAIAccountCartAdd::getEtsyClientId() const {
    return m_etsy_client_id;
}
void OAIAccountCartAdd::setEtsyClientId(const QString &etsy_client_id) {
    m_etsy_client_id = etsy_client_id;
    m_etsy_client_id_isSet = true;
}

bool OAIAccountCartAdd::is_etsy_client_id_Set() const{
    return m_etsy_client_id_isSet;
}

bool OAIAccountCartAdd::is_etsy_client_id_Valid() const{
    return m_etsy_client_id_isValid;
}

QString OAIAccountCartAdd::getEtsyRefreshToken() const {
    return m_etsy_refresh_token;
}
void OAIAccountCartAdd::setEtsyRefreshToken(const QString &etsy_refresh_token) {
    m_etsy_refresh_token = etsy_refresh_token;
    m_etsy_refresh_token_isSet = true;
}

bool OAIAccountCartAdd::is_etsy_refresh_token_Set() const{
    return m_etsy_refresh_token_isSet;
}

bool OAIAccountCartAdd::is_etsy_refresh_token_Valid() const{
    return m_etsy_refresh_token_isValid;
}

QString OAIAccountCartAdd::getFacebookAppId() const {
    return m_facebook_app_id;
}
void OAIAccountCartAdd::setFacebookAppId(const QString &facebook_app_id) {
    m_facebook_app_id = facebook_app_id;
    m_facebook_app_id_isSet = true;
}

bool OAIAccountCartAdd::is_facebook_app_id_Set() const{
    return m_facebook_app_id_isSet;
}

bool OAIAccountCartAdd::is_facebook_app_id_Valid() const{
    return m_facebook_app_id_isValid;
}

QString OAIAccountCartAdd::getFacebookAppSecret() const {
    return m_facebook_app_secret;
}
void OAIAccountCartAdd::setFacebookAppSecret(const QString &facebook_app_secret) {
    m_facebook_app_secret = facebook_app_secret;
    m_facebook_app_secret_isSet = true;
}

bool OAIAccountCartAdd::is_facebook_app_secret_Set() const{
    return m_facebook_app_secret_isSet;
}

bool OAIAccountCartAdd::is_facebook_app_secret_Valid() const{
    return m_facebook_app_secret_isValid;
}

QString OAIAccountCartAdd::getFacebookAccessToken() const {
    return m_facebook_access_token;
}
void OAIAccountCartAdd::setFacebookAccessToken(const QString &facebook_access_token) {
    m_facebook_access_token = facebook_access_token;
    m_facebook_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_facebook_access_token_Set() const{
    return m_facebook_access_token_isSet;
}

bool OAIAccountCartAdd::is_facebook_access_token_Valid() const{
    return m_facebook_access_token_isValid;
}

QString OAIAccountCartAdd::getFacebookBusinessId() const {
    return m_facebook_business_id;
}
void OAIAccountCartAdd::setFacebookBusinessId(const QString &facebook_business_id) {
    m_facebook_business_id = facebook_business_id;
    m_facebook_business_id_isSet = true;
}

bool OAIAccountCartAdd::is_facebook_business_id_Set() const{
    return m_facebook_business_id_isSet;
}

bool OAIAccountCartAdd::is_facebook_business_id_Valid() const{
    return m_facebook_business_id_isValid;
}

QString OAIAccountCartAdd::getNetoApiKey() const {
    return m_neto_api_key;
}
void OAIAccountCartAdd::setNetoApiKey(const QString &neto_api_key) {
    m_neto_api_key = neto_api_key;
    m_neto_api_key_isSet = true;
}

bool OAIAccountCartAdd::is_neto_api_key_Set() const{
    return m_neto_api_key_isSet;
}

bool OAIAccountCartAdd::is_neto_api_key_Valid() const{
    return m_neto_api_key_isValid;
}

QString OAIAccountCartAdd::getNetoApiUsername() const {
    return m_neto_api_username;
}
void OAIAccountCartAdd::setNetoApiUsername(const QString &neto_api_username) {
    m_neto_api_username = neto_api_username;
    m_neto_api_username_isSet = true;
}

bool OAIAccountCartAdd::is_neto_api_username_Set() const{
    return m_neto_api_username_isSet;
}

bool OAIAccountCartAdd::is_neto_api_username_Valid() const{
    return m_neto_api_username_isValid;
}

QString OAIAccountCartAdd::getShoplineAccessToken() const {
    return m_shopline_access_token;
}
void OAIAccountCartAdd::setShoplineAccessToken(const QString &shopline_access_token) {
    m_shopline_access_token = shopline_access_token;
    m_shopline_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_shopline_access_token_Set() const{
    return m_shopline_access_token_isSet;
}

bool OAIAccountCartAdd::is_shopline_access_token_Valid() const{
    return m_shopline_access_token_isValid;
}

QString OAIAccountCartAdd::getShoplineAppKey() const {
    return m_shopline_app_key;
}
void OAIAccountCartAdd::setShoplineAppKey(const QString &shopline_app_key) {
    m_shopline_app_key = shopline_app_key;
    m_shopline_app_key_isSet = true;
}

bool OAIAccountCartAdd::is_shopline_app_key_Set() const{
    return m_shopline_app_key_isSet;
}

bool OAIAccountCartAdd::is_shopline_app_key_Valid() const{
    return m_shopline_app_key_isValid;
}

QString OAIAccountCartAdd::getShoplineAppSecret() const {
    return m_shopline_app_secret;
}
void OAIAccountCartAdd::setShoplineAppSecret(const QString &shopline_app_secret) {
    m_shopline_app_secret = shopline_app_secret;
    m_shopline_app_secret_isSet = true;
}

bool OAIAccountCartAdd::is_shopline_app_secret_Set() const{
    return m_shopline_app_secret_isSet;
}

bool OAIAccountCartAdd::is_shopline_app_secret_Valid() const{
    return m_shopline_app_secret_isValid;
}

QString OAIAccountCartAdd::getShopifyAccessToken() const {
    return m_shopify_access_token;
}
void OAIAccountCartAdd::setShopifyAccessToken(const QString &shopify_access_token) {
    m_shopify_access_token = shopify_access_token;
    m_shopify_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_shopify_access_token_Set() const{
    return m_shopify_access_token_isSet;
}

bool OAIAccountCartAdd::is_shopify_access_token_Valid() const{
    return m_shopify_access_token_isValid;
}

QString OAIAccountCartAdd::getShopifyApiKey() const {
    return m_shopify_api_key;
}
void OAIAccountCartAdd::setShopifyApiKey(const QString &shopify_api_key) {
    m_shopify_api_key = shopify_api_key;
    m_shopify_api_key_isSet = true;
}

bool OAIAccountCartAdd::is_shopify_api_key_Set() const{
    return m_shopify_api_key_isSet;
}

bool OAIAccountCartAdd::is_shopify_api_key_Valid() const{
    return m_shopify_api_key_isValid;
}

QString OAIAccountCartAdd::getShopifyApiPassword() const {
    return m_shopify_api_password;
}
void OAIAccountCartAdd::setShopifyApiPassword(const QString &shopify_api_password) {
    m_shopify_api_password = shopify_api_password;
    m_shopify_api_password_isSet = true;
}

bool OAIAccountCartAdd::is_shopify_api_password_Set() const{
    return m_shopify_api_password_isSet;
}

bool OAIAccountCartAdd::is_shopify_api_password_Valid() const{
    return m_shopify_api_password_isValid;
}

QString OAIAccountCartAdd::getShopifySharedSecret() const {
    return m_shopify_shared_secret;
}
void OAIAccountCartAdd::setShopifySharedSecret(const QString &shopify_shared_secret) {
    m_shopify_shared_secret = shopify_shared_secret;
    m_shopify_shared_secret_isSet = true;
}

bool OAIAccountCartAdd::is_shopify_shared_secret_Set() const{
    return m_shopify_shared_secret_isSet;
}

bool OAIAccountCartAdd::is_shopify_shared_secret_Valid() const{
    return m_shopify_shared_secret_isValid;
}

QString OAIAccountCartAdd::getShoplazzaAccessToken() const {
    return m_shoplazza_access_token;
}
void OAIAccountCartAdd::setShoplazzaAccessToken(const QString &shoplazza_access_token) {
    m_shoplazza_access_token = shoplazza_access_token;
    m_shoplazza_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_shoplazza_access_token_Set() const{
    return m_shoplazza_access_token_isSet;
}

bool OAIAccountCartAdd::is_shoplazza_access_token_Valid() const{
    return m_shoplazza_access_token_isValid;
}

QString OAIAccountCartAdd::getShoplazzaSharedSecret() const {
    return m_shoplazza_shared_secret;
}
void OAIAccountCartAdd::setShoplazzaSharedSecret(const QString &shoplazza_shared_secret) {
    m_shoplazza_shared_secret = shoplazza_shared_secret;
    m_shoplazza_shared_secret_isSet = true;
}

bool OAIAccountCartAdd::is_shoplazza_shared_secret_Set() const{
    return m_shoplazza_shared_secret_isSet;
}

bool OAIAccountCartAdd::is_shoplazza_shared_secret_Valid() const{
    return m_shoplazza_shared_secret_isValid;
}

QString OAIAccountCartAdd::getShopwareAccessKey() const {
    return m_shopware_access_key;
}
void OAIAccountCartAdd::setShopwareAccessKey(const QString &shopware_access_key) {
    m_shopware_access_key = shopware_access_key;
    m_shopware_access_key_isSet = true;
}

bool OAIAccountCartAdd::is_shopware_access_key_Set() const{
    return m_shopware_access_key_isSet;
}

bool OAIAccountCartAdd::is_shopware_access_key_Valid() const{
    return m_shopware_access_key_isValid;
}

QString OAIAccountCartAdd::getShopwareApiKey() const {
    return m_shopware_api_key;
}
void OAIAccountCartAdd::setShopwareApiKey(const QString &shopware_api_key) {
    m_shopware_api_key = shopware_api_key;
    m_shopware_api_key_isSet = true;
}

bool OAIAccountCartAdd::is_shopware_api_key_Set() const{
    return m_shopware_api_key_isSet;
}

bool OAIAccountCartAdd::is_shopware_api_key_Valid() const{
    return m_shopware_api_key_isValid;
}

QString OAIAccountCartAdd::getShopwareApiSecret() const {
    return m_shopware_api_secret;
}
void OAIAccountCartAdd::setShopwareApiSecret(const QString &shopware_api_secret) {
    m_shopware_api_secret = shopware_api_secret;
    m_shopware_api_secret_isSet = true;
}

bool OAIAccountCartAdd::is_shopware_api_secret_Set() const{
    return m_shopware_api_secret_isSet;
}

bool OAIAccountCartAdd::is_shopware_api_secret_Valid() const{
    return m_shopware_api_secret_isValid;
}

QString OAIAccountCartAdd::getMivaAccessToken() const {
    return m_miva_access_token;
}
void OAIAccountCartAdd::setMivaAccessToken(const QString &miva_access_token) {
    m_miva_access_token = miva_access_token;
    m_miva_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_miva_access_token_Set() const{
    return m_miva_access_token_isSet;
}

bool OAIAccountCartAdd::is_miva_access_token_Valid() const{
    return m_miva_access_token_isValid;
}

QString OAIAccountCartAdd::getMivaSignature() const {
    return m_miva_signature;
}
void OAIAccountCartAdd::setMivaSignature(const QString &miva_signature) {
    m_miva_signature = miva_signature;
    m_miva_signature_isSet = true;
}

bool OAIAccountCartAdd::is_miva_signature_Set() const{
    return m_miva_signature_isSet;
}

bool OAIAccountCartAdd::is_miva_signature_Valid() const{
    return m_miva_signature_isValid;
}

qint32 OAIAccountCartAdd::getTiendanubeUserId() const {
    return m_tiendanube_user_id;
}
void OAIAccountCartAdd::setTiendanubeUserId(const qint32 &tiendanube_user_id) {
    m_tiendanube_user_id = tiendanube_user_id;
    m_tiendanube_user_id_isSet = true;
}

bool OAIAccountCartAdd::is_tiendanube_user_id_Set() const{
    return m_tiendanube_user_id_isSet;
}

bool OAIAccountCartAdd::is_tiendanube_user_id_Valid() const{
    return m_tiendanube_user_id_isValid;
}

QString OAIAccountCartAdd::getTiendanubeAccessToken() const {
    return m_tiendanube_access_token;
}
void OAIAccountCartAdd::setTiendanubeAccessToken(const QString &tiendanube_access_token) {
    m_tiendanube_access_token = tiendanube_access_token;
    m_tiendanube_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_tiendanube_access_token_Set() const{
    return m_tiendanube_access_token_isSet;
}

bool OAIAccountCartAdd::is_tiendanube_access_token_Valid() const{
    return m_tiendanube_access_token_isValid;
}

QString OAIAccountCartAdd::getTiendanubeClientSecret() const {
    return m_tiendanube_client_secret;
}
void OAIAccountCartAdd::setTiendanubeClientSecret(const QString &tiendanube_client_secret) {
    m_tiendanube_client_secret = tiendanube_client_secret;
    m_tiendanube_client_secret_isSet = true;
}

bool OAIAccountCartAdd::is_tiendanube_client_secret_Set() const{
    return m_tiendanube_client_secret_isSet;
}

bool OAIAccountCartAdd::is_tiendanube_client_secret_Valid() const{
    return m_tiendanube_client_secret_isValid;
}

QString OAIAccountCartAdd::getVolusionLogin() const {
    return m_volusion_login;
}
void OAIAccountCartAdd::setVolusionLogin(const QString &volusion_login) {
    m_volusion_login = volusion_login;
    m_volusion_login_isSet = true;
}

bool OAIAccountCartAdd::is_volusion_login_Set() const{
    return m_volusion_login_isSet;
}

bool OAIAccountCartAdd::is_volusion_login_Valid() const{
    return m_volusion_login_isValid;
}

QString OAIAccountCartAdd::getVolusionPassword() const {
    return m_volusion_password;
}
void OAIAccountCartAdd::setVolusionPassword(const QString &volusion_password) {
    m_volusion_password = volusion_password;
    m_volusion_password_isSet = true;
}

bool OAIAccountCartAdd::is_volusion_password_Set() const{
    return m_volusion_password_isSet;
}

bool OAIAccountCartAdd::is_volusion_password_Valid() const{
    return m_volusion_password_isValid;
}

QString OAIAccountCartAdd::getHybrisClientId() const {
    return m_hybris_client_id;
}
void OAIAccountCartAdd::setHybrisClientId(const QString &hybris_client_id) {
    m_hybris_client_id = hybris_client_id;
    m_hybris_client_id_isSet = true;
}

bool OAIAccountCartAdd::is_hybris_client_id_Set() const{
    return m_hybris_client_id_isSet;
}

bool OAIAccountCartAdd::is_hybris_client_id_Valid() const{
    return m_hybris_client_id_isValid;
}

QString OAIAccountCartAdd::getHybrisClientSecret() const {
    return m_hybris_client_secret;
}
void OAIAccountCartAdd::setHybrisClientSecret(const QString &hybris_client_secret) {
    m_hybris_client_secret = hybris_client_secret;
    m_hybris_client_secret_isSet = true;
}

bool OAIAccountCartAdd::is_hybris_client_secret_Set() const{
    return m_hybris_client_secret_isSet;
}

bool OAIAccountCartAdd::is_hybris_client_secret_Valid() const{
    return m_hybris_client_secret_isValid;
}

QString OAIAccountCartAdd::getHybrisUsername() const {
    return m_hybris_username;
}
void OAIAccountCartAdd::setHybrisUsername(const QString &hybris_username) {
    m_hybris_username = hybris_username;
    m_hybris_username_isSet = true;
}

bool OAIAccountCartAdd::is_hybris_username_Set() const{
    return m_hybris_username_isSet;
}

bool OAIAccountCartAdd::is_hybris_username_Valid() const{
    return m_hybris_username_isValid;
}

QString OAIAccountCartAdd::getHybrisPassword() const {
    return m_hybris_password;
}
void OAIAccountCartAdd::setHybrisPassword(const QString &hybris_password) {
    m_hybris_password = hybris_password;
    m_hybris_password_isSet = true;
}

bool OAIAccountCartAdd::is_hybris_password_Set() const{
    return m_hybris_password_isSet;
}

bool OAIAccountCartAdd::is_hybris_password_Valid() const{
    return m_hybris_password_isValid;
}

QList<OAIAccountCartAdd_hybris_websites_inner> OAIAccountCartAdd::getHybrisWebsites() const {
    return m_hybris_websites;
}
void OAIAccountCartAdd::setHybrisWebsites(const QList<OAIAccountCartAdd_hybris_websites_inner> &hybris_websites) {
    m_hybris_websites = hybris_websites;
    m_hybris_websites_isSet = true;
}

bool OAIAccountCartAdd::is_hybris_websites_Set() const{
    return m_hybris_websites_isSet;
}

bool OAIAccountCartAdd::is_hybris_websites_Valid() const{
    return m_hybris_websites_isValid;
}

QString OAIAccountCartAdd::getSquareClientId() const {
    return m_square_client_id;
}
void OAIAccountCartAdd::setSquareClientId(const QString &square_client_id) {
    m_square_client_id = square_client_id;
    m_square_client_id_isSet = true;
}

bool OAIAccountCartAdd::is_square_client_id_Set() const{
    return m_square_client_id_isSet;
}

bool OAIAccountCartAdd::is_square_client_id_Valid() const{
    return m_square_client_id_isValid;
}

QString OAIAccountCartAdd::getSquareClientSecret() const {
    return m_square_client_secret;
}
void OAIAccountCartAdd::setSquareClientSecret(const QString &square_client_secret) {
    m_square_client_secret = square_client_secret;
    m_square_client_secret_isSet = true;
}

bool OAIAccountCartAdd::is_square_client_secret_Set() const{
    return m_square_client_secret_isSet;
}

bool OAIAccountCartAdd::is_square_client_secret_Valid() const{
    return m_square_client_secret_isValid;
}

QString OAIAccountCartAdd::getSquareRefreshToken() const {
    return m_square_refresh_token;
}
void OAIAccountCartAdd::setSquareRefreshToken(const QString &square_refresh_token) {
    m_square_refresh_token = square_refresh_token;
    m_square_refresh_token_isSet = true;
}

bool OAIAccountCartAdd::is_square_refresh_token_Set() const{
    return m_square_refresh_token_isSet;
}

bool OAIAccountCartAdd::is_square_refresh_token_Valid() const{
    return m_square_refresh_token_isValid;
}

QString OAIAccountCartAdd::getSquarespaceApiKey() const {
    return m_squarespace_api_key;
}
void OAIAccountCartAdd::setSquarespaceApiKey(const QString &squarespace_api_key) {
    m_squarespace_api_key = squarespace_api_key;
    m_squarespace_api_key_isSet = true;
}

bool OAIAccountCartAdd::is_squarespace_api_key_Set() const{
    return m_squarespace_api_key_isSet;
}

bool OAIAccountCartAdd::is_squarespace_api_key_Valid() const{
    return m_squarespace_api_key_isValid;
}

QString OAIAccountCartAdd::getSquarespaceClientId() const {
    return m_squarespace_client_id;
}
void OAIAccountCartAdd::setSquarespaceClientId(const QString &squarespace_client_id) {
    m_squarespace_client_id = squarespace_client_id;
    m_squarespace_client_id_isSet = true;
}

bool OAIAccountCartAdd::is_squarespace_client_id_Set() const{
    return m_squarespace_client_id_isSet;
}

bool OAIAccountCartAdd::is_squarespace_client_id_Valid() const{
    return m_squarespace_client_id_isValid;
}

QString OAIAccountCartAdd::getSquarespaceClientSecret() const {
    return m_squarespace_client_secret;
}
void OAIAccountCartAdd::setSquarespaceClientSecret(const QString &squarespace_client_secret) {
    m_squarespace_client_secret = squarespace_client_secret;
    m_squarespace_client_secret_isSet = true;
}

bool OAIAccountCartAdd::is_squarespace_client_secret_Set() const{
    return m_squarespace_client_secret_isSet;
}

bool OAIAccountCartAdd::is_squarespace_client_secret_Valid() const{
    return m_squarespace_client_secret_isValid;
}

QString OAIAccountCartAdd::getSquarespaceAccessToken() const {
    return m_squarespace_access_token;
}
void OAIAccountCartAdd::setSquarespaceAccessToken(const QString &squarespace_access_token) {
    m_squarespace_access_token = squarespace_access_token;
    m_squarespace_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_squarespace_access_token_Set() const{
    return m_squarespace_access_token_isSet;
}

bool OAIAccountCartAdd::is_squarespace_access_token_Valid() const{
    return m_squarespace_access_token_isValid;
}

QString OAIAccountCartAdd::getSquarespaceRefreshToken() const {
    return m_squarespace_refresh_token;
}
void OAIAccountCartAdd::setSquarespaceRefreshToken(const QString &squarespace_refresh_token) {
    m_squarespace_refresh_token = squarespace_refresh_token;
    m_squarespace_refresh_token_isSet = true;
}

bool OAIAccountCartAdd::is_squarespace_refresh_token_Set() const{
    return m_squarespace_refresh_token_isSet;
}

bool OAIAccountCartAdd::is_squarespace_refresh_token_Valid() const{
    return m_squarespace_refresh_token_isValid;
}

QString OAIAccountCartAdd::getCommercehqApiKey() const {
    return m_commercehq_api_key;
}
void OAIAccountCartAdd::setCommercehqApiKey(const QString &commercehq_api_key) {
    m_commercehq_api_key = commercehq_api_key;
    m_commercehq_api_key_isSet = true;
}

bool OAIAccountCartAdd::is_commercehq_api_key_Set() const{
    return m_commercehq_api_key_isSet;
}

bool OAIAccountCartAdd::is_commercehq_api_key_Valid() const{
    return m_commercehq_api_key_isValid;
}

QString OAIAccountCartAdd::getCommercehqApiPassword() const {
    return m_commercehq_api_password;
}
void OAIAccountCartAdd::setCommercehqApiPassword(const QString &commercehq_api_password) {
    m_commercehq_api_password = commercehq_api_password;
    m_commercehq_api_password_isSet = true;
}

bool OAIAccountCartAdd::is_commercehq_api_password_Set() const{
    return m_commercehq_api_password_isSet;
}

bool OAIAccountCartAdd::is_commercehq_api_password_Valid() const{
    return m_commercehq_api_password_isValid;
}

QString OAIAccountCartAdd::getWcConsumerKey() const {
    return m_wc_consumer_key;
}
void OAIAccountCartAdd::setWcConsumerKey(const QString &wc_consumer_key) {
    m_wc_consumer_key = wc_consumer_key;
    m_wc_consumer_key_isSet = true;
}

bool OAIAccountCartAdd::is_wc_consumer_key_Set() const{
    return m_wc_consumer_key_isSet;
}

bool OAIAccountCartAdd::is_wc_consumer_key_Valid() const{
    return m_wc_consumer_key_isValid;
}

QString OAIAccountCartAdd::getWcConsumerSecret() const {
    return m_wc_consumer_secret;
}
void OAIAccountCartAdd::setWcConsumerSecret(const QString &wc_consumer_secret) {
    m_wc_consumer_secret = wc_consumer_secret;
    m_wc_consumer_secret_isSet = true;
}

bool OAIAccountCartAdd::is_wc_consumer_secret_Set() const{
    return m_wc_consumer_secret_isSet;
}

bool OAIAccountCartAdd::is_wc_consumer_secret_Valid() const{
    return m_wc_consumer_secret_isValid;
}

QString OAIAccountCartAdd::getMagentoConsumerKey() const {
    return m_magento_consumer_key;
}
void OAIAccountCartAdd::setMagentoConsumerKey(const QString &magento_consumer_key) {
    m_magento_consumer_key = magento_consumer_key;
    m_magento_consumer_key_isSet = true;
}

bool OAIAccountCartAdd::is_magento_consumer_key_Set() const{
    return m_magento_consumer_key_isSet;
}

bool OAIAccountCartAdd::is_magento_consumer_key_Valid() const{
    return m_magento_consumer_key_isValid;
}

QString OAIAccountCartAdd::getMagentoConsumerSecret() const {
    return m_magento_consumer_secret;
}
void OAIAccountCartAdd::setMagentoConsumerSecret(const QString &magento_consumer_secret) {
    m_magento_consumer_secret = magento_consumer_secret;
    m_magento_consumer_secret_isSet = true;
}

bool OAIAccountCartAdd::is_magento_consumer_secret_Set() const{
    return m_magento_consumer_secret_isSet;
}

bool OAIAccountCartAdd::is_magento_consumer_secret_Valid() const{
    return m_magento_consumer_secret_isValid;
}

QString OAIAccountCartAdd::getMagentoAccessToken() const {
    return m_magento_access_token;
}
void OAIAccountCartAdd::setMagentoAccessToken(const QString &magento_access_token) {
    m_magento_access_token = magento_access_token;
    m_magento_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_magento_access_token_Set() const{
    return m_magento_access_token_isSet;
}

bool OAIAccountCartAdd::is_magento_access_token_Valid() const{
    return m_magento_access_token_isValid;
}

QString OAIAccountCartAdd::getMagentoTokenSecret() const {
    return m_magento_token_secret;
}
void OAIAccountCartAdd::setMagentoTokenSecret(const QString &magento_token_secret) {
    m_magento_token_secret = magento_token_secret;
    m_magento_token_secret_isSet = true;
}

bool OAIAccountCartAdd::is_magento_token_secret_Set() const{
    return m_magento_token_secret_isSet;
}

bool OAIAccountCartAdd::is_magento_token_secret_Valid() const{
    return m_magento_token_secret_isValid;
}

QString OAIAccountCartAdd::getPrestashopWebserviceKey() const {
    return m_prestashop_webservice_key;
}
void OAIAccountCartAdd::setPrestashopWebserviceKey(const QString &prestashop_webservice_key) {
    m_prestashop_webservice_key = prestashop_webservice_key;
    m_prestashop_webservice_key_isSet = true;
}

bool OAIAccountCartAdd::is_prestashop_webservice_key_Set() const{
    return m_prestashop_webservice_key_isSet;
}

bool OAIAccountCartAdd::is_prestashop_webservice_key_Valid() const{
    return m_prestashop_webservice_key_isValid;
}

QString OAIAccountCartAdd::getWixAppId() const {
    return m_wix_app_id;
}
void OAIAccountCartAdd::setWixAppId(const QString &wix_app_id) {
    m_wix_app_id = wix_app_id;
    m_wix_app_id_isSet = true;
}

bool OAIAccountCartAdd::is_wix_app_id_Set() const{
    return m_wix_app_id_isSet;
}

bool OAIAccountCartAdd::is_wix_app_id_Valid() const{
    return m_wix_app_id_isValid;
}

QString OAIAccountCartAdd::getWixAppSecretKey() const {
    return m_wix_app_secret_key;
}
void OAIAccountCartAdd::setWixAppSecretKey(const QString &wix_app_secret_key) {
    m_wix_app_secret_key = wix_app_secret_key;
    m_wix_app_secret_key_isSet = true;
}

bool OAIAccountCartAdd::is_wix_app_secret_key_Set() const{
    return m_wix_app_secret_key_isSet;
}

bool OAIAccountCartAdd::is_wix_app_secret_key_Valid() const{
    return m_wix_app_secret_key_isValid;
}

QString OAIAccountCartAdd::getWixInstanceId() const {
    return m_wix_instance_id;
}
void OAIAccountCartAdd::setWixInstanceId(const QString &wix_instance_id) {
    m_wix_instance_id = wix_instance_id;
    m_wix_instance_id_isSet = true;
}

bool OAIAccountCartAdd::is_wix_instance_id_Set() const{
    return m_wix_instance_id_isSet;
}

bool OAIAccountCartAdd::is_wix_instance_id_Valid() const{
    return m_wix_instance_id_isValid;
}

QString OAIAccountCartAdd::getWixRefreshToken() const {
    return m_wix_refresh_token;
}
void OAIAccountCartAdd::setWixRefreshToken(const QString &wix_refresh_token) {
    m_wix_refresh_token = wix_refresh_token;
    m_wix_refresh_token_isSet = true;
}

bool OAIAccountCartAdd::is_wix_refresh_token_Set() const{
    return m_wix_refresh_token_isSet;
}

bool OAIAccountCartAdd::is_wix_refresh_token_Valid() const{
    return m_wix_refresh_token_isValid;
}

QString OAIAccountCartAdd::getMercadoLibreAppId() const {
    return m_mercado_libre_app_id;
}
void OAIAccountCartAdd::setMercadoLibreAppId(const QString &mercado_libre_app_id) {
    m_mercado_libre_app_id = mercado_libre_app_id;
    m_mercado_libre_app_id_isSet = true;
}

bool OAIAccountCartAdd::is_mercado_libre_app_id_Set() const{
    return m_mercado_libre_app_id_isSet;
}

bool OAIAccountCartAdd::is_mercado_libre_app_id_Valid() const{
    return m_mercado_libre_app_id_isValid;
}

QString OAIAccountCartAdd::getMercadoLibreAppSecretKey() const {
    return m_mercado_libre_app_secret_key;
}
void OAIAccountCartAdd::setMercadoLibreAppSecretKey(const QString &mercado_libre_app_secret_key) {
    m_mercado_libre_app_secret_key = mercado_libre_app_secret_key;
    m_mercado_libre_app_secret_key_isSet = true;
}

bool OAIAccountCartAdd::is_mercado_libre_app_secret_key_Set() const{
    return m_mercado_libre_app_secret_key_isSet;
}

bool OAIAccountCartAdd::is_mercado_libre_app_secret_key_Valid() const{
    return m_mercado_libre_app_secret_key_isValid;
}

QString OAIAccountCartAdd::getMercadoLibreRefreshToken() const {
    return m_mercado_libre_refresh_token;
}
void OAIAccountCartAdd::setMercadoLibreRefreshToken(const QString &mercado_libre_refresh_token) {
    m_mercado_libre_refresh_token = mercado_libre_refresh_token;
    m_mercado_libre_refresh_token_isSet = true;
}

bool OAIAccountCartAdd::is_mercado_libre_refresh_token_Set() const{
    return m_mercado_libre_refresh_token_isSet;
}

bool OAIAccountCartAdd::is_mercado_libre_refresh_token_Valid() const{
    return m_mercado_libre_refresh_token_isValid;
}

qint32 OAIAccountCartAdd::getZidClientId() const {
    return m_zid_client_id;
}
void OAIAccountCartAdd::setZidClientId(const qint32 &zid_client_id) {
    m_zid_client_id = zid_client_id;
    m_zid_client_id_isSet = true;
}

bool OAIAccountCartAdd::is_zid_client_id_Set() const{
    return m_zid_client_id_isSet;
}

bool OAIAccountCartAdd::is_zid_client_id_Valid() const{
    return m_zid_client_id_isValid;
}

QString OAIAccountCartAdd::getZidClientSecret() const {
    return m_zid_client_secret;
}
void OAIAccountCartAdd::setZidClientSecret(const QString &zid_client_secret) {
    m_zid_client_secret = zid_client_secret;
    m_zid_client_secret_isSet = true;
}

bool OAIAccountCartAdd::is_zid_client_secret_Set() const{
    return m_zid_client_secret_isSet;
}

bool OAIAccountCartAdd::is_zid_client_secret_Valid() const{
    return m_zid_client_secret_isValid;
}

QString OAIAccountCartAdd::getZidAccessToken() const {
    return m_zid_access_token;
}
void OAIAccountCartAdd::setZidAccessToken(const QString &zid_access_token) {
    m_zid_access_token = zid_access_token;
    m_zid_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_zid_access_token_Set() const{
    return m_zid_access_token_isSet;
}

bool OAIAccountCartAdd::is_zid_access_token_Valid() const{
    return m_zid_access_token_isValid;
}

QString OAIAccountCartAdd::getZidAuthorization() const {
    return m_zid_authorization;
}
void OAIAccountCartAdd::setZidAuthorization(const QString &zid_authorization) {
    m_zid_authorization = zid_authorization;
    m_zid_authorization_isSet = true;
}

bool OAIAccountCartAdd::is_zid_authorization_Set() const{
    return m_zid_authorization_isSet;
}

bool OAIAccountCartAdd::is_zid_authorization_Valid() const{
    return m_zid_authorization_isValid;
}

QString OAIAccountCartAdd::getZidRefreshToken() const {
    return m_zid_refresh_token;
}
void OAIAccountCartAdd::setZidRefreshToken(const QString &zid_refresh_token) {
    m_zid_refresh_token = zid_refresh_token;
    m_zid_refresh_token_isSet = true;
}

bool OAIAccountCartAdd::is_zid_refresh_token_Set() const{
    return m_zid_refresh_token_isSet;
}

bool OAIAccountCartAdd::is_zid_refresh_token_Valid() const{
    return m_zid_refresh_token_isValid;
}

QString OAIAccountCartAdd::getFlipkartClientId() const {
    return m_flipkart_client_id;
}
void OAIAccountCartAdd::setFlipkartClientId(const QString &flipkart_client_id) {
    m_flipkart_client_id = flipkart_client_id;
    m_flipkart_client_id_isSet = true;
}

bool OAIAccountCartAdd::is_flipkart_client_id_Set() const{
    return m_flipkart_client_id_isSet;
}

bool OAIAccountCartAdd::is_flipkart_client_id_Valid() const{
    return m_flipkart_client_id_isValid;
}

QString OAIAccountCartAdd::getFlipkartClientSecret() const {
    return m_flipkart_client_secret;
}
void OAIAccountCartAdd::setFlipkartClientSecret(const QString &flipkart_client_secret) {
    m_flipkart_client_secret = flipkart_client_secret;
    m_flipkart_client_secret_isSet = true;
}

bool OAIAccountCartAdd::is_flipkart_client_secret_Set() const{
    return m_flipkart_client_secret_isSet;
}

bool OAIAccountCartAdd::is_flipkart_client_secret_Valid() const{
    return m_flipkart_client_secret_isValid;
}

QString OAIAccountCartAdd::getAllegroClientId() const {
    return m_allegro_client_id;
}
void OAIAccountCartAdd::setAllegroClientId(const QString &allegro_client_id) {
    m_allegro_client_id = allegro_client_id;
    m_allegro_client_id_isSet = true;
}

bool OAIAccountCartAdd::is_allegro_client_id_Set() const{
    return m_allegro_client_id_isSet;
}

bool OAIAccountCartAdd::is_allegro_client_id_Valid() const{
    return m_allegro_client_id_isValid;
}

QString OAIAccountCartAdd::getAllegroClientSecret() const {
    return m_allegro_client_secret;
}
void OAIAccountCartAdd::setAllegroClientSecret(const QString &allegro_client_secret) {
    m_allegro_client_secret = allegro_client_secret;
    m_allegro_client_secret_isSet = true;
}

bool OAIAccountCartAdd::is_allegro_client_secret_Set() const{
    return m_allegro_client_secret_isSet;
}

bool OAIAccountCartAdd::is_allegro_client_secret_Valid() const{
    return m_allegro_client_secret_isValid;
}

QString OAIAccountCartAdd::getAllegroAccessToken() const {
    return m_allegro_access_token;
}
void OAIAccountCartAdd::setAllegroAccessToken(const QString &allegro_access_token) {
    m_allegro_access_token = allegro_access_token;
    m_allegro_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_allegro_access_token_Set() const{
    return m_allegro_access_token_isSet;
}

bool OAIAccountCartAdd::is_allegro_access_token_Valid() const{
    return m_allegro_access_token_isValid;
}

QString OAIAccountCartAdd::getAllegroRefreshToken() const {
    return m_allegro_refresh_token;
}
void OAIAccountCartAdd::setAllegroRefreshToken(const QString &allegro_refresh_token) {
    m_allegro_refresh_token = allegro_refresh_token;
    m_allegro_refresh_token_isSet = true;
}

bool OAIAccountCartAdd::is_allegro_refresh_token_Set() const{
    return m_allegro_refresh_token_isSet;
}

bool OAIAccountCartAdd::is_allegro_refresh_token_Valid() const{
    return m_allegro_refresh_token_isValid;
}

QString OAIAccountCartAdd::getAllegroEnvironment() const {
    return m_allegro_environment;
}
void OAIAccountCartAdd::setAllegroEnvironment(const QString &allegro_environment) {
    m_allegro_environment = allegro_environment;
    m_allegro_environment_isSet = true;
}

bool OAIAccountCartAdd::is_allegro_environment_Set() const{
    return m_allegro_environment_isSet;
}

bool OAIAccountCartAdd::is_allegro_environment_Valid() const{
    return m_allegro_environment_isValid;
}

QString OAIAccountCartAdd::getZohoClientId() const {
    return m_zoho_client_id;
}
void OAIAccountCartAdd::setZohoClientId(const QString &zoho_client_id) {
    m_zoho_client_id = zoho_client_id;
    m_zoho_client_id_isSet = true;
}

bool OAIAccountCartAdd::is_zoho_client_id_Set() const{
    return m_zoho_client_id_isSet;
}

bool OAIAccountCartAdd::is_zoho_client_id_Valid() const{
    return m_zoho_client_id_isValid;
}

QString OAIAccountCartAdd::getZohoClientSecret() const {
    return m_zoho_client_secret;
}
void OAIAccountCartAdd::setZohoClientSecret(const QString &zoho_client_secret) {
    m_zoho_client_secret = zoho_client_secret;
    m_zoho_client_secret_isSet = true;
}

bool OAIAccountCartAdd::is_zoho_client_secret_Set() const{
    return m_zoho_client_secret_isSet;
}

bool OAIAccountCartAdd::is_zoho_client_secret_Valid() const{
    return m_zoho_client_secret_isValid;
}

QString OAIAccountCartAdd::getZohoRefreshToken() const {
    return m_zoho_refresh_token;
}
void OAIAccountCartAdd::setZohoRefreshToken(const QString &zoho_refresh_token) {
    m_zoho_refresh_token = zoho_refresh_token;
    m_zoho_refresh_token_isSet = true;
}

bool OAIAccountCartAdd::is_zoho_refresh_token_Set() const{
    return m_zoho_refresh_token_isSet;
}

bool OAIAccountCartAdd::is_zoho_refresh_token_Valid() const{
    return m_zoho_refresh_token_isValid;
}

QString OAIAccountCartAdd::getZohoRegion() const {
    return m_zoho_region;
}
void OAIAccountCartAdd::setZohoRegion(const QString &zoho_region) {
    m_zoho_region = zoho_region;
    m_zoho_region_isSet = true;
}

bool OAIAccountCartAdd::is_zoho_region_Set() const{
    return m_zoho_region_isSet;
}

bool OAIAccountCartAdd::is_zoho_region_Valid() const{
    return m_zoho_region_isValid;
}

QString OAIAccountCartAdd::getOttoClientId() const {
    return m_otto_client_id;
}
void OAIAccountCartAdd::setOttoClientId(const QString &otto_client_id) {
    m_otto_client_id = otto_client_id;
    m_otto_client_id_isSet = true;
}

bool OAIAccountCartAdd::is_otto_client_id_Set() const{
    return m_otto_client_id_isSet;
}

bool OAIAccountCartAdd::is_otto_client_id_Valid() const{
    return m_otto_client_id_isValid;
}

QString OAIAccountCartAdd::getOttoClientSecret() const {
    return m_otto_client_secret;
}
void OAIAccountCartAdd::setOttoClientSecret(const QString &otto_client_secret) {
    m_otto_client_secret = otto_client_secret;
    m_otto_client_secret_isSet = true;
}

bool OAIAccountCartAdd::is_otto_client_secret_Set() const{
    return m_otto_client_secret_isSet;
}

bool OAIAccountCartAdd::is_otto_client_secret_Valid() const{
    return m_otto_client_secret_isValid;
}

QString OAIAccountCartAdd::getOttoAppId() const {
    return m_otto_app_id;
}
void OAIAccountCartAdd::setOttoAppId(const QString &otto_app_id) {
    m_otto_app_id = otto_app_id;
    m_otto_app_id_isSet = true;
}

bool OAIAccountCartAdd::is_otto_app_id_Set() const{
    return m_otto_app_id_isSet;
}

bool OAIAccountCartAdd::is_otto_app_id_Valid() const{
    return m_otto_app_id_isValid;
}

QString OAIAccountCartAdd::getOttoRefreshToken() const {
    return m_otto_refresh_token;
}
void OAIAccountCartAdd::setOttoRefreshToken(const QString &otto_refresh_token) {
    m_otto_refresh_token = otto_refresh_token;
    m_otto_refresh_token_isSet = true;
}

bool OAIAccountCartAdd::is_otto_refresh_token_Set() const{
    return m_otto_refresh_token_isSet;
}

bool OAIAccountCartAdd::is_otto_refresh_token_Valid() const{
    return m_otto_refresh_token_isValid;
}

QString OAIAccountCartAdd::getOttoEnvironment() const {
    return m_otto_environment;
}
void OAIAccountCartAdd::setOttoEnvironment(const QString &otto_environment) {
    m_otto_environment = otto_environment;
    m_otto_environment_isSet = true;
}

bool OAIAccountCartAdd::is_otto_environment_Set() const{
    return m_otto_environment_isSet;
}

bool OAIAccountCartAdd::is_otto_environment_Valid() const{
    return m_otto_environment_isValid;
}

QString OAIAccountCartAdd::getOttoAccessToken() const {
    return m_otto_access_token;
}
void OAIAccountCartAdd::setOttoAccessToken(const QString &otto_access_token) {
    m_otto_access_token = otto_access_token;
    m_otto_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_otto_access_token_Set() const{
    return m_otto_access_token_isSet;
}

bool OAIAccountCartAdd::is_otto_access_token_Valid() const{
    return m_otto_access_token_isValid;
}

QString OAIAccountCartAdd::getTiktokshopAppKey() const {
    return m_tiktokshop_app_key;
}
void OAIAccountCartAdd::setTiktokshopAppKey(const QString &tiktokshop_app_key) {
    m_tiktokshop_app_key = tiktokshop_app_key;
    m_tiktokshop_app_key_isSet = true;
}

bool OAIAccountCartAdd::is_tiktokshop_app_key_Set() const{
    return m_tiktokshop_app_key_isSet;
}

bool OAIAccountCartAdd::is_tiktokshop_app_key_Valid() const{
    return m_tiktokshop_app_key_isValid;
}

QString OAIAccountCartAdd::getTiktokshopAppSecret() const {
    return m_tiktokshop_app_secret;
}
void OAIAccountCartAdd::setTiktokshopAppSecret(const QString &tiktokshop_app_secret) {
    m_tiktokshop_app_secret = tiktokshop_app_secret;
    m_tiktokshop_app_secret_isSet = true;
}

bool OAIAccountCartAdd::is_tiktokshop_app_secret_Set() const{
    return m_tiktokshop_app_secret_isSet;
}

bool OAIAccountCartAdd::is_tiktokshop_app_secret_Valid() const{
    return m_tiktokshop_app_secret_isValid;
}

QString OAIAccountCartAdd::getTiktokshopRefreshToken() const {
    return m_tiktokshop_refresh_token;
}
void OAIAccountCartAdd::setTiktokshopRefreshToken(const QString &tiktokshop_refresh_token) {
    m_tiktokshop_refresh_token = tiktokshop_refresh_token;
    m_tiktokshop_refresh_token_isSet = true;
}

bool OAIAccountCartAdd::is_tiktokshop_refresh_token_Set() const{
    return m_tiktokshop_refresh_token_isSet;
}

bool OAIAccountCartAdd::is_tiktokshop_refresh_token_Valid() const{
    return m_tiktokshop_refresh_token_isValid;
}

QString OAIAccountCartAdd::getTiktokshopAccessToken() const {
    return m_tiktokshop_access_token;
}
void OAIAccountCartAdd::setTiktokshopAccessToken(const QString &tiktokshop_access_token) {
    m_tiktokshop_access_token = tiktokshop_access_token;
    m_tiktokshop_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_tiktokshop_access_token_Set() const{
    return m_tiktokshop_access_token_isSet;
}

bool OAIAccountCartAdd::is_tiktokshop_access_token_Valid() const{
    return m_tiktokshop_access_token_isValid;
}

QString OAIAccountCartAdd::getSallaClientId() const {
    return m_salla_client_id;
}
void OAIAccountCartAdd::setSallaClientId(const QString &salla_client_id) {
    m_salla_client_id = salla_client_id;
    m_salla_client_id_isSet = true;
}

bool OAIAccountCartAdd::is_salla_client_id_Set() const{
    return m_salla_client_id_isSet;
}

bool OAIAccountCartAdd::is_salla_client_id_Valid() const{
    return m_salla_client_id_isValid;
}

QString OAIAccountCartAdd::getSallaClientSecret() const {
    return m_salla_client_secret;
}
void OAIAccountCartAdd::setSallaClientSecret(const QString &salla_client_secret) {
    m_salla_client_secret = salla_client_secret;
    m_salla_client_secret_isSet = true;
}

bool OAIAccountCartAdd::is_salla_client_secret_Set() const{
    return m_salla_client_secret_isSet;
}

bool OAIAccountCartAdd::is_salla_client_secret_Valid() const{
    return m_salla_client_secret_isValid;
}

QString OAIAccountCartAdd::getSallaRefreshToken() const {
    return m_salla_refresh_token;
}
void OAIAccountCartAdd::setSallaRefreshToken(const QString &salla_refresh_token) {
    m_salla_refresh_token = salla_refresh_token;
    m_salla_refresh_token_isSet = true;
}

bool OAIAccountCartAdd::is_salla_refresh_token_Set() const{
    return m_salla_refresh_token_isSet;
}

bool OAIAccountCartAdd::is_salla_refresh_token_Valid() const{
    return m_salla_refresh_token_isValid;
}

QString OAIAccountCartAdd::getSallaAccessToken() const {
    return m_salla_access_token;
}
void OAIAccountCartAdd::setSallaAccessToken(const QString &salla_access_token) {
    m_salla_access_token = salla_access_token;
    m_salla_access_token_isSet = true;
}

bool OAIAccountCartAdd::is_salla_access_token_Set() const{
    return m_salla_access_token_isSet;
}

bool OAIAccountCartAdd::is_salla_access_token_Valid() const{
    return m_salla_access_token_isValid;
}

bool OAIAccountCartAdd::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cart_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bridge_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_root_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validate_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_verify_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_db_tables_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_agent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ftp_host_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ftp_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ftp_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ftp_port_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ftp_store_dir_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_3dcart_private_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_3dcart_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_3dcartapi_api_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amazon_sp_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amazon_sp_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amazon_sp_refresh_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amazon_sp_aws_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amazon_sp_api_environment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_amazon_seller_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_aspdotnetstorefront_api_user_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_aspdotnetstorefront_api_pass_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bigcommerceapi_admin_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bigcommerceapi_api_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bigcommerceapi_api_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bigcommerceapi_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bigcommerceapi_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bigcommerceapi_context_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bol_api_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bol_api_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bol_retailer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_demandware_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_demandware_api_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_demandware_user_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_demandware_user_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ebay_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ebay_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ebay_runame_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ebay_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ebay_refresh_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ebay_environment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ebay_site_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_walmart_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_walmart_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_walmart_environment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_walmart_channel_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_walmart_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ecwid_acess_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ecwid_store_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lazada_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lazada_app_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lazada_refresh_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lazada_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lightspeed_api_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lightspeed_api_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etsy_keystring_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etsy_shared_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etsy_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etsy_token_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etsy_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etsy_refresh_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_facebook_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_facebook_app_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_facebook_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_facebook_business_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_neto_api_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_neto_api_username_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shopline_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shopline_app_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shopline_app_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shopify_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shopify_api_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shopify_api_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shopify_shared_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shoplazza_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shoplazza_shared_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shopware_access_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shopware_api_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shopware_api_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_miva_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_miva_signature_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tiendanube_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tiendanube_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tiendanube_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_volusion_login_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_volusion_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hybris_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hybris_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hybris_username_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hybris_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hybris_websites.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_square_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_square_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_square_refresh_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_squarespace_api_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_squarespace_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_squarespace_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_squarespace_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_squarespace_refresh_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commercehq_api_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commercehq_api_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wc_consumer_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wc_consumer_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_magento_consumer_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_magento_consumer_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_magento_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_magento_token_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prestashop_webservice_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wix_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wix_app_secret_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wix_instance_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wix_refresh_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mercado_libre_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mercado_libre_app_secret_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mercado_libre_refresh_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zid_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zid_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zid_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zid_authorization_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zid_refresh_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flipkart_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_flipkart_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allegro_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allegro_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allegro_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allegro_refresh_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allegro_environment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zoho_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zoho_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zoho_refresh_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zoho_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_otto_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_otto_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_otto_app_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_otto_refresh_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_otto_environment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_otto_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tiktokshop_app_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tiktokshop_app_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tiktokshop_refresh_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tiktokshop_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_salla_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_salla_client_secret_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_salla_refresh_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_salla_access_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountCartAdd::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_cart_id_isValid && m_wix_app_id_isValid && m_wix_app_secret_key_isValid && true;
}

} // namespace OpenAPI
