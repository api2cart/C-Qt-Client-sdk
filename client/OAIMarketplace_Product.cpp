/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMarketplace_Product.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMarketplace_Product::OAIMarketplace_Product(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMarketplace_Product::OAIMarketplace_Product() {
    this->initializeModel();
}

OAIMarketplace_Product::~OAIMarketplace_Product() {}

void OAIMarketplace_Product::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_u_asin_isSet = false;
    m_u_asin_isValid = false;

    m_u_ean_isSet = false;
    m_u_ean_isValid = false;

    m_u_gtin_isSet = false;
    m_u_gtin_isValid = false;

    m_u_isbn_isSet = false;
    m_u_isbn_isValid = false;

    m_u_mpn_isSet = false;
    m_u_mpn_isValid = false;

    m_u_upc_isSet = false;
    m_u_upc_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_images_isSet = false;
    m_images_isValid = false;

    m_product_options_isSet = false;
    m_product_options_isValid = false;

    m_manufacturer_isSet = false;
    m_manufacturer_isValid = false;

    m_brand_isSet = false;
    m_brand_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;

    m_weight_unit_isSet = false;
    m_weight_unit_isValid = false;

    m_dimensions_unit_isSet = false;
    m_dimensions_unit_isValid = false;

    m_width_isSet = false;
    m_width_isValid = false;

    m_height_isSet = false;
    m_height_isValid = false;

    m_length_isSet = false;
    m_length_isValid = false;

    m_additional_fields_isSet = false;
    m_additional_fields_isValid = false;

    m_custom_fields_isSet = false;
    m_custom_fields_isValid = false;
}

void OAIMarketplace_Product::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMarketplace_Product::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_u_asin_isValid = ::OpenAPI::fromJsonValue(m_u_asin, json[QString("u_asin")]);
    m_u_asin_isSet = !json[QString("u_asin")].isNull() && m_u_asin_isValid;

    m_u_ean_isValid = ::OpenAPI::fromJsonValue(m_u_ean, json[QString("u_ean")]);
    m_u_ean_isSet = !json[QString("u_ean")].isNull() && m_u_ean_isValid;

    m_u_gtin_isValid = ::OpenAPI::fromJsonValue(m_u_gtin, json[QString("u_gtin")]);
    m_u_gtin_isSet = !json[QString("u_gtin")].isNull() && m_u_gtin_isValid;

    m_u_isbn_isValid = ::OpenAPI::fromJsonValue(m_u_isbn, json[QString("u_isbn")]);
    m_u_isbn_isSet = !json[QString("u_isbn")].isNull() && m_u_isbn_isValid;

    m_u_mpn_isValid = ::OpenAPI::fromJsonValue(m_u_mpn, json[QString("u_mpn")]);
    m_u_mpn_isSet = !json[QString("u_mpn")].isNull() && m_u_mpn_isValid;

    m_u_upc_isValid = ::OpenAPI::fromJsonValue(m_u_upc, json[QString("u_upc")]);
    m_u_upc_isSet = !json[QString("u_upc")].isNull() && m_u_upc_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_images_isValid = ::OpenAPI::fromJsonValue(m_images, json[QString("images")]);
    m_images_isSet = !json[QString("images")].isNull() && m_images_isValid;

    m_product_options_isValid = ::OpenAPI::fromJsonValue(m_product_options, json[QString("product_options")]);
    m_product_options_isSet = !json[QString("product_options")].isNull() && m_product_options_isValid;

    m_manufacturer_isValid = ::OpenAPI::fromJsonValue(m_manufacturer, json[QString("manufacturer")]);
    m_manufacturer_isSet = !json[QString("manufacturer")].isNull() && m_manufacturer_isValid;

    m_brand_isValid = ::OpenAPI::fromJsonValue(m_brand, json[QString("brand")]);
    m_brand_isSet = !json[QString("brand")].isNull() && m_brand_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("weight")]);
    m_weight_isSet = !json[QString("weight")].isNull() && m_weight_isValid;

    m_weight_unit_isValid = ::OpenAPI::fromJsonValue(m_weight_unit, json[QString("weight_unit")]);
    m_weight_unit_isSet = !json[QString("weight_unit")].isNull() && m_weight_unit_isValid;

    m_dimensions_unit_isValid = ::OpenAPI::fromJsonValue(m_dimensions_unit, json[QString("dimensions_unit")]);
    m_dimensions_unit_isSet = !json[QString("dimensions_unit")].isNull() && m_dimensions_unit_isValid;

    m_width_isValid = ::OpenAPI::fromJsonValue(m_width, json[QString("width")]);
    m_width_isSet = !json[QString("width")].isNull() && m_width_isValid;

    m_height_isValid = ::OpenAPI::fromJsonValue(m_height, json[QString("height")]);
    m_height_isSet = !json[QString("height")].isNull() && m_height_isValid;

    m_length_isValid = ::OpenAPI::fromJsonValue(m_length, json[QString("length")]);
    m_length_isSet = !json[QString("length")].isNull() && m_length_isValid;

    m_additional_fields_isValid = ::OpenAPI::fromJsonValue(m_additional_fields, json[QString("additional_fields")]);
    m_additional_fields_isSet = !json[QString("additional_fields")].isNull() && m_additional_fields_isValid;

    m_custom_fields_isValid = ::OpenAPI::fromJsonValue(m_custom_fields, json[QString("custom_fields")]);
    m_custom_fields_isSet = !json[QString("custom_fields")].isNull() && m_custom_fields_isValid;
}

QString OAIMarketplace_Product::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMarketplace_Product::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_u_asin_isSet) {
        obj.insert(QString("u_asin"), ::OpenAPI::toJsonValue(m_u_asin));
    }
    if (m_u_ean_isSet) {
        obj.insert(QString("u_ean"), ::OpenAPI::toJsonValue(m_u_ean));
    }
    if (m_u_gtin_isSet) {
        obj.insert(QString("u_gtin"), ::OpenAPI::toJsonValue(m_u_gtin));
    }
    if (m_u_isbn_isSet) {
        obj.insert(QString("u_isbn"), ::OpenAPI::toJsonValue(m_u_isbn));
    }
    if (m_u_mpn_isSet) {
        obj.insert(QString("u_mpn"), ::OpenAPI::toJsonValue(m_u_mpn));
    }
    if (m_u_upc_isSet) {
        obj.insert(QString("u_upc"), ::OpenAPI::toJsonValue(m_u_upc));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_images.size() > 0) {
        obj.insert(QString("images"), ::OpenAPI::toJsonValue(m_images));
    }
    if (m_product_options.size() > 0) {
        obj.insert(QString("product_options"), ::OpenAPI::toJsonValue(m_product_options));
    }
    if (m_manufacturer_isSet) {
        obj.insert(QString("manufacturer"), ::OpenAPI::toJsonValue(m_manufacturer));
    }
    if (m_brand_isSet) {
        obj.insert(QString("brand"), ::OpenAPI::toJsonValue(m_brand));
    }
    if (m_weight_isSet) {
        obj.insert(QString("weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    if (m_weight_unit_isSet) {
        obj.insert(QString("weight_unit"), ::OpenAPI::toJsonValue(m_weight_unit));
    }
    if (m_dimensions_unit_isSet) {
        obj.insert(QString("dimensions_unit"), ::OpenAPI::toJsonValue(m_dimensions_unit));
    }
    if (m_width_isSet) {
        obj.insert(QString("width"), ::OpenAPI::toJsonValue(m_width));
    }
    if (m_height_isSet) {
        obj.insert(QString("height"), ::OpenAPI::toJsonValue(m_height));
    }
    if (m_length_isSet) {
        obj.insert(QString("length"), ::OpenAPI::toJsonValue(m_length));
    }
    if (m_additional_fields_isSet) {
        obj.insert(QString("additional_fields"), ::OpenAPI::toJsonValue(m_additional_fields));
    }
    if (m_custom_fields_isSet) {
        obj.insert(QString("custom_fields"), ::OpenAPI::toJsonValue(m_custom_fields));
    }
    return obj;
}

QString OAIMarketplace_Product::getId() const {
    return m_id;
}
void OAIMarketplace_Product::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIMarketplace_Product::is_id_Set() const{
    return m_id_isSet;
}

bool OAIMarketplace_Product::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIMarketplace_Product::getType() const {
    return m_type;
}
void OAIMarketplace_Product::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIMarketplace_Product::is_type_Set() const{
    return m_type_isSet;
}

bool OAIMarketplace_Product::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIMarketplace_Product::getUAsin() const {
    return m_u_asin;
}
void OAIMarketplace_Product::setUAsin(const QString &u_asin) {
    m_u_asin = u_asin;
    m_u_asin_isSet = true;
}

bool OAIMarketplace_Product::is_u_asin_Set() const{
    return m_u_asin_isSet;
}

bool OAIMarketplace_Product::is_u_asin_Valid() const{
    return m_u_asin_isValid;
}

QString OAIMarketplace_Product::getUEan() const {
    return m_u_ean;
}
void OAIMarketplace_Product::setUEan(const QString &u_ean) {
    m_u_ean = u_ean;
    m_u_ean_isSet = true;
}

bool OAIMarketplace_Product::is_u_ean_Set() const{
    return m_u_ean_isSet;
}

bool OAIMarketplace_Product::is_u_ean_Valid() const{
    return m_u_ean_isValid;
}

QString OAIMarketplace_Product::getUGtin() const {
    return m_u_gtin;
}
void OAIMarketplace_Product::setUGtin(const QString &u_gtin) {
    m_u_gtin = u_gtin;
    m_u_gtin_isSet = true;
}

bool OAIMarketplace_Product::is_u_gtin_Set() const{
    return m_u_gtin_isSet;
}

bool OAIMarketplace_Product::is_u_gtin_Valid() const{
    return m_u_gtin_isValid;
}

QString OAIMarketplace_Product::getUIsbn() const {
    return m_u_isbn;
}
void OAIMarketplace_Product::setUIsbn(const QString &u_isbn) {
    m_u_isbn = u_isbn;
    m_u_isbn_isSet = true;
}

bool OAIMarketplace_Product::is_u_isbn_Set() const{
    return m_u_isbn_isSet;
}

bool OAIMarketplace_Product::is_u_isbn_Valid() const{
    return m_u_isbn_isValid;
}

QString OAIMarketplace_Product::getUMpn() const {
    return m_u_mpn;
}
void OAIMarketplace_Product::setUMpn(const QString &u_mpn) {
    m_u_mpn = u_mpn;
    m_u_mpn_isSet = true;
}

bool OAIMarketplace_Product::is_u_mpn_Set() const{
    return m_u_mpn_isSet;
}

bool OAIMarketplace_Product::is_u_mpn_Valid() const{
    return m_u_mpn_isValid;
}

QString OAIMarketplace_Product::getUUpc() const {
    return m_u_upc;
}
void OAIMarketplace_Product::setUUpc(const QString &u_upc) {
    m_u_upc = u_upc;
    m_u_upc_isSet = true;
}

bool OAIMarketplace_Product::is_u_upc_Set() const{
    return m_u_upc_isSet;
}

bool OAIMarketplace_Product::is_u_upc_Valid() const{
    return m_u_upc_isValid;
}

QString OAIMarketplace_Product::getName() const {
    return m_name;
}
void OAIMarketplace_Product::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIMarketplace_Product::is_name_Set() const{
    return m_name_isSet;
}

bool OAIMarketplace_Product::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIMarketplace_Product::getDescription() const {
    return m_description;
}
void OAIMarketplace_Product::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIMarketplace_Product::is_description_Set() const{
    return m_description_isSet;
}

bool OAIMarketplace_Product::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIMarketplace_Product::getUrl() const {
    return m_url;
}
void OAIMarketplace_Product::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIMarketplace_Product::is_url_Set() const{
    return m_url_isSet;
}

bool OAIMarketplace_Product::is_url_Valid() const{
    return m_url_isValid;
}

double OAIMarketplace_Product::getPrice() const {
    return m_price;
}
void OAIMarketplace_Product::setPrice(const double &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIMarketplace_Product::is_price_Set() const{
    return m_price_isSet;
}

bool OAIMarketplace_Product::is_price_Valid() const{
    return m_price_isValid;
}

QList<OAIImage> OAIMarketplace_Product::getImages() const {
    return m_images;
}
void OAIMarketplace_Product::setImages(const QList<OAIImage> &images) {
    m_images = images;
    m_images_isSet = true;
}

bool OAIMarketplace_Product::is_images_Set() const{
    return m_images_isSet;
}

bool OAIMarketplace_Product::is_images_Valid() const{
    return m_images_isValid;
}

QList<OAIProduct_Option> OAIMarketplace_Product::getProductOptions() const {
    return m_product_options;
}
void OAIMarketplace_Product::setProductOptions(const QList<OAIProduct_Option> &product_options) {
    m_product_options = product_options;
    m_product_options_isSet = true;
}

bool OAIMarketplace_Product::is_product_options_Set() const{
    return m_product_options_isSet;
}

bool OAIMarketplace_Product::is_product_options_Valid() const{
    return m_product_options_isValid;
}

QString OAIMarketplace_Product::getManufacturer() const {
    return m_manufacturer;
}
void OAIMarketplace_Product::setManufacturer(const QString &manufacturer) {
    m_manufacturer = manufacturer;
    m_manufacturer_isSet = true;
}

bool OAIMarketplace_Product::is_manufacturer_Set() const{
    return m_manufacturer_isSet;
}

bool OAIMarketplace_Product::is_manufacturer_Valid() const{
    return m_manufacturer_isValid;
}

QString OAIMarketplace_Product::getBrand() const {
    return m_brand;
}
void OAIMarketplace_Product::setBrand(const QString &brand) {
    m_brand = brand;
    m_brand_isSet = true;
}

bool OAIMarketplace_Product::is_brand_Set() const{
    return m_brand_isSet;
}

bool OAIMarketplace_Product::is_brand_Valid() const{
    return m_brand_isValid;
}

double OAIMarketplace_Product::getWeight() const {
    return m_weight;
}
void OAIMarketplace_Product::setWeight(const double &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAIMarketplace_Product::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAIMarketplace_Product::is_weight_Valid() const{
    return m_weight_isValid;
}

QString OAIMarketplace_Product::getWeightUnit() const {
    return m_weight_unit;
}
void OAIMarketplace_Product::setWeightUnit(const QString &weight_unit) {
    m_weight_unit = weight_unit;
    m_weight_unit_isSet = true;
}

bool OAIMarketplace_Product::is_weight_unit_Set() const{
    return m_weight_unit_isSet;
}

bool OAIMarketplace_Product::is_weight_unit_Valid() const{
    return m_weight_unit_isValid;
}

QString OAIMarketplace_Product::getDimensionsUnit() const {
    return m_dimensions_unit;
}
void OAIMarketplace_Product::setDimensionsUnit(const QString &dimensions_unit) {
    m_dimensions_unit = dimensions_unit;
    m_dimensions_unit_isSet = true;
}

bool OAIMarketplace_Product::is_dimensions_unit_Set() const{
    return m_dimensions_unit_isSet;
}

bool OAIMarketplace_Product::is_dimensions_unit_Valid() const{
    return m_dimensions_unit_isValid;
}

double OAIMarketplace_Product::getWidth() const {
    return m_width;
}
void OAIMarketplace_Product::setWidth(const double &width) {
    m_width = width;
    m_width_isSet = true;
}

bool OAIMarketplace_Product::is_width_Set() const{
    return m_width_isSet;
}

bool OAIMarketplace_Product::is_width_Valid() const{
    return m_width_isValid;
}

double OAIMarketplace_Product::getHeight() const {
    return m_height;
}
void OAIMarketplace_Product::setHeight(const double &height) {
    m_height = height;
    m_height_isSet = true;
}

bool OAIMarketplace_Product::is_height_Set() const{
    return m_height_isSet;
}

bool OAIMarketplace_Product::is_height_Valid() const{
    return m_height_isValid;
}

double OAIMarketplace_Product::getLength() const {
    return m_length;
}
void OAIMarketplace_Product::setLength(const double &length) {
    m_length = length;
    m_length_isSet = true;
}

bool OAIMarketplace_Product::is_length_Set() const{
    return m_length_isSet;
}

bool OAIMarketplace_Product::is_length_Valid() const{
    return m_length_isValid;
}

OAIObject OAIMarketplace_Product::getAdditionalFields() const {
    return m_additional_fields;
}
void OAIMarketplace_Product::setAdditionalFields(const OAIObject &additional_fields) {
    m_additional_fields = additional_fields;
    m_additional_fields_isSet = true;
}

bool OAIMarketplace_Product::is_additional_fields_Set() const{
    return m_additional_fields_isSet;
}

bool OAIMarketplace_Product::is_additional_fields_Valid() const{
    return m_additional_fields_isValid;
}

OAIObject OAIMarketplace_Product::getCustomFields() const {
    return m_custom_fields;
}
void OAIMarketplace_Product::setCustomFields(const OAIObject &custom_fields) {
    m_custom_fields = custom_fields;
    m_custom_fields_isSet = true;
}

bool OAIMarketplace_Product::is_custom_fields_Set() const{
    return m_custom_fields_isSet;
}

bool OAIMarketplace_Product::is_custom_fields_Valid() const{
    return m_custom_fields_isValid;
}

bool OAIMarketplace_Product::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_u_asin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_u_ean_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_u_gtin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_u_isbn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_u_mpn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_u_upc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_images.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_options.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_manufacturer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_brand_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dimensions_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_width_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_height_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_length_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_fields_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_fields_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMarketplace_Product::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
