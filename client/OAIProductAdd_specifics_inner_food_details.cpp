/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductAdd_specifics_inner_food_details.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductAdd_specifics_inner_food_details::OAIProductAdd_specifics_inner_food_details(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductAdd_specifics_inner_food_details::OAIProductAdd_specifics_inner_food_details() {
    this->initializeModel();
}

OAIProductAdd_specifics_inner_food_details::~OAIProductAdd_specifics_inner_food_details() {}

void OAIProductAdd_specifics_inner_food_details::initializeModel() {

    m_calories_isSet = false;
    m_calories_isValid = false;
}

void OAIProductAdd_specifics_inner_food_details::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductAdd_specifics_inner_food_details::fromJsonObject(QJsonObject json) {

    m_calories_isValid = ::OpenAPI::fromJsonValue(m_calories, json[QString("calories")]);
    m_calories_isSet = !json[QString("calories")].isNull() && m_calories_isValid;
}

QString OAIProductAdd_specifics_inner_food_details::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductAdd_specifics_inner_food_details::asJsonObject() const {
    QJsonObject obj;
    if (m_calories_isSet) {
        obj.insert(QString("calories"), ::OpenAPI::toJsonValue(m_calories));
    }
    return obj;
}

double OAIProductAdd_specifics_inner_food_details::getCalories() const {
    return m_calories;
}
void OAIProductAdd_specifics_inner_food_details::setCalories(const double &calories) {
    m_calories = calories;
    m_calories_isSet = true;
}

bool OAIProductAdd_specifics_inner_food_details::is_calories_Set() const{
    return m_calories_isSet;
}

bool OAIProductAdd_specifics_inner_food_details::is_calories_Valid() const{
    return m_calories_isValid;
}

bool OAIProductAdd_specifics_inner_food_details::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_calories_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductAdd_specifics_inner_food_details::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_calories_isValid && true;
}

} // namespace OpenAPI
