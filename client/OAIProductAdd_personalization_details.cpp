/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductAdd_personalization_details.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductAdd_personalization_details::OAIProductAdd_personalization_details(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductAdd_personalization_details::OAIProductAdd_personalization_details() {
    this->initializeModel();
}

OAIProductAdd_personalization_details::~OAIProductAdd_personalization_details() {}

void OAIProductAdd_personalization_details::initializeModel() {

    m_is_personalizable_isSet = false;
    m_is_personalizable_isValid = false;

    m_personalization_is_required_isSet = false;
    m_personalization_is_required_isValid = false;

    m_personalization_char_count_max_isSet = false;
    m_personalization_char_count_max_isValid = false;

    m_personalization_instructions_isSet = false;
    m_personalization_instructions_isValid = false;
}

void OAIProductAdd_personalization_details::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductAdd_personalization_details::fromJsonObject(QJsonObject json) {

    m_is_personalizable_isValid = ::OpenAPI::fromJsonValue(m_is_personalizable, json[QString("is_personalizable")]);
    m_is_personalizable_isSet = !json[QString("is_personalizable")].isNull() && m_is_personalizable_isValid;

    m_personalization_is_required_isValid = ::OpenAPI::fromJsonValue(m_personalization_is_required, json[QString("personalization_is_required")]);
    m_personalization_is_required_isSet = !json[QString("personalization_is_required")].isNull() && m_personalization_is_required_isValid;

    m_personalization_char_count_max_isValid = ::OpenAPI::fromJsonValue(m_personalization_char_count_max, json[QString("personalization_char_count_max")]);
    m_personalization_char_count_max_isSet = !json[QString("personalization_char_count_max")].isNull() && m_personalization_char_count_max_isValid;

    m_personalization_instructions_isValid = ::OpenAPI::fromJsonValue(m_personalization_instructions, json[QString("personalization_instructions")]);
    m_personalization_instructions_isSet = !json[QString("personalization_instructions")].isNull() && m_personalization_instructions_isValid;
}

QString OAIProductAdd_personalization_details::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductAdd_personalization_details::asJsonObject() const {
    QJsonObject obj;
    if (m_is_personalizable_isSet) {
        obj.insert(QString("is_personalizable"), ::OpenAPI::toJsonValue(m_is_personalizable));
    }
    if (m_personalization_is_required_isSet) {
        obj.insert(QString("personalization_is_required"), ::OpenAPI::toJsonValue(m_personalization_is_required));
    }
    if (m_personalization_char_count_max_isSet) {
        obj.insert(QString("personalization_char_count_max"), ::OpenAPI::toJsonValue(m_personalization_char_count_max));
    }
    if (m_personalization_instructions_isSet) {
        obj.insert(QString("personalization_instructions"), ::OpenAPI::toJsonValue(m_personalization_instructions));
    }
    return obj;
}

bool OAIProductAdd_personalization_details::isIsPersonalizable() const {
    return m_is_personalizable;
}
void OAIProductAdd_personalization_details::setIsPersonalizable(const bool &is_personalizable) {
    m_is_personalizable = is_personalizable;
    m_is_personalizable_isSet = true;
}

bool OAIProductAdd_personalization_details::is_is_personalizable_Set() const{
    return m_is_personalizable_isSet;
}

bool OAIProductAdd_personalization_details::is_is_personalizable_Valid() const{
    return m_is_personalizable_isValid;
}

bool OAIProductAdd_personalization_details::isPersonalizationIsRequired() const {
    return m_personalization_is_required;
}
void OAIProductAdd_personalization_details::setPersonalizationIsRequired(const bool &personalization_is_required) {
    m_personalization_is_required = personalization_is_required;
    m_personalization_is_required_isSet = true;
}

bool OAIProductAdd_personalization_details::is_personalization_is_required_Set() const{
    return m_personalization_is_required_isSet;
}

bool OAIProductAdd_personalization_details::is_personalization_is_required_Valid() const{
    return m_personalization_is_required_isValid;
}

qint32 OAIProductAdd_personalization_details::getPersonalizationCharCountMax() const {
    return m_personalization_char_count_max;
}
void OAIProductAdd_personalization_details::setPersonalizationCharCountMax(const qint32 &personalization_char_count_max) {
    m_personalization_char_count_max = personalization_char_count_max;
    m_personalization_char_count_max_isSet = true;
}

bool OAIProductAdd_personalization_details::is_personalization_char_count_max_Set() const{
    return m_personalization_char_count_max_isSet;
}

bool OAIProductAdd_personalization_details::is_personalization_char_count_max_Valid() const{
    return m_personalization_char_count_max_isValid;
}

QString OAIProductAdd_personalization_details::getPersonalizationInstructions() const {
    return m_personalization_instructions;
}
void OAIProductAdd_personalization_details::setPersonalizationInstructions(const QString &personalization_instructions) {
    m_personalization_instructions = personalization_instructions;
    m_personalization_instructions_isSet = true;
}

bool OAIProductAdd_personalization_details::is_personalization_instructions_Set() const{
    return m_personalization_instructions_isSet;
}

bool OAIProductAdd_personalization_details::is_personalization_instructions_Valid() const{
    return m_personalization_instructions_isValid;
}

bool OAIProductAdd_personalization_details::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_personalizable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_personalization_is_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_personalization_char_count_max_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_personalization_instructions_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductAdd_personalization_details::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_is_personalizable_isValid && true;
}

} // namespace OpenAPI
