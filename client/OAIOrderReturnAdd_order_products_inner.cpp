/**
 * API2Cart OpenAPI
 * API2Cart
 *
 * The version of the OpenAPI document: 1.1
 * Contact: contact@api2cart.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderReturnAdd_order_products_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderReturnAdd_order_products_inner::OAIOrderReturnAdd_order_products_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderReturnAdd_order_products_inner::OAIOrderReturnAdd_order_products_inner() {
    this->initializeModel();
}

OAIOrderReturnAdd_order_products_inner::~OAIOrderReturnAdd_order_products_inner() {}

void OAIOrderReturnAdd_order_products_inner::initializeModel() {

    m_order_product_id_isSet = false;
    m_order_product_id_isValid = false;

    m_order_product_quantity_isSet = false;
    m_order_product_quantity_isValid = false;

    m_order_product_reason_id_isSet = false;
    m_order_product_reason_id_isValid = false;

    m_order_product_action_id_isSet = false;
    m_order_product_action_id_isValid = false;

    m_order_product_customer_comment_isSet = false;
    m_order_product_customer_comment_isValid = false;

    m_order_product_handling_status_isSet = false;
    m_order_product_handling_status_isValid = false;

    m_order_product_condition_isSet = false;
    m_order_product_condition_isValid = false;

    m_order_product_reason_isSet = false;
    m_order_product_reason_isValid = false;

    m_order_product_status_isSet = false;
    m_order_product_status_isValid = false;
}

void OAIOrderReturnAdd_order_products_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderReturnAdd_order_products_inner::fromJsonObject(QJsonObject json) {

    m_order_product_id_isValid = ::OpenAPI::fromJsonValue(m_order_product_id, json[QString("order_product_id")]);
    m_order_product_id_isSet = !json[QString("order_product_id")].isNull() && m_order_product_id_isValid;

    m_order_product_quantity_isValid = ::OpenAPI::fromJsonValue(m_order_product_quantity, json[QString("order_product_quantity")]);
    m_order_product_quantity_isSet = !json[QString("order_product_quantity")].isNull() && m_order_product_quantity_isValid;

    m_order_product_reason_id_isValid = ::OpenAPI::fromJsonValue(m_order_product_reason_id, json[QString("order_product_reason_id")]);
    m_order_product_reason_id_isSet = !json[QString("order_product_reason_id")].isNull() && m_order_product_reason_id_isValid;

    m_order_product_action_id_isValid = ::OpenAPI::fromJsonValue(m_order_product_action_id, json[QString("order_product_action_id")]);
    m_order_product_action_id_isSet = !json[QString("order_product_action_id")].isNull() && m_order_product_action_id_isValid;

    m_order_product_customer_comment_isValid = ::OpenAPI::fromJsonValue(m_order_product_customer_comment, json[QString("order_product_customer_comment")]);
    m_order_product_customer_comment_isSet = !json[QString("order_product_customer_comment")].isNull() && m_order_product_customer_comment_isValid;

    m_order_product_handling_status_isValid = ::OpenAPI::fromJsonValue(m_order_product_handling_status, json[QString("order_product_handling_status")]);
    m_order_product_handling_status_isSet = !json[QString("order_product_handling_status")].isNull() && m_order_product_handling_status_isValid;

    m_order_product_condition_isValid = ::OpenAPI::fromJsonValue(m_order_product_condition, json[QString("order_product_condition")]);
    m_order_product_condition_isSet = !json[QString("order_product_condition")].isNull() && m_order_product_condition_isValid;

    m_order_product_reason_isValid = ::OpenAPI::fromJsonValue(m_order_product_reason, json[QString("order_product_reason")]);
    m_order_product_reason_isSet = !json[QString("order_product_reason")].isNull() && m_order_product_reason_isValid;

    m_order_product_status_isValid = ::OpenAPI::fromJsonValue(m_order_product_status, json[QString("order_product_status")]);
    m_order_product_status_isSet = !json[QString("order_product_status")].isNull() && m_order_product_status_isValid;
}

QString OAIOrderReturnAdd_order_products_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderReturnAdd_order_products_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_order_product_id_isSet) {
        obj.insert(QString("order_product_id"), ::OpenAPI::toJsonValue(m_order_product_id));
    }
    if (m_order_product_quantity_isSet) {
        obj.insert(QString("order_product_quantity"), ::OpenAPI::toJsonValue(m_order_product_quantity));
    }
    if (m_order_product_reason_id_isSet) {
        obj.insert(QString("order_product_reason_id"), ::OpenAPI::toJsonValue(m_order_product_reason_id));
    }
    if (m_order_product_action_id_isSet) {
        obj.insert(QString("order_product_action_id"), ::OpenAPI::toJsonValue(m_order_product_action_id));
    }
    if (m_order_product_customer_comment_isSet) {
        obj.insert(QString("order_product_customer_comment"), ::OpenAPI::toJsonValue(m_order_product_customer_comment));
    }
    if (m_order_product_handling_status_isSet) {
        obj.insert(QString("order_product_handling_status"), ::OpenAPI::toJsonValue(m_order_product_handling_status));
    }
    if (m_order_product_condition_isSet) {
        obj.insert(QString("order_product_condition"), ::OpenAPI::toJsonValue(m_order_product_condition));
    }
    if (m_order_product_reason_isSet) {
        obj.insert(QString("order_product_reason"), ::OpenAPI::toJsonValue(m_order_product_reason));
    }
    if (m_order_product_status_isSet) {
        obj.insert(QString("order_product_status"), ::OpenAPI::toJsonValue(m_order_product_status));
    }
    return obj;
}

QString OAIOrderReturnAdd_order_products_inner::getOrderProductId() const {
    return m_order_product_id;
}
void OAIOrderReturnAdd_order_products_inner::setOrderProductId(const QString &order_product_id) {
    m_order_product_id = order_product_id;
    m_order_product_id_isSet = true;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_id_Set() const{
    return m_order_product_id_isSet;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_id_Valid() const{
    return m_order_product_id_isValid;
}

qint32 OAIOrderReturnAdd_order_products_inner::getOrderProductQuantity() const {
    return m_order_product_quantity;
}
void OAIOrderReturnAdd_order_products_inner::setOrderProductQuantity(const qint32 &order_product_quantity) {
    m_order_product_quantity = order_product_quantity;
    m_order_product_quantity_isSet = true;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_quantity_Set() const{
    return m_order_product_quantity_isSet;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_quantity_Valid() const{
    return m_order_product_quantity_isValid;
}

QString OAIOrderReturnAdd_order_products_inner::getOrderProductReasonId() const {
    return m_order_product_reason_id;
}
void OAIOrderReturnAdd_order_products_inner::setOrderProductReasonId(const QString &order_product_reason_id) {
    m_order_product_reason_id = order_product_reason_id;
    m_order_product_reason_id_isSet = true;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_reason_id_Set() const{
    return m_order_product_reason_id_isSet;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_reason_id_Valid() const{
    return m_order_product_reason_id_isValid;
}

QString OAIOrderReturnAdd_order_products_inner::getOrderProductActionId() const {
    return m_order_product_action_id;
}
void OAIOrderReturnAdd_order_products_inner::setOrderProductActionId(const QString &order_product_action_id) {
    m_order_product_action_id = order_product_action_id;
    m_order_product_action_id_isSet = true;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_action_id_Set() const{
    return m_order_product_action_id_isSet;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_action_id_Valid() const{
    return m_order_product_action_id_isValid;
}

QString OAIOrderReturnAdd_order_products_inner::getOrderProductCustomerComment() const {
    return m_order_product_customer_comment;
}
void OAIOrderReturnAdd_order_products_inner::setOrderProductCustomerComment(const QString &order_product_customer_comment) {
    m_order_product_customer_comment = order_product_customer_comment;
    m_order_product_customer_comment_isSet = true;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_customer_comment_Set() const{
    return m_order_product_customer_comment_isSet;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_customer_comment_Valid() const{
    return m_order_product_customer_comment_isValid;
}

QString OAIOrderReturnAdd_order_products_inner::getOrderProductHandlingStatus() const {
    return m_order_product_handling_status;
}
void OAIOrderReturnAdd_order_products_inner::setOrderProductHandlingStatus(const QString &order_product_handling_status) {
    m_order_product_handling_status = order_product_handling_status;
    m_order_product_handling_status_isSet = true;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_handling_status_Set() const{
    return m_order_product_handling_status_isSet;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_handling_status_Valid() const{
    return m_order_product_handling_status_isValid;
}

QString OAIOrderReturnAdd_order_products_inner::getOrderProductCondition() const {
    return m_order_product_condition;
}
void OAIOrderReturnAdd_order_products_inner::setOrderProductCondition(const QString &order_product_condition) {
    m_order_product_condition = order_product_condition;
    m_order_product_condition_isSet = true;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_condition_Set() const{
    return m_order_product_condition_isSet;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_condition_Valid() const{
    return m_order_product_condition_isValid;
}

QString OAIOrderReturnAdd_order_products_inner::getOrderProductReason() const {
    return m_order_product_reason;
}
void OAIOrderReturnAdd_order_products_inner::setOrderProductReason(const QString &order_product_reason) {
    m_order_product_reason = order_product_reason;
    m_order_product_reason_isSet = true;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_reason_Set() const{
    return m_order_product_reason_isSet;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_reason_Valid() const{
    return m_order_product_reason_isValid;
}

QString OAIOrderReturnAdd_order_products_inner::getOrderProductStatus() const {
    return m_order_product_status;
}
void OAIOrderReturnAdd_order_products_inner::setOrderProductStatus(const QString &order_product_status) {
    m_order_product_status = order_product_status;
    m_order_product_status_isSet = true;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_status_Set() const{
    return m_order_product_status_isSet;
}

bool OAIOrderReturnAdd_order_products_inner::is_order_product_status_Valid() const{
    return m_order_product_status_isValid;
}

bool OAIOrderReturnAdd_order_products_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_order_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_product_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_product_reason_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_product_action_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_product_customer_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_product_handling_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_product_condition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_product_reason_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_product_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderReturnAdd_order_products_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_order_product_id_isValid && m_order_product_quantity_isValid && m_order_product_reason_id_isValid && m_order_product_action_id_isValid && true;
}

} // namespace OpenAPI
